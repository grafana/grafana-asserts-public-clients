/*
Asserts, Inc

Asserts Public API

API version: 1.0.0
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AMReceiverSlack type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AMReceiverSlack{}

// AMReceiverSlack struct for AMReceiverSlack
type AMReceiverSlack struct {
	Channel              *string                 `json:"channel,omitempty"`
	Username             *string                 `json:"username,omitempty"`
	Actions              []AMReceiverSlackAction `json:"actions,omitempty"`
	Color                *string                 `json:"color,omitempty"`
	Fallback             *string                 `json:"fallback,omitempty"`
	Fields               []AMReceiverSlackField  `json:"fields,omitempty"`
	Footer               *string                 `json:"footer,omitempty"`
	Pretext              *string                 `json:"pretext,omitempty"`
	Text                 *string                 `json:"text,omitempty"`
	Title                *string                 `json:"title,omitempty"`
	HttpConfig           *AlertManagerHttp       `json:"httpConfig,omitempty"`
	SendResolved         *bool                   `json:"send_resolved,omitempty"`
	ApiUrl               *string                 `json:"api_url,omitempty"`
	ApiUrlFile           *string                 `json:"api_url_file,omitempty"`
	IconEmoji            *string                 `json:"icon_emoji,omitempty"`
	IconUrl              *string                 `json:"icon_url,omitempty"`
	LinkNames            *bool                   `json:"link_names,omitempty"`
	CallbackId           *string                 `json:"callback_id,omitempty"`
	MrkdwnIn             *string                 `json:"mrkdwn_in,omitempty"`
	ShortFields          *string                 `json:"short_fields,omitempty"`
	TitleLink            *string                 `json:"title_link,omitempty"`
	ImageUrl             *string                 `json:"image_url,omitempty"`
	ThumbUrl             *string                 `json:"thumb_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AMReceiverSlack AMReceiverSlack

// NewAMReceiverSlack instantiates a new AMReceiverSlack object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAMReceiverSlack() *AMReceiverSlack {
	this := AMReceiverSlack{}
	return &this
}

// NewAMReceiverSlackWithDefaults instantiates a new AMReceiverSlack object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAMReceiverSlackWithDefaults() *AMReceiverSlack {
	this := AMReceiverSlack{}
	return &this
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetChannel() string {
	if o == nil || IsNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetChannelOk() (*string, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *AMReceiverSlack) SetChannel(v string) {
	o.Channel = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AMReceiverSlack) SetUsername(v string) {
	o.Username = &v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetActions() []AMReceiverSlackAction {
	if o == nil || IsNil(o.Actions) {
		var ret []AMReceiverSlackAction
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetActionsOk() ([]AMReceiverSlackAction, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []AMReceiverSlackAction and assigns it to the Actions field.
func (o *AMReceiverSlack) SetActions(v []AMReceiverSlackAction) {
	o.Actions = v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *AMReceiverSlack) SetColor(v string) {
	o.Color = &v
}

// GetFallback returns the Fallback field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetFallback() string {
	if o == nil || IsNil(o.Fallback) {
		var ret string
		return ret
	}
	return *o.Fallback
}

// GetFallbackOk returns a tuple with the Fallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetFallbackOk() (*string, bool) {
	if o == nil || IsNil(o.Fallback) {
		return nil, false
	}
	return o.Fallback, true
}

// HasFallback returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasFallback() bool {
	if o != nil && !IsNil(o.Fallback) {
		return true
	}

	return false
}

// SetFallback gets a reference to the given string and assigns it to the Fallback field.
func (o *AMReceiverSlack) SetFallback(v string) {
	o.Fallback = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetFields() []AMReceiverSlackField {
	if o == nil || IsNil(o.Fields) {
		var ret []AMReceiverSlackField
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetFieldsOk() ([]AMReceiverSlackField, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []AMReceiverSlackField and assigns it to the Fields field.
func (o *AMReceiverSlack) SetFields(v []AMReceiverSlackField) {
	o.Fields = v
}

// GetFooter returns the Footer field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetFooter() string {
	if o == nil || IsNil(o.Footer) {
		var ret string
		return ret
	}
	return *o.Footer
}

// GetFooterOk returns a tuple with the Footer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetFooterOk() (*string, bool) {
	if o == nil || IsNil(o.Footer) {
		return nil, false
	}
	return o.Footer, true
}

// HasFooter returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasFooter() bool {
	if o != nil && !IsNil(o.Footer) {
		return true
	}

	return false
}

// SetFooter gets a reference to the given string and assigns it to the Footer field.
func (o *AMReceiverSlack) SetFooter(v string) {
	o.Footer = &v
}

// GetPretext returns the Pretext field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetPretext() string {
	if o == nil || IsNil(o.Pretext) {
		var ret string
		return ret
	}
	return *o.Pretext
}

// GetPretextOk returns a tuple with the Pretext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetPretextOk() (*string, bool) {
	if o == nil || IsNil(o.Pretext) {
		return nil, false
	}
	return o.Pretext, true
}

// HasPretext returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasPretext() bool {
	if o != nil && !IsNil(o.Pretext) {
		return true
	}

	return false
}

// SetPretext gets a reference to the given string and assigns it to the Pretext field.
func (o *AMReceiverSlack) SetPretext(v string) {
	o.Pretext = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *AMReceiverSlack) SetText(v string) {
	o.Text = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AMReceiverSlack) SetTitle(v string) {
	o.Title = &v
}

// GetHttpConfig returns the HttpConfig field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetHttpConfig() AlertManagerHttp {
	if o == nil || IsNil(o.HttpConfig) {
		var ret AlertManagerHttp
		return ret
	}
	return *o.HttpConfig
}

// GetHttpConfigOk returns a tuple with the HttpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetHttpConfigOk() (*AlertManagerHttp, bool) {
	if o == nil || IsNil(o.HttpConfig) {
		return nil, false
	}
	return o.HttpConfig, true
}

// HasHttpConfig returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasHttpConfig() bool {
	if o != nil && !IsNil(o.HttpConfig) {
		return true
	}

	return false
}

// SetHttpConfig gets a reference to the given AlertManagerHttp and assigns it to the HttpConfig field.
func (o *AMReceiverSlack) SetHttpConfig(v AlertManagerHttp) {
	o.HttpConfig = &v
}

// GetSendResolved returns the SendResolved field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetSendResolved() bool {
	if o == nil || IsNil(o.SendResolved) {
		var ret bool
		return ret
	}
	return *o.SendResolved
}

// GetSendResolvedOk returns a tuple with the SendResolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetSendResolvedOk() (*bool, bool) {
	if o == nil || IsNil(o.SendResolved) {
		return nil, false
	}
	return o.SendResolved, true
}

// HasSendResolved returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasSendResolved() bool {
	if o != nil && !IsNil(o.SendResolved) {
		return true
	}

	return false
}

// SetSendResolved gets a reference to the given bool and assigns it to the SendResolved field.
func (o *AMReceiverSlack) SetSendResolved(v bool) {
	o.SendResolved = &v
}

// GetApiUrl returns the ApiUrl field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetApiUrl() string {
	if o == nil || IsNil(o.ApiUrl) {
		var ret string
		return ret
	}
	return *o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApiUrl) {
		return nil, false
	}
	return o.ApiUrl, true
}

// HasApiUrl returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasApiUrl() bool {
	if o != nil && !IsNil(o.ApiUrl) {
		return true
	}

	return false
}

// SetApiUrl gets a reference to the given string and assigns it to the ApiUrl field.
func (o *AMReceiverSlack) SetApiUrl(v string) {
	o.ApiUrl = &v
}

// GetApiUrlFile returns the ApiUrlFile field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetApiUrlFile() string {
	if o == nil || IsNil(o.ApiUrlFile) {
		var ret string
		return ret
	}
	return *o.ApiUrlFile
}

// GetApiUrlFileOk returns a tuple with the ApiUrlFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetApiUrlFileOk() (*string, bool) {
	if o == nil || IsNil(o.ApiUrlFile) {
		return nil, false
	}
	return o.ApiUrlFile, true
}

// HasApiUrlFile returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasApiUrlFile() bool {
	if o != nil && !IsNil(o.ApiUrlFile) {
		return true
	}

	return false
}

// SetApiUrlFile gets a reference to the given string and assigns it to the ApiUrlFile field.
func (o *AMReceiverSlack) SetApiUrlFile(v string) {
	o.ApiUrlFile = &v
}

// GetIconEmoji returns the IconEmoji field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetIconEmoji() string {
	if o == nil || IsNil(o.IconEmoji) {
		var ret string
		return ret
	}
	return *o.IconEmoji
}

// GetIconEmojiOk returns a tuple with the IconEmoji field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetIconEmojiOk() (*string, bool) {
	if o == nil || IsNil(o.IconEmoji) {
		return nil, false
	}
	return o.IconEmoji, true
}

// HasIconEmoji returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasIconEmoji() bool {
	if o != nil && !IsNil(o.IconEmoji) {
		return true
	}

	return false
}

// SetIconEmoji gets a reference to the given string and assigns it to the IconEmoji field.
func (o *AMReceiverSlack) SetIconEmoji(v string) {
	o.IconEmoji = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetIconUrl() string {
	if o == nil || IsNil(o.IconUrl) {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetIconUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IconUrl) {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasIconUrl() bool {
	if o != nil && !IsNil(o.IconUrl) {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *AMReceiverSlack) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetLinkNames returns the LinkNames field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetLinkNames() bool {
	if o == nil || IsNil(o.LinkNames) {
		var ret bool
		return ret
	}
	return *o.LinkNames
}

// GetLinkNamesOk returns a tuple with the LinkNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetLinkNamesOk() (*bool, bool) {
	if o == nil || IsNil(o.LinkNames) {
		return nil, false
	}
	return o.LinkNames, true
}

// HasLinkNames returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasLinkNames() bool {
	if o != nil && !IsNil(o.LinkNames) {
		return true
	}

	return false
}

// SetLinkNames gets a reference to the given bool and assigns it to the LinkNames field.
func (o *AMReceiverSlack) SetLinkNames(v bool) {
	o.LinkNames = &v
}

// GetCallbackId returns the CallbackId field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetCallbackId() string {
	if o == nil || IsNil(o.CallbackId) {
		var ret string
		return ret
	}
	return *o.CallbackId
}

// GetCallbackIdOk returns a tuple with the CallbackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetCallbackIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallbackId) {
		return nil, false
	}
	return o.CallbackId, true
}

// HasCallbackId returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasCallbackId() bool {
	if o != nil && !IsNil(o.CallbackId) {
		return true
	}

	return false
}

// SetCallbackId gets a reference to the given string and assigns it to the CallbackId field.
func (o *AMReceiverSlack) SetCallbackId(v string) {
	o.CallbackId = &v
}

// GetMrkdwnIn returns the MrkdwnIn field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetMrkdwnIn() string {
	if o == nil || IsNil(o.MrkdwnIn) {
		var ret string
		return ret
	}
	return *o.MrkdwnIn
}

// GetMrkdwnInOk returns a tuple with the MrkdwnIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetMrkdwnInOk() (*string, bool) {
	if o == nil || IsNil(o.MrkdwnIn) {
		return nil, false
	}
	return o.MrkdwnIn, true
}

// HasMrkdwnIn returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasMrkdwnIn() bool {
	if o != nil && !IsNil(o.MrkdwnIn) {
		return true
	}

	return false
}

// SetMrkdwnIn gets a reference to the given string and assigns it to the MrkdwnIn field.
func (o *AMReceiverSlack) SetMrkdwnIn(v string) {
	o.MrkdwnIn = &v
}

// GetShortFields returns the ShortFields field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetShortFields() string {
	if o == nil || IsNil(o.ShortFields) {
		var ret string
		return ret
	}
	return *o.ShortFields
}

// GetShortFieldsOk returns a tuple with the ShortFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetShortFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.ShortFields) {
		return nil, false
	}
	return o.ShortFields, true
}

// HasShortFields returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasShortFields() bool {
	if o != nil && !IsNil(o.ShortFields) {
		return true
	}

	return false
}

// SetShortFields gets a reference to the given string and assigns it to the ShortFields field.
func (o *AMReceiverSlack) SetShortFields(v string) {
	o.ShortFields = &v
}

// GetTitleLink returns the TitleLink field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetTitleLink() string {
	if o == nil || IsNil(o.TitleLink) {
		var ret string
		return ret
	}
	return *o.TitleLink
}

// GetTitleLinkOk returns a tuple with the TitleLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetTitleLinkOk() (*string, bool) {
	if o == nil || IsNil(o.TitleLink) {
		return nil, false
	}
	return o.TitleLink, true
}

// HasTitleLink returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasTitleLink() bool {
	if o != nil && !IsNil(o.TitleLink) {
		return true
	}

	return false
}

// SetTitleLink gets a reference to the given string and assigns it to the TitleLink field.
func (o *AMReceiverSlack) SetTitleLink(v string) {
	o.TitleLink = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasImageUrl() bool {
	if o != nil && !IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *AMReceiverSlack) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetThumbUrl returns the ThumbUrl field value if set, zero value otherwise.
func (o *AMReceiverSlack) GetThumbUrl() string {
	if o == nil || IsNil(o.ThumbUrl) {
		var ret string
		return ret
	}
	return *o.ThumbUrl
}

// GetThumbUrlOk returns a tuple with the ThumbUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlack) GetThumbUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbUrl) {
		return nil, false
	}
	return o.ThumbUrl, true
}

// HasThumbUrl returns a boolean if a field has been set.
func (o *AMReceiverSlack) HasThumbUrl() bool {
	if o != nil && !IsNil(o.ThumbUrl) {
		return true
	}

	return false
}

// SetThumbUrl gets a reference to the given string and assigns it to the ThumbUrl field.
func (o *AMReceiverSlack) SetThumbUrl(v string) {
	o.ThumbUrl = &v
}

func (o AMReceiverSlack) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AMReceiverSlack) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Fallback) {
		toSerialize["fallback"] = o.Fallback
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.Footer) {
		toSerialize["footer"] = o.Footer
	}
	if !IsNil(o.Pretext) {
		toSerialize["pretext"] = o.Pretext
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.HttpConfig) {
		toSerialize["httpConfig"] = o.HttpConfig
	}
	if !IsNil(o.SendResolved) {
		toSerialize["send_resolved"] = o.SendResolved
	}
	if !IsNil(o.ApiUrl) {
		toSerialize["api_url"] = o.ApiUrl
	}
	if !IsNil(o.ApiUrlFile) {
		toSerialize["api_url_file"] = o.ApiUrlFile
	}
	if !IsNil(o.IconEmoji) {
		toSerialize["icon_emoji"] = o.IconEmoji
	}
	if !IsNil(o.IconUrl) {
		toSerialize["icon_url"] = o.IconUrl
	}
	if !IsNil(o.LinkNames) {
		toSerialize["link_names"] = o.LinkNames
	}
	if !IsNil(o.CallbackId) {
		toSerialize["callback_id"] = o.CallbackId
	}
	if !IsNil(o.MrkdwnIn) {
		toSerialize["mrkdwn_in"] = o.MrkdwnIn
	}
	if !IsNil(o.ShortFields) {
		toSerialize["short_fields"] = o.ShortFields
	}
	if !IsNil(o.TitleLink) {
		toSerialize["title_link"] = o.TitleLink
	}
	if !IsNil(o.ImageUrl) {
		toSerialize["image_url"] = o.ImageUrl
	}
	if !IsNil(o.ThumbUrl) {
		toSerialize["thumb_url"] = o.ThumbUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AMReceiverSlack) UnmarshalJSON(data []byte) (err error) {
	varAMReceiverSlack := _AMReceiverSlack{}

	err = json.Unmarshal(data, &varAMReceiverSlack)

	if err != nil {
		return err
	}

	*o = AMReceiverSlack(varAMReceiverSlack)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "channel")
		delete(additionalProperties, "username")
		delete(additionalProperties, "actions")
		delete(additionalProperties, "color")
		delete(additionalProperties, "fallback")
		delete(additionalProperties, "fields")
		delete(additionalProperties, "footer")
		delete(additionalProperties, "pretext")
		delete(additionalProperties, "text")
		delete(additionalProperties, "title")
		delete(additionalProperties, "httpConfig")
		delete(additionalProperties, "send_resolved")
		delete(additionalProperties, "api_url")
		delete(additionalProperties, "api_url_file")
		delete(additionalProperties, "icon_emoji")
		delete(additionalProperties, "icon_url")
		delete(additionalProperties, "link_names")
		delete(additionalProperties, "callback_id")
		delete(additionalProperties, "mrkdwn_in")
		delete(additionalProperties, "short_fields")
		delete(additionalProperties, "title_link")
		delete(additionalProperties, "image_url")
		delete(additionalProperties, "thumb_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAMReceiverSlack struct {
	value *AMReceiverSlack
	isSet bool
}

func (v NullableAMReceiverSlack) Get() *AMReceiverSlack {
	return v.value
}

func (v *NullableAMReceiverSlack) Set(val *AMReceiverSlack) {
	v.value = val
	v.isSet = true
}

func (v NullableAMReceiverSlack) IsSet() bool {
	return v.isSet
}

func (v *NullableAMReceiverSlack) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAMReceiverSlack(val *AMReceiverSlack) *NullableAMReceiverSlack {
	return &NullableAMReceiverSlack{value: val, isSet: true}
}

func (v NullableAMReceiverSlack) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAMReceiverSlack) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
