/*
Asserts, Inc

Asserts Public API

API version: 1.0.4
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the ApiErrorExceptionCauseStackTraceInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiErrorExceptionCauseStackTraceInner{}

// ApiErrorExceptionCauseStackTraceInner struct for ApiErrorExceptionCauseStackTraceInner
type ApiErrorExceptionCauseStackTraceInner struct {
	ClassLoaderName      *string `json:"classLoaderName,omitempty"`
	ModuleName           *string `json:"moduleName,omitempty"`
	ModuleVersion        *string `json:"moduleVersion,omitempty"`
	MethodName           *string `json:"methodName,omitempty"`
	FileName             *string `json:"fileName,omitempty"`
	LineNumber           *int32  `json:"lineNumber,omitempty"`
	ClassName            *string `json:"className,omitempty"`
	NativeMethod         *bool   `json:"nativeMethod,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiErrorExceptionCauseStackTraceInner ApiErrorExceptionCauseStackTraceInner

// NewApiErrorExceptionCauseStackTraceInner instantiates a new ApiErrorExceptionCauseStackTraceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiErrorExceptionCauseStackTraceInner() *ApiErrorExceptionCauseStackTraceInner {
	this := ApiErrorExceptionCauseStackTraceInner{}
	return &this
}

// NewApiErrorExceptionCauseStackTraceInnerWithDefaults instantiates a new ApiErrorExceptionCauseStackTraceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiErrorExceptionCauseStackTraceInnerWithDefaults() *ApiErrorExceptionCauseStackTraceInner {
	this := ApiErrorExceptionCauseStackTraceInner{}
	return &this
}

// GetClassLoaderName returns the ClassLoaderName field value if set, zero value otherwise.
func (o *ApiErrorExceptionCauseStackTraceInner) GetClassLoaderName() string {
	if o == nil || IsNil(o.ClassLoaderName) {
		var ret string
		return ret
	}
	return *o.ClassLoaderName
}

// GetClassLoaderNameOk returns a tuple with the ClassLoaderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) GetClassLoaderNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClassLoaderName) {
		return nil, false
	}
	return o.ClassLoaderName, true
}

// HasClassLoaderName returns a boolean if a field has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) HasClassLoaderName() bool {
	if o != nil && !IsNil(o.ClassLoaderName) {
		return true
	}

	return false
}

// SetClassLoaderName gets a reference to the given string and assigns it to the ClassLoaderName field.
func (o *ApiErrorExceptionCauseStackTraceInner) SetClassLoaderName(v string) {
	o.ClassLoaderName = &v
}

// GetModuleName returns the ModuleName field value if set, zero value otherwise.
func (o *ApiErrorExceptionCauseStackTraceInner) GetModuleName() string {
	if o == nil || IsNil(o.ModuleName) {
		var ret string
		return ret
	}
	return *o.ModuleName
}

// GetModuleNameOk returns a tuple with the ModuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) GetModuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModuleName) {
		return nil, false
	}
	return o.ModuleName, true
}

// HasModuleName returns a boolean if a field has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) HasModuleName() bool {
	if o != nil && !IsNil(o.ModuleName) {
		return true
	}

	return false
}

// SetModuleName gets a reference to the given string and assigns it to the ModuleName field.
func (o *ApiErrorExceptionCauseStackTraceInner) SetModuleName(v string) {
	o.ModuleName = &v
}

// GetModuleVersion returns the ModuleVersion field value if set, zero value otherwise.
func (o *ApiErrorExceptionCauseStackTraceInner) GetModuleVersion() string {
	if o == nil || IsNil(o.ModuleVersion) {
		var ret string
		return ret
	}
	return *o.ModuleVersion
}

// GetModuleVersionOk returns a tuple with the ModuleVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) GetModuleVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ModuleVersion) {
		return nil, false
	}
	return o.ModuleVersion, true
}

// HasModuleVersion returns a boolean if a field has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) HasModuleVersion() bool {
	if o != nil && !IsNil(o.ModuleVersion) {
		return true
	}

	return false
}

// SetModuleVersion gets a reference to the given string and assigns it to the ModuleVersion field.
func (o *ApiErrorExceptionCauseStackTraceInner) SetModuleVersion(v string) {
	o.ModuleVersion = &v
}

// GetMethodName returns the MethodName field value if set, zero value otherwise.
func (o *ApiErrorExceptionCauseStackTraceInner) GetMethodName() string {
	if o == nil || IsNil(o.MethodName) {
		var ret string
		return ret
	}
	return *o.MethodName
}

// GetMethodNameOk returns a tuple with the MethodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) GetMethodNameOk() (*string, bool) {
	if o == nil || IsNil(o.MethodName) {
		return nil, false
	}
	return o.MethodName, true
}

// HasMethodName returns a boolean if a field has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) HasMethodName() bool {
	if o != nil && !IsNil(o.MethodName) {
		return true
	}

	return false
}

// SetMethodName gets a reference to the given string and assigns it to the MethodName field.
func (o *ApiErrorExceptionCauseStackTraceInner) SetMethodName(v string) {
	o.MethodName = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *ApiErrorExceptionCauseStackTraceInner) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *ApiErrorExceptionCauseStackTraceInner) SetFileName(v string) {
	o.FileName = &v
}

// GetLineNumber returns the LineNumber field value if set, zero value otherwise.
func (o *ApiErrorExceptionCauseStackTraceInner) GetLineNumber() int32 {
	if o == nil || IsNil(o.LineNumber) {
		var ret int32
		return ret
	}
	return *o.LineNumber
}

// GetLineNumberOk returns a tuple with the LineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) GetLineNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.LineNumber) {
		return nil, false
	}
	return o.LineNumber, true
}

// HasLineNumber returns a boolean if a field has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) HasLineNumber() bool {
	if o != nil && !IsNil(o.LineNumber) {
		return true
	}

	return false
}

// SetLineNumber gets a reference to the given int32 and assigns it to the LineNumber field.
func (o *ApiErrorExceptionCauseStackTraceInner) SetLineNumber(v int32) {
	o.LineNumber = &v
}

// GetClassName returns the ClassName field value if set, zero value otherwise.
func (o *ApiErrorExceptionCauseStackTraceInner) GetClassName() string {
	if o == nil || IsNil(o.ClassName) {
		var ret string
		return ret
	}
	return *o.ClassName
}

// GetClassNameOk returns a tuple with the ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) GetClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClassName) {
		return nil, false
	}
	return o.ClassName, true
}

// HasClassName returns a boolean if a field has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) HasClassName() bool {
	if o != nil && !IsNil(o.ClassName) {
		return true
	}

	return false
}

// SetClassName gets a reference to the given string and assigns it to the ClassName field.
func (o *ApiErrorExceptionCauseStackTraceInner) SetClassName(v string) {
	o.ClassName = &v
}

// GetNativeMethod returns the NativeMethod field value if set, zero value otherwise.
func (o *ApiErrorExceptionCauseStackTraceInner) GetNativeMethod() bool {
	if o == nil || IsNil(o.NativeMethod) {
		var ret bool
		return ret
	}
	return *o.NativeMethod
}

// GetNativeMethodOk returns a tuple with the NativeMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) GetNativeMethodOk() (*bool, bool) {
	if o == nil || IsNil(o.NativeMethod) {
		return nil, false
	}
	return o.NativeMethod, true
}

// HasNativeMethod returns a boolean if a field has been set.
func (o *ApiErrorExceptionCauseStackTraceInner) HasNativeMethod() bool {
	if o != nil && !IsNil(o.NativeMethod) {
		return true
	}

	return false
}

// SetNativeMethod gets a reference to the given bool and assigns it to the NativeMethod field.
func (o *ApiErrorExceptionCauseStackTraceInner) SetNativeMethod(v bool) {
	o.NativeMethod = &v
}

func (o ApiErrorExceptionCauseStackTraceInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiErrorExceptionCauseStackTraceInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClassLoaderName) {
		toSerialize["classLoaderName"] = o.ClassLoaderName
	}
	if !IsNil(o.ModuleName) {
		toSerialize["moduleName"] = o.ModuleName
	}
	if !IsNil(o.ModuleVersion) {
		toSerialize["moduleVersion"] = o.ModuleVersion
	}
	if !IsNil(o.MethodName) {
		toSerialize["methodName"] = o.MethodName
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.LineNumber) {
		toSerialize["lineNumber"] = o.LineNumber
	}
	if !IsNil(o.ClassName) {
		toSerialize["className"] = o.ClassName
	}
	if !IsNil(o.NativeMethod) {
		toSerialize["nativeMethod"] = o.NativeMethod
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiErrorExceptionCauseStackTraceInner) UnmarshalJSON(data []byte) (err error) {
	varApiErrorExceptionCauseStackTraceInner := _ApiErrorExceptionCauseStackTraceInner{}

	err = json.Unmarshal(data, &varApiErrorExceptionCauseStackTraceInner)

	if err != nil {
		return err
	}

	*o = ApiErrorExceptionCauseStackTraceInner(varApiErrorExceptionCauseStackTraceInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "classLoaderName")
		delete(additionalProperties, "moduleName")
		delete(additionalProperties, "moduleVersion")
		delete(additionalProperties, "methodName")
		delete(additionalProperties, "fileName")
		delete(additionalProperties, "lineNumber")
		delete(additionalProperties, "className")
		delete(additionalProperties, "nativeMethod")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiErrorExceptionCauseStackTraceInner struct {
	value *ApiErrorExceptionCauseStackTraceInner
	isSet bool
}

func (v NullableApiErrorExceptionCauseStackTraceInner) Get() *ApiErrorExceptionCauseStackTraceInner {
	return v.value
}

func (v *NullableApiErrorExceptionCauseStackTraceInner) Set(val *ApiErrorExceptionCauseStackTraceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiErrorExceptionCauseStackTraceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiErrorExceptionCauseStackTraceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiErrorExceptionCauseStackTraceInner(val *ApiErrorExceptionCauseStackTraceInner) *NullableApiErrorExceptionCauseStackTraceInner {
	return &NullableApiErrorExceptionCauseStackTraceInner{value: val, isSet: true}
}

func (v NullableApiErrorExceptionCauseStackTraceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiErrorExceptionCauseStackTraceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
