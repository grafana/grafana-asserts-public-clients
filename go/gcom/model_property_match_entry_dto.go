/*
Asserts, Inc

Asserts Public API

API version: 2025.08.25-143403
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the PropertyMatchEntryDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PropertyMatchEntryDto{}

// PropertyMatchEntryDto struct for PropertyMatchEntryDto
type PropertyMatchEntryDto struct {
	Property             *string  `json:"property,omitempty"`
	Op                   *string  `json:"op,omitempty"`
	Values               []string `json:"values,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PropertyMatchEntryDto PropertyMatchEntryDto

// NewPropertyMatchEntryDto instantiates a new PropertyMatchEntryDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertyMatchEntryDto() *PropertyMatchEntryDto {
	this := PropertyMatchEntryDto{}
	return &this
}

// NewPropertyMatchEntryDtoWithDefaults instantiates a new PropertyMatchEntryDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyMatchEntryDtoWithDefaults() *PropertyMatchEntryDto {
	this := PropertyMatchEntryDto{}
	return &this
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *PropertyMatchEntryDto) GetProperty() string {
	if o == nil || IsNil(o.Property) {
		var ret string
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMatchEntryDto) GetPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.Property) {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *PropertyMatchEntryDto) HasProperty() bool {
	if o != nil && !IsNil(o.Property) {
		return true
	}

	return false
}

// SetProperty gets a reference to the given string and assigns it to the Property field.
func (o *PropertyMatchEntryDto) SetProperty(v string) {
	o.Property = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *PropertyMatchEntryDto) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMatchEntryDto) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *PropertyMatchEntryDto) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *PropertyMatchEntryDto) SetOp(v string) {
	o.Op = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *PropertyMatchEntryDto) GetValues() []string {
	if o == nil || IsNil(o.Values) {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMatchEntryDto) GetValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *PropertyMatchEntryDto) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *PropertyMatchEntryDto) SetValues(v []string) {
	o.Values = v
}

func (o PropertyMatchEntryDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PropertyMatchEntryDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Property) {
		toSerialize["property"] = o.Property
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PropertyMatchEntryDto) UnmarshalJSON(data []byte) (err error) {
	varPropertyMatchEntryDto := _PropertyMatchEntryDto{}

	err = json.Unmarshal(data, &varPropertyMatchEntryDto)

	if err != nil {
		return err
	}

	*o = PropertyMatchEntryDto(varPropertyMatchEntryDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "property")
		delete(additionalProperties, "op")
		delete(additionalProperties, "values")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePropertyMatchEntryDto struct {
	value *PropertyMatchEntryDto
	isSet bool
}

func (v NullablePropertyMatchEntryDto) Get() *PropertyMatchEntryDto {
	return v.value
}

func (v *NullablePropertyMatchEntryDto) Set(val *PropertyMatchEntryDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyMatchEntryDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyMatchEntryDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyMatchEntryDto(val *PropertyMatchEntryDto) *NullablePropertyMatchEntryDto {
	return &NullablePropertyMatchEntryDto{value: val, isSet: true}
}

func (v NullablePropertyMatchEntryDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyMatchEntryDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
