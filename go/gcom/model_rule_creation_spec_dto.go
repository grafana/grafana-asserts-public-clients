/*
Asserts, Inc

Asserts Public API

API version: 2025.08.25-143624
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the RuleCreationSpecDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleCreationSpecDto{}

// RuleCreationSpecDto struct for RuleCreationSpecDto
type RuleCreationSpecDto struct {
	MetricRegExp         *string   `json:"metricRegExp,omitempty"`
	Rules                []RuleDto `json:"rules,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RuleCreationSpecDto RuleCreationSpecDto

// NewRuleCreationSpecDto instantiates a new RuleCreationSpecDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleCreationSpecDto() *RuleCreationSpecDto {
	this := RuleCreationSpecDto{}
	return &this
}

// NewRuleCreationSpecDtoWithDefaults instantiates a new RuleCreationSpecDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleCreationSpecDtoWithDefaults() *RuleCreationSpecDto {
	this := RuleCreationSpecDto{}
	return &this
}

// GetMetricRegExp returns the MetricRegExp field value if set, zero value otherwise.
func (o *RuleCreationSpecDto) GetMetricRegExp() string {
	if o == nil || IsNil(o.MetricRegExp) {
		var ret string
		return ret
	}
	return *o.MetricRegExp
}

// GetMetricRegExpOk returns a tuple with the MetricRegExp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleCreationSpecDto) GetMetricRegExpOk() (*string, bool) {
	if o == nil || IsNil(o.MetricRegExp) {
		return nil, false
	}
	return o.MetricRegExp, true
}

// HasMetricRegExp returns a boolean if a field has been set.
func (o *RuleCreationSpecDto) HasMetricRegExp() bool {
	if o != nil && !IsNil(o.MetricRegExp) {
		return true
	}

	return false
}

// SetMetricRegExp gets a reference to the given string and assigns it to the MetricRegExp field.
func (o *RuleCreationSpecDto) SetMetricRegExp(v string) {
	o.MetricRegExp = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *RuleCreationSpecDto) GetRules() []RuleDto {
	if o == nil || IsNil(o.Rules) {
		var ret []RuleDto
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleCreationSpecDto) GetRulesOk() ([]RuleDto, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *RuleCreationSpecDto) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []RuleDto and assigns it to the Rules field.
func (o *RuleCreationSpecDto) SetRules(v []RuleDto) {
	o.Rules = v
}

func (o RuleCreationSpecDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleCreationSpecDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetricRegExp) {
		toSerialize["metricRegExp"] = o.MetricRegExp
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RuleCreationSpecDto) UnmarshalJSON(data []byte) (err error) {
	varRuleCreationSpecDto := _RuleCreationSpecDto{}

	err = json.Unmarshal(data, &varRuleCreationSpecDto)

	if err != nil {
		return err
	}

	*o = RuleCreationSpecDto(varRuleCreationSpecDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "metricRegExp")
		delete(additionalProperties, "rules")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRuleCreationSpecDto struct {
	value *RuleCreationSpecDto
	isSet bool
}

func (v NullableRuleCreationSpecDto) Get() *RuleCreationSpecDto {
	return v.value
}

func (v *NullableRuleCreationSpecDto) Set(val *RuleCreationSpecDto) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleCreationSpecDto) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleCreationSpecDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleCreationSpecDto(val *RuleCreationSpecDto) *NullableRuleCreationSpecDto {
	return &NullableRuleCreationSpecDto{value: val, isSet: true}
}

func (v NullableRuleCreationSpecDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleCreationSpecDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
