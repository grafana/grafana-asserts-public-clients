/*
Asserts, Inc

Asserts Public API

API version: 2025.08.07-125604
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the DatasetSanityCheckResultDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatasetSanityCheckResultDto{}

// DatasetSanityCheckResultDto struct for DatasetSanityCheckResultDto
type DatasetSanityCheckResultDto struct {
	CheckName            *string                           `json:"checkName,omitempty"`
	StepResults          []DatasetSanityCheckStepResultDto `json:"stepResults,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DatasetSanityCheckResultDto DatasetSanityCheckResultDto

// NewDatasetSanityCheckResultDto instantiates a new DatasetSanityCheckResultDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatasetSanityCheckResultDto() *DatasetSanityCheckResultDto {
	this := DatasetSanityCheckResultDto{}
	return &this
}

// NewDatasetSanityCheckResultDtoWithDefaults instantiates a new DatasetSanityCheckResultDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatasetSanityCheckResultDtoWithDefaults() *DatasetSanityCheckResultDto {
	this := DatasetSanityCheckResultDto{}
	return &this
}

// GetCheckName returns the CheckName field value if set, zero value otherwise.
func (o *DatasetSanityCheckResultDto) GetCheckName() string {
	if o == nil || IsNil(o.CheckName) {
		var ret string
		return ret
	}
	return *o.CheckName
}

// GetCheckNameOk returns a tuple with the CheckName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetSanityCheckResultDto) GetCheckNameOk() (*string, bool) {
	if o == nil || IsNil(o.CheckName) {
		return nil, false
	}
	return o.CheckName, true
}

// HasCheckName returns a boolean if a field has been set.
func (o *DatasetSanityCheckResultDto) HasCheckName() bool {
	if o != nil && !IsNil(o.CheckName) {
		return true
	}

	return false
}

// SetCheckName gets a reference to the given string and assigns it to the CheckName field.
func (o *DatasetSanityCheckResultDto) SetCheckName(v string) {
	o.CheckName = &v
}

// GetStepResults returns the StepResults field value if set, zero value otherwise.
func (o *DatasetSanityCheckResultDto) GetStepResults() []DatasetSanityCheckStepResultDto {
	if o == nil || IsNil(o.StepResults) {
		var ret []DatasetSanityCheckStepResultDto
		return ret
	}
	return o.StepResults
}

// GetStepResultsOk returns a tuple with the StepResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetSanityCheckResultDto) GetStepResultsOk() ([]DatasetSanityCheckStepResultDto, bool) {
	if o == nil || IsNil(o.StepResults) {
		return nil, false
	}
	return o.StepResults, true
}

// HasStepResults returns a boolean if a field has been set.
func (o *DatasetSanityCheckResultDto) HasStepResults() bool {
	if o != nil && !IsNil(o.StepResults) {
		return true
	}

	return false
}

// SetStepResults gets a reference to the given []DatasetSanityCheckStepResultDto and assigns it to the StepResults field.
func (o *DatasetSanityCheckResultDto) SetStepResults(v []DatasetSanityCheckStepResultDto) {
	o.StepResults = v
}

func (o DatasetSanityCheckResultDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatasetSanityCheckResultDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CheckName) {
		toSerialize["checkName"] = o.CheckName
	}
	if !IsNil(o.StepResults) {
		toSerialize["stepResults"] = o.StepResults
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DatasetSanityCheckResultDto) UnmarshalJSON(data []byte) (err error) {
	varDatasetSanityCheckResultDto := _DatasetSanityCheckResultDto{}

	err = json.Unmarshal(data, &varDatasetSanityCheckResultDto)

	if err != nil {
		return err
	}

	*o = DatasetSanityCheckResultDto(varDatasetSanityCheckResultDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "checkName")
		delete(additionalProperties, "stepResults")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDatasetSanityCheckResultDto struct {
	value *DatasetSanityCheckResultDto
	isSet bool
}

func (v NullableDatasetSanityCheckResultDto) Get() *DatasetSanityCheckResultDto {
	return v.value
}

func (v *NullableDatasetSanityCheckResultDto) Set(val *DatasetSanityCheckResultDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDatasetSanityCheckResultDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDatasetSanityCheckResultDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatasetSanityCheckResultDto(val *DatasetSanityCheckResultDto) *NullableDatasetSanityCheckResultDto {
	return &NullableDatasetSanityCheckResultDto{value: val, isSet: true}
}

func (v NullableDatasetSanityCheckResultDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatasetSanityCheckResultDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
