/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-112305
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the RequestThresholdV2Dto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestThresholdV2Dto{}

// RequestThresholdV2Dto struct for RequestThresholdV2Dto
type RequestThresholdV2Dto struct {
	EntityName           *string  `json:"entityName,omitempty"`
	AssertionName        *string  `json:"assertionName,omitempty"`
	RequestType          *string  `json:"requestType,omitempty"`
	RequestContext       *string  `json:"requestContext,omitempty"`
	Value                *float64 `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RequestThresholdV2Dto RequestThresholdV2Dto

// NewRequestThresholdV2Dto instantiates a new RequestThresholdV2Dto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestThresholdV2Dto() *RequestThresholdV2Dto {
	this := RequestThresholdV2Dto{}
	return &this
}

// NewRequestThresholdV2DtoWithDefaults instantiates a new RequestThresholdV2Dto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestThresholdV2DtoWithDefaults() *RequestThresholdV2Dto {
	this := RequestThresholdV2Dto{}
	return &this
}

// GetEntityName returns the EntityName field value if set, zero value otherwise.
func (o *RequestThresholdV2Dto) GetEntityName() string {
	if o == nil || IsNil(o.EntityName) {
		var ret string
		return ret
	}
	return *o.EntityName
}

// GetEntityNameOk returns a tuple with the EntityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetEntityNameOk() (*string, bool) {
	if o == nil || IsNil(o.EntityName) {
		return nil, false
	}
	return o.EntityName, true
}

// HasEntityName returns a boolean if a field has been set.
func (o *RequestThresholdV2Dto) HasEntityName() bool {
	if o != nil && !IsNil(o.EntityName) {
		return true
	}

	return false
}

// SetEntityName gets a reference to the given string and assigns it to the EntityName field.
func (o *RequestThresholdV2Dto) SetEntityName(v string) {
	o.EntityName = &v
}

// GetAssertionName returns the AssertionName field value if set, zero value otherwise.
func (o *RequestThresholdV2Dto) GetAssertionName() string {
	if o == nil || IsNil(o.AssertionName) {
		var ret string
		return ret
	}
	return *o.AssertionName
}

// GetAssertionNameOk returns a tuple with the AssertionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetAssertionNameOk() (*string, bool) {
	if o == nil || IsNil(o.AssertionName) {
		return nil, false
	}
	return o.AssertionName, true
}

// HasAssertionName returns a boolean if a field has been set.
func (o *RequestThresholdV2Dto) HasAssertionName() bool {
	if o != nil && !IsNil(o.AssertionName) {
		return true
	}

	return false
}

// SetAssertionName gets a reference to the given string and assigns it to the AssertionName field.
func (o *RequestThresholdV2Dto) SetAssertionName(v string) {
	o.AssertionName = &v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *RequestThresholdV2Dto) GetRequestType() string {
	if o == nil || IsNil(o.RequestType) {
		var ret string
		return ret
	}
	return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetRequestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RequestType) {
		return nil, false
	}
	return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *RequestThresholdV2Dto) HasRequestType() bool {
	if o != nil && !IsNil(o.RequestType) {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given string and assigns it to the RequestType field.
func (o *RequestThresholdV2Dto) SetRequestType(v string) {
	o.RequestType = &v
}

// GetRequestContext returns the RequestContext field value if set, zero value otherwise.
func (o *RequestThresholdV2Dto) GetRequestContext() string {
	if o == nil || IsNil(o.RequestContext) {
		var ret string
		return ret
	}
	return *o.RequestContext
}

// GetRequestContextOk returns a tuple with the RequestContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetRequestContextOk() (*string, bool) {
	if o == nil || IsNil(o.RequestContext) {
		return nil, false
	}
	return o.RequestContext, true
}

// HasRequestContext returns a boolean if a field has been set.
func (o *RequestThresholdV2Dto) HasRequestContext() bool {
	if o != nil && !IsNil(o.RequestContext) {
		return true
	}

	return false
}

// SetRequestContext gets a reference to the given string and assigns it to the RequestContext field.
func (o *RequestThresholdV2Dto) SetRequestContext(v string) {
	o.RequestContext = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RequestThresholdV2Dto) GetValue() float64 {
	if o == nil || IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetValueOk() (*float64, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RequestThresholdV2Dto) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *RequestThresholdV2Dto) SetValue(v float64) {
	o.Value = &v
}

func (o RequestThresholdV2Dto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestThresholdV2Dto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntityName) {
		toSerialize["entityName"] = o.EntityName
	}
	if !IsNil(o.AssertionName) {
		toSerialize["assertionName"] = o.AssertionName
	}
	if !IsNil(o.RequestType) {
		toSerialize["requestType"] = o.RequestType
	}
	if !IsNil(o.RequestContext) {
		toSerialize["requestContext"] = o.RequestContext
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RequestThresholdV2Dto) UnmarshalJSON(data []byte) (err error) {
	varRequestThresholdV2Dto := _RequestThresholdV2Dto{}

	err = json.Unmarshal(data, &varRequestThresholdV2Dto)

	if err != nil {
		return err
	}

	*o = RequestThresholdV2Dto(varRequestThresholdV2Dto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entityName")
		delete(additionalProperties, "assertionName")
		delete(additionalProperties, "requestType")
		delete(additionalProperties, "requestContext")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRequestThresholdV2Dto struct {
	value *RequestThresholdV2Dto
	isSet bool
}

func (v NullableRequestThresholdV2Dto) Get() *RequestThresholdV2Dto {
	return v.value
}

func (v *NullableRequestThresholdV2Dto) Set(val *RequestThresholdV2Dto) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestThresholdV2Dto) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestThresholdV2Dto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestThresholdV2Dto(val *RequestThresholdV2Dto) *NullableRequestThresholdV2Dto {
	return &NullableRequestThresholdV2Dto{value: val, isSet: true}
}

func (v NullableRequestThresholdV2Dto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestThresholdV2Dto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
