/*
Asserts, Inc

Asserts Public API

API version: 2025.08.25-143403
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the RequestThresholdV2Dto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestThresholdV2Dto{}

// RequestThresholdV2Dto struct for RequestThresholdV2Dto
type RequestThresholdV2Dto struct {
	EntityName           string  `json:"entityName"`
	AssertionName        string  `json:"assertionName"`
	RequestType          string  `json:"requestType"`
	RequestContext       string  `json:"requestContext"`
	Value                float64 `json:"value"`
	ValidAssertionName   *bool   `json:"validAssertionName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RequestThresholdV2Dto RequestThresholdV2Dto

// NewRequestThresholdV2Dto instantiates a new RequestThresholdV2Dto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestThresholdV2Dto(entityName string, assertionName string, requestType string, requestContext string, value float64) *RequestThresholdV2Dto {
	this := RequestThresholdV2Dto{}
	this.EntityName = entityName
	this.AssertionName = assertionName
	this.RequestType = requestType
	this.RequestContext = requestContext
	this.Value = value
	return &this
}

// NewRequestThresholdV2DtoWithDefaults instantiates a new RequestThresholdV2Dto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestThresholdV2DtoWithDefaults() *RequestThresholdV2Dto {
	this := RequestThresholdV2Dto{}
	return &this
}

// GetEntityName returns the EntityName field value
func (o *RequestThresholdV2Dto) GetEntityName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityName
}

// GetEntityNameOk returns a tuple with the EntityName field value
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetEntityNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityName, true
}

// SetEntityName sets field value
func (o *RequestThresholdV2Dto) SetEntityName(v string) {
	o.EntityName = v
}

// GetAssertionName returns the AssertionName field value
func (o *RequestThresholdV2Dto) GetAssertionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssertionName
}

// GetAssertionNameOk returns a tuple with the AssertionName field value
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetAssertionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssertionName, true
}

// SetAssertionName sets field value
func (o *RequestThresholdV2Dto) SetAssertionName(v string) {
	o.AssertionName = v
}

// GetRequestType returns the RequestType field value
func (o *RequestThresholdV2Dto) GetRequestType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetRequestTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestType, true
}

// SetRequestType sets field value
func (o *RequestThresholdV2Dto) SetRequestType(v string) {
	o.RequestType = v
}

// GetRequestContext returns the RequestContext field value
func (o *RequestThresholdV2Dto) GetRequestContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestContext
}

// GetRequestContextOk returns a tuple with the RequestContext field value
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetRequestContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestContext, true
}

// SetRequestContext sets field value
func (o *RequestThresholdV2Dto) SetRequestContext(v string) {
	o.RequestContext = v
}

// GetValue returns the Value field value
func (o *RequestThresholdV2Dto) GetValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetValueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *RequestThresholdV2Dto) SetValue(v float64) {
	o.Value = v
}

// GetValidAssertionName returns the ValidAssertionName field value if set, zero value otherwise.
func (o *RequestThresholdV2Dto) GetValidAssertionName() bool {
	if o == nil || IsNil(o.ValidAssertionName) {
		var ret bool
		return ret
	}
	return *o.ValidAssertionName
}

// GetValidAssertionNameOk returns a tuple with the ValidAssertionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestThresholdV2Dto) GetValidAssertionNameOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidAssertionName) {
		return nil, false
	}
	return o.ValidAssertionName, true
}

// HasValidAssertionName returns a boolean if a field has been set.
func (o *RequestThresholdV2Dto) HasValidAssertionName() bool {
	if o != nil && !IsNil(o.ValidAssertionName) {
		return true
	}

	return false
}

// SetValidAssertionName gets a reference to the given bool and assigns it to the ValidAssertionName field.
func (o *RequestThresholdV2Dto) SetValidAssertionName(v bool) {
	o.ValidAssertionName = &v
}

func (o RequestThresholdV2Dto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestThresholdV2Dto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entityName"] = o.EntityName
	toSerialize["assertionName"] = o.AssertionName
	toSerialize["requestType"] = o.RequestType
	toSerialize["requestContext"] = o.RequestContext
	toSerialize["value"] = o.Value
	if !IsNil(o.ValidAssertionName) {
		toSerialize["validAssertionName"] = o.ValidAssertionName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RequestThresholdV2Dto) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varRequestThresholdV2Dto := _RequestThresholdV2Dto{}

	err = json.Unmarshal(data, &varRequestThresholdV2Dto)

	if err != nil {
		return err
	}

	*o = RequestThresholdV2Dto(varRequestThresholdV2Dto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entityName")
		delete(additionalProperties, "assertionName")
		delete(additionalProperties, "requestType")
		delete(additionalProperties, "requestContext")
		delete(additionalProperties, "value")
		delete(additionalProperties, "validAssertionName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRequestThresholdV2Dto struct {
	value *RequestThresholdV2Dto
	isSet bool
}

func (v NullableRequestThresholdV2Dto) Get() *RequestThresholdV2Dto {
	return v.value
}

func (v *NullableRequestThresholdV2Dto) Set(val *RequestThresholdV2Dto) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestThresholdV2Dto) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestThresholdV2Dto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestThresholdV2Dto(val *RequestThresholdV2Dto) *NullableRequestThresholdV2Dto {
	return &NullableRequestThresholdV2Dto{value: val, isSet: true}
}

func (v NullableRequestThresholdV2Dto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestThresholdV2Dto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
