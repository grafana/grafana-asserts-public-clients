/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-055054
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AssertionsRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssertionsRequestDto{}

// AssertionsRequestDto struct for AssertionsRequestDto
type AssertionsRequestDto struct {
	StartTime                                     *int64         `json:"startTime,omitempty"`
	EndTime                                       *int64         `json:"endTime,omitempty"`
	EntityKeys                                    []EntityKeyDto `json:"entityKeys,omitempty"`
	IncludeConnectedAssertions                    *bool          `json:"includeConnectedAssertions,omitempty"`
	AlertCategories                               []string       `json:"alertCategories,omitempty"`
	Severities                                    []string       `json:"severities,omitempty"`
	HideAssertionsOlderThanNHours                 *int32         `json:"hideAssertionsOlderThanNHours,omitempty"`
	HideAssertionsPresentMoreThanPercentageOfTime *int32         `json:"hideAssertionsPresentMoreThanPercentageOfTime,omitempty"`
	AdditionalProperties                          map[string]interface{}
}

type _AssertionsRequestDto AssertionsRequestDto

// NewAssertionsRequestDto instantiates a new AssertionsRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssertionsRequestDto() *AssertionsRequestDto {
	this := AssertionsRequestDto{}
	return &this
}

// NewAssertionsRequestDtoWithDefaults instantiates a new AssertionsRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssertionsRequestDtoWithDefaults() *AssertionsRequestDto {
	this := AssertionsRequestDto{}
	return &this
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *AssertionsRequestDto) GetStartTime() int64 {
	if o == nil || IsNil(o.StartTime) {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionsRequestDto) GetStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *AssertionsRequestDto) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *AssertionsRequestDto) SetStartTime(v int64) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *AssertionsRequestDto) GetEndTime() int64 {
	if o == nil || IsNil(o.EndTime) {
		var ret int64
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionsRequestDto) GetEndTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *AssertionsRequestDto) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int64 and assigns it to the EndTime field.
func (o *AssertionsRequestDto) SetEndTime(v int64) {
	o.EndTime = &v
}

// GetEntityKeys returns the EntityKeys field value if set, zero value otherwise.
func (o *AssertionsRequestDto) GetEntityKeys() []EntityKeyDto {
	if o == nil || IsNil(o.EntityKeys) {
		var ret []EntityKeyDto
		return ret
	}
	return o.EntityKeys
}

// GetEntityKeysOk returns a tuple with the EntityKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionsRequestDto) GetEntityKeysOk() ([]EntityKeyDto, bool) {
	if o == nil || IsNil(o.EntityKeys) {
		return nil, false
	}
	return o.EntityKeys, true
}

// HasEntityKeys returns a boolean if a field has been set.
func (o *AssertionsRequestDto) HasEntityKeys() bool {
	if o != nil && !IsNil(o.EntityKeys) {
		return true
	}

	return false
}

// SetEntityKeys gets a reference to the given []EntityKeyDto and assigns it to the EntityKeys field.
func (o *AssertionsRequestDto) SetEntityKeys(v []EntityKeyDto) {
	o.EntityKeys = v
}

// GetIncludeConnectedAssertions returns the IncludeConnectedAssertions field value if set, zero value otherwise.
func (o *AssertionsRequestDto) GetIncludeConnectedAssertions() bool {
	if o == nil || IsNil(o.IncludeConnectedAssertions) {
		var ret bool
		return ret
	}
	return *o.IncludeConnectedAssertions
}

// GetIncludeConnectedAssertionsOk returns a tuple with the IncludeConnectedAssertions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionsRequestDto) GetIncludeConnectedAssertionsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeConnectedAssertions) {
		return nil, false
	}
	return o.IncludeConnectedAssertions, true
}

// HasIncludeConnectedAssertions returns a boolean if a field has been set.
func (o *AssertionsRequestDto) HasIncludeConnectedAssertions() bool {
	if o != nil && !IsNil(o.IncludeConnectedAssertions) {
		return true
	}

	return false
}

// SetIncludeConnectedAssertions gets a reference to the given bool and assigns it to the IncludeConnectedAssertions field.
func (o *AssertionsRequestDto) SetIncludeConnectedAssertions(v bool) {
	o.IncludeConnectedAssertions = &v
}

// GetAlertCategories returns the AlertCategories field value if set, zero value otherwise.
func (o *AssertionsRequestDto) GetAlertCategories() []string {
	if o == nil || IsNil(o.AlertCategories) {
		var ret []string
		return ret
	}
	return o.AlertCategories
}

// GetAlertCategoriesOk returns a tuple with the AlertCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionsRequestDto) GetAlertCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.AlertCategories) {
		return nil, false
	}
	return o.AlertCategories, true
}

// HasAlertCategories returns a boolean if a field has been set.
func (o *AssertionsRequestDto) HasAlertCategories() bool {
	if o != nil && !IsNil(o.AlertCategories) {
		return true
	}

	return false
}

// SetAlertCategories gets a reference to the given []string and assigns it to the AlertCategories field.
func (o *AssertionsRequestDto) SetAlertCategories(v []string) {
	o.AlertCategories = v
}

// GetSeverities returns the Severities field value if set, zero value otherwise.
func (o *AssertionsRequestDto) GetSeverities() []string {
	if o == nil || IsNil(o.Severities) {
		var ret []string
		return ret
	}
	return o.Severities
}

// GetSeveritiesOk returns a tuple with the Severities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionsRequestDto) GetSeveritiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Severities) {
		return nil, false
	}
	return o.Severities, true
}

// HasSeverities returns a boolean if a field has been set.
func (o *AssertionsRequestDto) HasSeverities() bool {
	if o != nil && !IsNil(o.Severities) {
		return true
	}

	return false
}

// SetSeverities gets a reference to the given []string and assigns it to the Severities field.
func (o *AssertionsRequestDto) SetSeverities(v []string) {
	o.Severities = v
}

// GetHideAssertionsOlderThanNHours returns the HideAssertionsOlderThanNHours field value if set, zero value otherwise.
func (o *AssertionsRequestDto) GetHideAssertionsOlderThanNHours() int32 {
	if o == nil || IsNil(o.HideAssertionsOlderThanNHours) {
		var ret int32
		return ret
	}
	return *o.HideAssertionsOlderThanNHours
}

// GetHideAssertionsOlderThanNHoursOk returns a tuple with the HideAssertionsOlderThanNHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionsRequestDto) GetHideAssertionsOlderThanNHoursOk() (*int32, bool) {
	if o == nil || IsNil(o.HideAssertionsOlderThanNHours) {
		return nil, false
	}
	return o.HideAssertionsOlderThanNHours, true
}

// HasHideAssertionsOlderThanNHours returns a boolean if a field has been set.
func (o *AssertionsRequestDto) HasHideAssertionsOlderThanNHours() bool {
	if o != nil && !IsNil(o.HideAssertionsOlderThanNHours) {
		return true
	}

	return false
}

// SetHideAssertionsOlderThanNHours gets a reference to the given int32 and assigns it to the HideAssertionsOlderThanNHours field.
func (o *AssertionsRequestDto) SetHideAssertionsOlderThanNHours(v int32) {
	o.HideAssertionsOlderThanNHours = &v
}

// GetHideAssertionsPresentMoreThanPercentageOfTime returns the HideAssertionsPresentMoreThanPercentageOfTime field value if set, zero value otherwise.
func (o *AssertionsRequestDto) GetHideAssertionsPresentMoreThanPercentageOfTime() int32 {
	if o == nil || IsNil(o.HideAssertionsPresentMoreThanPercentageOfTime) {
		var ret int32
		return ret
	}
	return *o.HideAssertionsPresentMoreThanPercentageOfTime
}

// GetHideAssertionsPresentMoreThanPercentageOfTimeOk returns a tuple with the HideAssertionsPresentMoreThanPercentageOfTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionsRequestDto) GetHideAssertionsPresentMoreThanPercentageOfTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.HideAssertionsPresentMoreThanPercentageOfTime) {
		return nil, false
	}
	return o.HideAssertionsPresentMoreThanPercentageOfTime, true
}

// HasHideAssertionsPresentMoreThanPercentageOfTime returns a boolean if a field has been set.
func (o *AssertionsRequestDto) HasHideAssertionsPresentMoreThanPercentageOfTime() bool {
	if o != nil && !IsNil(o.HideAssertionsPresentMoreThanPercentageOfTime) {
		return true
	}

	return false
}

// SetHideAssertionsPresentMoreThanPercentageOfTime gets a reference to the given int32 and assigns it to the HideAssertionsPresentMoreThanPercentageOfTime field.
func (o *AssertionsRequestDto) SetHideAssertionsPresentMoreThanPercentageOfTime(v int32) {
	o.HideAssertionsPresentMoreThanPercentageOfTime = &v
}

func (o AssertionsRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssertionsRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.EntityKeys) {
		toSerialize["entityKeys"] = o.EntityKeys
	}
	if !IsNil(o.IncludeConnectedAssertions) {
		toSerialize["includeConnectedAssertions"] = o.IncludeConnectedAssertions
	}
	if !IsNil(o.AlertCategories) {
		toSerialize["alertCategories"] = o.AlertCategories
	}
	if !IsNil(o.Severities) {
		toSerialize["severities"] = o.Severities
	}
	if !IsNil(o.HideAssertionsOlderThanNHours) {
		toSerialize["hideAssertionsOlderThanNHours"] = o.HideAssertionsOlderThanNHours
	}
	if !IsNil(o.HideAssertionsPresentMoreThanPercentageOfTime) {
		toSerialize["hideAssertionsPresentMoreThanPercentageOfTime"] = o.HideAssertionsPresentMoreThanPercentageOfTime
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssertionsRequestDto) UnmarshalJSON(data []byte) (err error) {
	varAssertionsRequestDto := _AssertionsRequestDto{}

	err = json.Unmarshal(data, &varAssertionsRequestDto)

	if err != nil {
		return err
	}

	*o = AssertionsRequestDto(varAssertionsRequestDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "startTime")
		delete(additionalProperties, "endTime")
		delete(additionalProperties, "entityKeys")
		delete(additionalProperties, "includeConnectedAssertions")
		delete(additionalProperties, "alertCategories")
		delete(additionalProperties, "severities")
		delete(additionalProperties, "hideAssertionsOlderThanNHours")
		delete(additionalProperties, "hideAssertionsPresentMoreThanPercentageOfTime")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssertionsRequestDto struct {
	value *AssertionsRequestDto
	isSet bool
}

func (v NullableAssertionsRequestDto) Get() *AssertionsRequestDto {
	return v.value
}

func (v *NullableAssertionsRequestDto) Set(val *AssertionsRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAssertionsRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAssertionsRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssertionsRequestDto(val *AssertionsRequestDto) *NullableAssertionsRequestDto {
	return &NullableAssertionsRequestDto{value: val, isSet: true}
}

func (v NullableAssertionsRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssertionsRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
