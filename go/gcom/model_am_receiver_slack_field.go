/*
Asserts, Inc

Asserts Public API

API version: 2025.08.07-125604
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AMReceiverSlackField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AMReceiverSlackField{}

// AMReceiverSlackField struct for AMReceiverSlackField
type AMReceiverSlackField struct {
	Title                *string `json:"title,omitempty"`
	Value                *string `json:"value,omitempty"`
	Short                *bool   `json:"short,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AMReceiverSlackField AMReceiverSlackField

// NewAMReceiverSlackField instantiates a new AMReceiverSlackField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAMReceiverSlackField() *AMReceiverSlackField {
	this := AMReceiverSlackField{}
	return &this
}

// NewAMReceiverSlackFieldWithDefaults instantiates a new AMReceiverSlackField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAMReceiverSlackFieldWithDefaults() *AMReceiverSlackField {
	this := AMReceiverSlackField{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AMReceiverSlackField) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlackField) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AMReceiverSlackField) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AMReceiverSlackField) SetTitle(v string) {
	o.Title = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AMReceiverSlackField) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlackField) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AMReceiverSlackField) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AMReceiverSlackField) SetValue(v string) {
	o.Value = &v
}

// GetShort returns the Short field value if set, zero value otherwise.
func (o *AMReceiverSlackField) GetShort() bool {
	if o == nil || IsNil(o.Short) {
		var ret bool
		return ret
	}
	return *o.Short
}

// GetShortOk returns a tuple with the Short field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSlackField) GetShortOk() (*bool, bool) {
	if o == nil || IsNil(o.Short) {
		return nil, false
	}
	return o.Short, true
}

// HasShort returns a boolean if a field has been set.
func (o *AMReceiverSlackField) HasShort() bool {
	if o != nil && !IsNil(o.Short) {
		return true
	}

	return false
}

// SetShort gets a reference to the given bool and assigns it to the Short field.
func (o *AMReceiverSlackField) SetShort(v bool) {
	o.Short = &v
}

func (o AMReceiverSlackField) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AMReceiverSlackField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Short) {
		toSerialize["short"] = o.Short
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AMReceiverSlackField) UnmarshalJSON(data []byte) (err error) {
	varAMReceiverSlackField := _AMReceiverSlackField{}

	err = json.Unmarshal(data, &varAMReceiverSlackField)

	if err != nil {
		return err
	}

	*o = AMReceiverSlackField(varAMReceiverSlackField)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "title")
		delete(additionalProperties, "value")
		delete(additionalProperties, "short")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAMReceiverSlackField struct {
	value *AMReceiverSlackField
	isSet bool
}

func (v NullableAMReceiverSlackField) Get() *AMReceiverSlackField {
	return v.value
}

func (v *NullableAMReceiverSlackField) Set(val *AMReceiverSlackField) {
	v.value = val
	v.isSet = true
}

func (v NullableAMReceiverSlackField) IsSet() bool {
	return v.isSet
}

func (v *NullableAMReceiverSlackField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAMReceiverSlackField(val *AMReceiverSlackField) *NullableAMReceiverSlackField {
	return &NullableAMReceiverSlackField{value: val, isSet: true}
}

func (v NullableAMReceiverSlackField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAMReceiverSlackField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
