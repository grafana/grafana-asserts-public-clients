/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-161538
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the DefinedByDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefinedByDto{}

// DefinedByDto struct for DefinedByDto
type DefinedByDto struct {
	StaticProperties     map[string]interface{} `json:"staticProperties,omitempty"`
	Source               string                 `json:"source"`
	AdditionalProperties map[string]interface{}
}

type _DefinedByDto DefinedByDto

// NewDefinedByDto instantiates a new DefinedByDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefinedByDto(source string) *DefinedByDto {
	this := DefinedByDto{}
	this.Source = source
	return &this
}

// NewDefinedByDtoWithDefaults instantiates a new DefinedByDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefinedByDtoWithDefaults() *DefinedByDto {
	this := DefinedByDto{}
	return &this
}

// GetStaticProperties returns the StaticProperties field value if set, zero value otherwise.
func (o *DefinedByDto) GetStaticProperties() map[string]interface{} {
	if o == nil || IsNil(o.StaticProperties) {
		var ret map[string]interface{}
		return ret
	}
	return o.StaticProperties
}

// GetStaticPropertiesOk returns a tuple with the StaticProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefinedByDto) GetStaticPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.StaticProperties) {
		return map[string]interface{}{}, false
	}
	return o.StaticProperties, true
}

// HasStaticProperties returns a boolean if a field has been set.
func (o *DefinedByDto) HasStaticProperties() bool {
	if o != nil && !IsNil(o.StaticProperties) {
		return true
	}

	return false
}

// SetStaticProperties gets a reference to the given map[string]interface{} and assigns it to the StaticProperties field.
func (o *DefinedByDto) SetStaticProperties(v map[string]interface{}) {
	o.StaticProperties = v
}

// GetSource returns the Source field value
func (o *DefinedByDto) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *DefinedByDto) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *DefinedByDto) SetSource(v string) {
	o.Source = v
}

func (o DefinedByDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefinedByDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StaticProperties) {
		toSerialize["staticProperties"] = o.StaticProperties
	}
	toSerialize["source"] = o.Source

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DefinedByDto) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	varDefinedByDto := _DefinedByDto{}

	err = json.Unmarshal(data, &varDefinedByDto)

	if err != nil {
		return err
	}

	*o = DefinedByDto(varDefinedByDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "staticProperties")
		delete(additionalProperties, "source")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDefinedByDto struct {
	value *DefinedByDto
	isSet bool
}

func (v NullableDefinedByDto) Get() *DefinedByDto {
	return v.value
}

func (v *NullableDefinedByDto) Set(val *DefinedByDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDefinedByDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDefinedByDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefinedByDto(val *DefinedByDto) *NullableDefinedByDto {
	return &NullableDefinedByDto{value: val, isSet: true}
}

func (v NullableDefinedByDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefinedByDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
