/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-062139
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the TraceEnvConfigResponseDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TraceEnvConfigResponseDto{}

// TraceEnvConfigResponseDto struct for TraceEnvConfigResponseDto
type TraceEnvConfigResponseDto struct {
	TraceEnvConfigDtos   []TraceEnvConfigDto `json:"traceEnvConfigDtos,omitempty"`
	SupportedTraceTools  []string            `json:"supportedTraceTools,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TraceEnvConfigResponseDto TraceEnvConfigResponseDto

// NewTraceEnvConfigResponseDto instantiates a new TraceEnvConfigResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTraceEnvConfigResponseDto() *TraceEnvConfigResponseDto {
	this := TraceEnvConfigResponseDto{}
	return &this
}

// NewTraceEnvConfigResponseDtoWithDefaults instantiates a new TraceEnvConfigResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTraceEnvConfigResponseDtoWithDefaults() *TraceEnvConfigResponseDto {
	this := TraceEnvConfigResponseDto{}
	return &this
}

// GetTraceEnvConfigDtos returns the TraceEnvConfigDtos field value if set, zero value otherwise.
func (o *TraceEnvConfigResponseDto) GetTraceEnvConfigDtos() []TraceEnvConfigDto {
	if o == nil || IsNil(o.TraceEnvConfigDtos) {
		var ret []TraceEnvConfigDto
		return ret
	}
	return o.TraceEnvConfigDtos
}

// GetTraceEnvConfigDtosOk returns a tuple with the TraceEnvConfigDtos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceEnvConfigResponseDto) GetTraceEnvConfigDtosOk() ([]TraceEnvConfigDto, bool) {
	if o == nil || IsNil(o.TraceEnvConfigDtos) {
		return nil, false
	}
	return o.TraceEnvConfigDtos, true
}

// HasTraceEnvConfigDtos returns a boolean if a field has been set.
func (o *TraceEnvConfigResponseDto) HasTraceEnvConfigDtos() bool {
	if o != nil && !IsNil(o.TraceEnvConfigDtos) {
		return true
	}

	return false
}

// SetTraceEnvConfigDtos gets a reference to the given []TraceEnvConfigDto and assigns it to the TraceEnvConfigDtos field.
func (o *TraceEnvConfigResponseDto) SetTraceEnvConfigDtos(v []TraceEnvConfigDto) {
	o.TraceEnvConfigDtos = v
}

// GetSupportedTraceTools returns the SupportedTraceTools field value if set, zero value otherwise.
func (o *TraceEnvConfigResponseDto) GetSupportedTraceTools() []string {
	if o == nil || IsNil(o.SupportedTraceTools) {
		var ret []string
		return ret
	}
	return o.SupportedTraceTools
}

// GetSupportedTraceToolsOk returns a tuple with the SupportedTraceTools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceEnvConfigResponseDto) GetSupportedTraceToolsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedTraceTools) {
		return nil, false
	}
	return o.SupportedTraceTools, true
}

// HasSupportedTraceTools returns a boolean if a field has been set.
func (o *TraceEnvConfigResponseDto) HasSupportedTraceTools() bool {
	if o != nil && !IsNil(o.SupportedTraceTools) {
		return true
	}

	return false
}

// SetSupportedTraceTools gets a reference to the given []string and assigns it to the SupportedTraceTools field.
func (o *TraceEnvConfigResponseDto) SetSupportedTraceTools(v []string) {
	o.SupportedTraceTools = v
}

func (o TraceEnvConfigResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TraceEnvConfigResponseDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TraceEnvConfigDtos) {
		toSerialize["traceEnvConfigDtos"] = o.TraceEnvConfigDtos
	}
	if !IsNil(o.SupportedTraceTools) {
		toSerialize["supportedTraceTools"] = o.SupportedTraceTools
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TraceEnvConfigResponseDto) UnmarshalJSON(data []byte) (err error) {
	varTraceEnvConfigResponseDto := _TraceEnvConfigResponseDto{}

	err = json.Unmarshal(data, &varTraceEnvConfigResponseDto)

	if err != nil {
		return err
	}

	*o = TraceEnvConfigResponseDto(varTraceEnvConfigResponseDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "traceEnvConfigDtos")
		delete(additionalProperties, "supportedTraceTools")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTraceEnvConfigResponseDto struct {
	value *TraceEnvConfigResponseDto
	isSet bool
}

func (v NullableTraceEnvConfigResponseDto) Get() *TraceEnvConfigResponseDto {
	return v.value
}

func (v *NullableTraceEnvConfigResponseDto) Set(val *TraceEnvConfigResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTraceEnvConfigResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTraceEnvConfigResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTraceEnvConfigResponseDto(val *TraceEnvConfigResponseDto) *NullableTraceEnvConfigResponseDto {
	return &NullableTraceEnvConfigResponseDto{value: val, isSet: true}
}

func (v NullableTraceEnvConfigResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTraceEnvConfigResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
