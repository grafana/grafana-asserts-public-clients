/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-110859
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
	"reflect"
	"strings"
)

// checks if the DefinedByPropertyMatchDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefinedByPropertyMatchDto{}

// DefinedByPropertyMatchDto struct for DefinedByPropertyMatchDto
type DefinedByPropertyMatchDto struct {
	DefinedByDto
	StartEntityProperties []string `json:"startEntityProperties,omitempty"`
	EndEntityProperties   []string `json:"endEntityProperties,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _DefinedByPropertyMatchDto DefinedByPropertyMatchDto

// NewDefinedByPropertyMatchDto instantiates a new DefinedByPropertyMatchDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefinedByPropertyMatchDto(source string) *DefinedByPropertyMatchDto {
	this := DefinedByPropertyMatchDto{}
	this.Source = source
	return &this
}

// NewDefinedByPropertyMatchDtoWithDefaults instantiates a new DefinedByPropertyMatchDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefinedByPropertyMatchDtoWithDefaults() *DefinedByPropertyMatchDto {
	this := DefinedByPropertyMatchDto{}
	return &this
}

// GetStartEntityProperties returns the StartEntityProperties field value if set, zero value otherwise.
func (o *DefinedByPropertyMatchDto) GetStartEntityProperties() []string {
	if o == nil || IsNil(o.StartEntityProperties) {
		var ret []string
		return ret
	}
	return o.StartEntityProperties
}

// GetStartEntityPropertiesOk returns a tuple with the StartEntityProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefinedByPropertyMatchDto) GetStartEntityPropertiesOk() ([]string, bool) {
	if o == nil || IsNil(o.StartEntityProperties) {
		return nil, false
	}
	return o.StartEntityProperties, true
}

// HasStartEntityProperties returns a boolean if a field has been set.
func (o *DefinedByPropertyMatchDto) HasStartEntityProperties() bool {
	if o != nil && !IsNil(o.StartEntityProperties) {
		return true
	}

	return false
}

// SetStartEntityProperties gets a reference to the given []string and assigns it to the StartEntityProperties field.
func (o *DefinedByPropertyMatchDto) SetStartEntityProperties(v []string) {
	o.StartEntityProperties = v
}

// GetEndEntityProperties returns the EndEntityProperties field value if set, zero value otherwise.
func (o *DefinedByPropertyMatchDto) GetEndEntityProperties() []string {
	if o == nil || IsNil(o.EndEntityProperties) {
		var ret []string
		return ret
	}
	return o.EndEntityProperties
}

// GetEndEntityPropertiesOk returns a tuple with the EndEntityProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefinedByPropertyMatchDto) GetEndEntityPropertiesOk() ([]string, bool) {
	if o == nil || IsNil(o.EndEntityProperties) {
		return nil, false
	}
	return o.EndEntityProperties, true
}

// HasEndEntityProperties returns a boolean if a field has been set.
func (o *DefinedByPropertyMatchDto) HasEndEntityProperties() bool {
	if o != nil && !IsNil(o.EndEntityProperties) {
		return true
	}

	return false
}

// SetEndEntityProperties gets a reference to the given []string and assigns it to the EndEntityProperties field.
func (o *DefinedByPropertyMatchDto) SetEndEntityProperties(v []string) {
	o.EndEntityProperties = v
}

func (o DefinedByPropertyMatchDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefinedByPropertyMatchDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedDefinedByDto, errDefinedByDto := json.Marshal(o.DefinedByDto)
	if errDefinedByDto != nil {
		return map[string]interface{}{}, errDefinedByDto
	}
	errDefinedByDto = json.Unmarshal([]byte(serializedDefinedByDto), &toSerialize)
	if errDefinedByDto != nil {
		return map[string]interface{}{}, errDefinedByDto
	}
	if !IsNil(o.StartEntityProperties) {
		toSerialize["startEntityProperties"] = o.StartEntityProperties
	}
	if !IsNil(o.EndEntityProperties) {
		toSerialize["endEntityProperties"] = o.EndEntityProperties
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DefinedByPropertyMatchDto) UnmarshalJSON(data []byte) (err error) {
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	type DefinedByPropertyMatchDtoWithoutEmbeddedStruct struct {
		StartEntityProperties []string `json:"startEntityProperties,omitempty"`
		EndEntityProperties   []string `json:"endEntityProperties,omitempty"`
	}

	varDefinedByPropertyMatchDtoWithoutEmbeddedStruct := DefinedByPropertyMatchDtoWithoutEmbeddedStruct{}

	err = json.Unmarshal(data, &varDefinedByPropertyMatchDtoWithoutEmbeddedStruct)
	if err == nil {
		varDefinedByPropertyMatchDto := _DefinedByPropertyMatchDto{}
		varDefinedByPropertyMatchDto.StartEntityProperties = varDefinedByPropertyMatchDtoWithoutEmbeddedStruct.StartEntityProperties
		varDefinedByPropertyMatchDto.EndEntityProperties = varDefinedByPropertyMatchDtoWithoutEmbeddedStruct.EndEntityProperties
		*o = DefinedByPropertyMatchDto(varDefinedByPropertyMatchDto)
	} else {
		return err
	}

	varDefinedByPropertyMatchDto := _DefinedByPropertyMatchDto{}

	err = json.Unmarshal(data, &varDefinedByPropertyMatchDto)
	if err == nil {
		o.DefinedByDto = varDefinedByPropertyMatchDto.DefinedByDto
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "startEntityProperties")
		delete(additionalProperties, "endEntityProperties")

		// remove fields from embedded structs
		reflectDefinedByDto := reflect.ValueOf(o.DefinedByDto)
		for i := 0; i < reflectDefinedByDto.Type().NumField(); i++ {
			t := reflectDefinedByDto.Type().Field(i)

			if jsonTag := t.Tag.Get("json"); jsonTag != "" {
				fieldName := ""
				if commaIdx := strings.Index(jsonTag, ","); commaIdx > 0 {
					fieldName = jsonTag[:commaIdx]
				} else {
					fieldName = jsonTag
				}
				if fieldName != "AdditionalProperties" {
					delete(additionalProperties, fieldName)
				}
			}
		}

		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDefinedByPropertyMatchDto struct {
	value *DefinedByPropertyMatchDto
	isSet bool
}

func (v NullableDefinedByPropertyMatchDto) Get() *DefinedByPropertyMatchDto {
	return v.value
}

func (v *NullableDefinedByPropertyMatchDto) Set(val *DefinedByPropertyMatchDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDefinedByPropertyMatchDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDefinedByPropertyMatchDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefinedByPropertyMatchDto(val *DefinedByPropertyMatchDto) *NullableDefinedByPropertyMatchDto {
	return &NullableDefinedByPropertyMatchDto{value: val, isSet: true}
}

func (v NullableDefinedByPropertyMatchDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefinedByPropertyMatchDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
