/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-161538
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the OtelCollectorConfigDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OtelCollectorConfigDto{}

// OtelCollectorConfigDto struct for OtelCollectorConfigDto
type OtelCollectorConfigDto struct {
	CaptureMetrics                  *bool                                            `json:"capture_metrics,omitempty"`
	CustomAttributes                map[string]map[string][]CustomAttributeConfigDto `json:"custom_attributes,omitempty"`
	SpanAttributes                  []SpanAttributeDto                               `json:"span_attributes,omitempty"`
	AttributesAsMetricLabels        []string                                         `json:"attributes_as_metric_labels,omitempty"`
	SamplingLatencyThresholdSeconds *float64                                         `json:"sampling_latency_threshold_seconds,omitempty"`
	LatencyHistogramBuckets         []float64                                        `json:"latency_histogram_buckets,omitempty"`
	IgnoreClientErrors              *bool                                            `json:"ignore_client_errors,omitempty"`
	AdditionalProperties            map[string]interface{}
}

type _OtelCollectorConfigDto OtelCollectorConfigDto

// NewOtelCollectorConfigDto instantiates a new OtelCollectorConfigDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOtelCollectorConfigDto() *OtelCollectorConfigDto {
	this := OtelCollectorConfigDto{}
	return &this
}

// NewOtelCollectorConfigDtoWithDefaults instantiates a new OtelCollectorConfigDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOtelCollectorConfigDtoWithDefaults() *OtelCollectorConfigDto {
	this := OtelCollectorConfigDto{}
	return &this
}

// GetCaptureMetrics returns the CaptureMetrics field value if set, zero value otherwise.
func (o *OtelCollectorConfigDto) GetCaptureMetrics() bool {
	if o == nil || IsNil(o.CaptureMetrics) {
		var ret bool
		return ret
	}
	return *o.CaptureMetrics
}

// GetCaptureMetricsOk returns a tuple with the CaptureMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtelCollectorConfigDto) GetCaptureMetricsOk() (*bool, bool) {
	if o == nil || IsNil(o.CaptureMetrics) {
		return nil, false
	}
	return o.CaptureMetrics, true
}

// HasCaptureMetrics returns a boolean if a field has been set.
func (o *OtelCollectorConfigDto) HasCaptureMetrics() bool {
	if o != nil && !IsNil(o.CaptureMetrics) {
		return true
	}

	return false
}

// SetCaptureMetrics gets a reference to the given bool and assigns it to the CaptureMetrics field.
func (o *OtelCollectorConfigDto) SetCaptureMetrics(v bool) {
	o.CaptureMetrics = &v
}

// GetCustomAttributes returns the CustomAttributes field value if set, zero value otherwise.
func (o *OtelCollectorConfigDto) GetCustomAttributes() map[string]map[string][]CustomAttributeConfigDto {
	if o == nil || IsNil(o.CustomAttributes) {
		var ret map[string]map[string][]CustomAttributeConfigDto
		return ret
	}
	return o.CustomAttributes
}

// GetCustomAttributesOk returns a tuple with the CustomAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtelCollectorConfigDto) GetCustomAttributesOk() (map[string]map[string][]CustomAttributeConfigDto, bool) {
	if o == nil || IsNil(o.CustomAttributes) {
		return map[string]map[string][]CustomAttributeConfigDto{}, false
	}
	return o.CustomAttributes, true
}

// HasCustomAttributes returns a boolean if a field has been set.
func (o *OtelCollectorConfigDto) HasCustomAttributes() bool {
	if o != nil && !IsNil(o.CustomAttributes) {
		return true
	}

	return false
}

// SetCustomAttributes gets a reference to the given map[string]map[string][]CustomAttributeConfigDto and assigns it to the CustomAttributes field.
func (o *OtelCollectorConfigDto) SetCustomAttributes(v map[string]map[string][]CustomAttributeConfigDto) {
	o.CustomAttributes = v
}

// GetSpanAttributes returns the SpanAttributes field value if set, zero value otherwise.
func (o *OtelCollectorConfigDto) GetSpanAttributes() []SpanAttributeDto {
	if o == nil || IsNil(o.SpanAttributes) {
		var ret []SpanAttributeDto
		return ret
	}
	return o.SpanAttributes
}

// GetSpanAttributesOk returns a tuple with the SpanAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtelCollectorConfigDto) GetSpanAttributesOk() ([]SpanAttributeDto, bool) {
	if o == nil || IsNil(o.SpanAttributes) {
		return nil, false
	}
	return o.SpanAttributes, true
}

// HasSpanAttributes returns a boolean if a field has been set.
func (o *OtelCollectorConfigDto) HasSpanAttributes() bool {
	if o != nil && !IsNil(o.SpanAttributes) {
		return true
	}

	return false
}

// SetSpanAttributes gets a reference to the given []SpanAttributeDto and assigns it to the SpanAttributes field.
func (o *OtelCollectorConfigDto) SetSpanAttributes(v []SpanAttributeDto) {
	o.SpanAttributes = v
}

// GetAttributesAsMetricLabels returns the AttributesAsMetricLabels field value if set, zero value otherwise.
func (o *OtelCollectorConfigDto) GetAttributesAsMetricLabels() []string {
	if o == nil || IsNil(o.AttributesAsMetricLabels) {
		var ret []string
		return ret
	}
	return o.AttributesAsMetricLabels
}

// GetAttributesAsMetricLabelsOk returns a tuple with the AttributesAsMetricLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtelCollectorConfigDto) GetAttributesAsMetricLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.AttributesAsMetricLabels) {
		return nil, false
	}
	return o.AttributesAsMetricLabels, true
}

// HasAttributesAsMetricLabels returns a boolean if a field has been set.
func (o *OtelCollectorConfigDto) HasAttributesAsMetricLabels() bool {
	if o != nil && !IsNil(o.AttributesAsMetricLabels) {
		return true
	}

	return false
}

// SetAttributesAsMetricLabels gets a reference to the given []string and assigns it to the AttributesAsMetricLabels field.
func (o *OtelCollectorConfigDto) SetAttributesAsMetricLabels(v []string) {
	o.AttributesAsMetricLabels = v
}

// GetSamplingLatencyThresholdSeconds returns the SamplingLatencyThresholdSeconds field value if set, zero value otherwise.
func (o *OtelCollectorConfigDto) GetSamplingLatencyThresholdSeconds() float64 {
	if o == nil || IsNil(o.SamplingLatencyThresholdSeconds) {
		var ret float64
		return ret
	}
	return *o.SamplingLatencyThresholdSeconds
}

// GetSamplingLatencyThresholdSecondsOk returns a tuple with the SamplingLatencyThresholdSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtelCollectorConfigDto) GetSamplingLatencyThresholdSecondsOk() (*float64, bool) {
	if o == nil || IsNil(o.SamplingLatencyThresholdSeconds) {
		return nil, false
	}
	return o.SamplingLatencyThresholdSeconds, true
}

// HasSamplingLatencyThresholdSeconds returns a boolean if a field has been set.
func (o *OtelCollectorConfigDto) HasSamplingLatencyThresholdSeconds() bool {
	if o != nil && !IsNil(o.SamplingLatencyThresholdSeconds) {
		return true
	}

	return false
}

// SetSamplingLatencyThresholdSeconds gets a reference to the given float64 and assigns it to the SamplingLatencyThresholdSeconds field.
func (o *OtelCollectorConfigDto) SetSamplingLatencyThresholdSeconds(v float64) {
	o.SamplingLatencyThresholdSeconds = &v
}

// GetLatencyHistogramBuckets returns the LatencyHistogramBuckets field value if set, zero value otherwise.
func (o *OtelCollectorConfigDto) GetLatencyHistogramBuckets() []float64 {
	if o == nil || IsNil(o.LatencyHistogramBuckets) {
		var ret []float64
		return ret
	}
	return o.LatencyHistogramBuckets
}

// GetLatencyHistogramBucketsOk returns a tuple with the LatencyHistogramBuckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtelCollectorConfigDto) GetLatencyHistogramBucketsOk() ([]float64, bool) {
	if o == nil || IsNil(o.LatencyHistogramBuckets) {
		return nil, false
	}
	return o.LatencyHistogramBuckets, true
}

// HasLatencyHistogramBuckets returns a boolean if a field has been set.
func (o *OtelCollectorConfigDto) HasLatencyHistogramBuckets() bool {
	if o != nil && !IsNil(o.LatencyHistogramBuckets) {
		return true
	}

	return false
}

// SetLatencyHistogramBuckets gets a reference to the given []float64 and assigns it to the LatencyHistogramBuckets field.
func (o *OtelCollectorConfigDto) SetLatencyHistogramBuckets(v []float64) {
	o.LatencyHistogramBuckets = v
}

// GetIgnoreClientErrors returns the IgnoreClientErrors field value if set, zero value otherwise.
func (o *OtelCollectorConfigDto) GetIgnoreClientErrors() bool {
	if o == nil || IsNil(o.IgnoreClientErrors) {
		var ret bool
		return ret
	}
	return *o.IgnoreClientErrors
}

// GetIgnoreClientErrorsOk returns a tuple with the IgnoreClientErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtelCollectorConfigDto) GetIgnoreClientErrorsOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreClientErrors) {
		return nil, false
	}
	return o.IgnoreClientErrors, true
}

// HasIgnoreClientErrors returns a boolean if a field has been set.
func (o *OtelCollectorConfigDto) HasIgnoreClientErrors() bool {
	if o != nil && !IsNil(o.IgnoreClientErrors) {
		return true
	}

	return false
}

// SetIgnoreClientErrors gets a reference to the given bool and assigns it to the IgnoreClientErrors field.
func (o *OtelCollectorConfigDto) SetIgnoreClientErrors(v bool) {
	o.IgnoreClientErrors = &v
}

func (o OtelCollectorConfigDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OtelCollectorConfigDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CaptureMetrics) {
		toSerialize["capture_metrics"] = o.CaptureMetrics
	}
	if !IsNil(o.CustomAttributes) {
		toSerialize["custom_attributes"] = o.CustomAttributes
	}
	if !IsNil(o.SpanAttributes) {
		toSerialize["span_attributes"] = o.SpanAttributes
	}
	if !IsNil(o.AttributesAsMetricLabels) {
		toSerialize["attributes_as_metric_labels"] = o.AttributesAsMetricLabels
	}
	if !IsNil(o.SamplingLatencyThresholdSeconds) {
		toSerialize["sampling_latency_threshold_seconds"] = o.SamplingLatencyThresholdSeconds
	}
	if !IsNil(o.LatencyHistogramBuckets) {
		toSerialize["latency_histogram_buckets"] = o.LatencyHistogramBuckets
	}
	if !IsNil(o.IgnoreClientErrors) {
		toSerialize["ignore_client_errors"] = o.IgnoreClientErrors
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OtelCollectorConfigDto) UnmarshalJSON(data []byte) (err error) {
	varOtelCollectorConfigDto := _OtelCollectorConfigDto{}

	err = json.Unmarshal(data, &varOtelCollectorConfigDto)

	if err != nil {
		return err
	}

	*o = OtelCollectorConfigDto(varOtelCollectorConfigDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "capture_metrics")
		delete(additionalProperties, "custom_attributes")
		delete(additionalProperties, "span_attributes")
		delete(additionalProperties, "attributes_as_metric_labels")
		delete(additionalProperties, "sampling_latency_threshold_seconds")
		delete(additionalProperties, "latency_histogram_buckets")
		delete(additionalProperties, "ignore_client_errors")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOtelCollectorConfigDto struct {
	value *OtelCollectorConfigDto
	isSet bool
}

func (v NullableOtelCollectorConfigDto) Get() *OtelCollectorConfigDto {
	return v.value
}

func (v *NullableOtelCollectorConfigDto) Set(val *OtelCollectorConfigDto) {
	v.value = val
	v.isSet = true
}

func (v NullableOtelCollectorConfigDto) IsSet() bool {
	return v.isSet
}

func (v *NullableOtelCollectorConfigDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOtelCollectorConfigDto(val *OtelCollectorConfigDto) *NullableOtelCollectorConfigDto {
	return &NullableOtelCollectorConfigDto{value: val, isSet: true}
}

func (v NullableOtelCollectorConfigDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOtelCollectorConfigDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
