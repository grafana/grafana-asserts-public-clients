/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-112305
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the ResourceThresholdV2Dto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceThresholdV2Dto{}

// ResourceThresholdV2Dto struct for ResourceThresholdV2Dto
type ResourceThresholdV2Dto struct {
	AssertionName        *string  `json:"assertionName,omitempty"`
	ResourceType         *string  `json:"resourceType,omitempty"`
	ContainerName        *string  `json:"containerName,omitempty"`
	Source               *string  `json:"source,omitempty"`
	Severity             *string  `json:"severity,omitempty"`
	Value                *float64 `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResourceThresholdV2Dto ResourceThresholdV2Dto

// NewResourceThresholdV2Dto instantiates a new ResourceThresholdV2Dto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceThresholdV2Dto() *ResourceThresholdV2Dto {
	this := ResourceThresholdV2Dto{}
	return &this
}

// NewResourceThresholdV2DtoWithDefaults instantiates a new ResourceThresholdV2Dto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceThresholdV2DtoWithDefaults() *ResourceThresholdV2Dto {
	this := ResourceThresholdV2Dto{}
	return &this
}

// GetAssertionName returns the AssertionName field value if set, zero value otherwise.
func (o *ResourceThresholdV2Dto) GetAssertionName() string {
	if o == nil || IsNil(o.AssertionName) {
		var ret string
		return ret
	}
	return *o.AssertionName
}

// GetAssertionNameOk returns a tuple with the AssertionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceThresholdV2Dto) GetAssertionNameOk() (*string, bool) {
	if o == nil || IsNil(o.AssertionName) {
		return nil, false
	}
	return o.AssertionName, true
}

// HasAssertionName returns a boolean if a field has been set.
func (o *ResourceThresholdV2Dto) HasAssertionName() bool {
	if o != nil && !IsNil(o.AssertionName) {
		return true
	}

	return false
}

// SetAssertionName gets a reference to the given string and assigns it to the AssertionName field.
func (o *ResourceThresholdV2Dto) SetAssertionName(v string) {
	o.AssertionName = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *ResourceThresholdV2Dto) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceThresholdV2Dto) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *ResourceThresholdV2Dto) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *ResourceThresholdV2Dto) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetContainerName returns the ContainerName field value if set, zero value otherwise.
func (o *ResourceThresholdV2Dto) GetContainerName() string {
	if o == nil || IsNil(o.ContainerName) {
		var ret string
		return ret
	}
	return *o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceThresholdV2Dto) GetContainerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContainerName) {
		return nil, false
	}
	return o.ContainerName, true
}

// HasContainerName returns a boolean if a field has been set.
func (o *ResourceThresholdV2Dto) HasContainerName() bool {
	if o != nil && !IsNil(o.ContainerName) {
		return true
	}

	return false
}

// SetContainerName gets a reference to the given string and assigns it to the ContainerName field.
func (o *ResourceThresholdV2Dto) SetContainerName(v string) {
	o.ContainerName = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ResourceThresholdV2Dto) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceThresholdV2Dto) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ResourceThresholdV2Dto) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *ResourceThresholdV2Dto) SetSource(v string) {
	o.Source = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *ResourceThresholdV2Dto) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceThresholdV2Dto) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *ResourceThresholdV2Dto) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *ResourceThresholdV2Dto) SetSeverity(v string) {
	o.Severity = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ResourceThresholdV2Dto) GetValue() float64 {
	if o == nil || IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceThresholdV2Dto) GetValueOk() (*float64, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ResourceThresholdV2Dto) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *ResourceThresholdV2Dto) SetValue(v float64) {
	o.Value = &v
}

func (o ResourceThresholdV2Dto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceThresholdV2Dto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssertionName) {
		toSerialize["assertionName"] = o.AssertionName
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.ContainerName) {
		toSerialize["containerName"] = o.ContainerName
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResourceThresholdV2Dto) UnmarshalJSON(data []byte) (err error) {
	varResourceThresholdV2Dto := _ResourceThresholdV2Dto{}

	err = json.Unmarshal(data, &varResourceThresholdV2Dto)

	if err != nil {
		return err
	}

	*o = ResourceThresholdV2Dto(varResourceThresholdV2Dto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "assertionName")
		delete(additionalProperties, "resourceType")
		delete(additionalProperties, "containerName")
		delete(additionalProperties, "source")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResourceThresholdV2Dto struct {
	value *ResourceThresholdV2Dto
	isSet bool
}

func (v NullableResourceThresholdV2Dto) Get() *ResourceThresholdV2Dto {
	return v.value
}

func (v *NullableResourceThresholdV2Dto) Set(val *ResourceThresholdV2Dto) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceThresholdV2Dto) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceThresholdV2Dto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceThresholdV2Dto(val *ResourceThresholdV2Dto) *NullableResourceThresholdV2Dto {
	return &NullableResourceThresholdV2Dto{value: val, isSet: true}
}

func (v NullableResourceThresholdV2Dto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceThresholdV2Dto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
