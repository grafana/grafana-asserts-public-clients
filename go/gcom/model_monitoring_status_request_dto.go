/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-112305
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the MonitoringStatusRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitoringStatusRequestDto{}

// MonitoringStatusRequestDto struct for MonitoringStatusRequestDto
type MonitoringStatusRequestDto struct {
	EntityKeys           []EntityKeyDto    `json:"entityKeys,omitempty"`
	InstantMs            *int64            `json:"instantMs,omitempty"`
	ReportOnlyMissing    *bool             `json:"reportOnlyMissing,omitempty"`
	ScopeCriteriaDto     *ScopeCriteriaDto `json:"scopeCriteriaDto,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MonitoringStatusRequestDto MonitoringStatusRequestDto

// NewMonitoringStatusRequestDto instantiates a new MonitoringStatusRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringStatusRequestDto() *MonitoringStatusRequestDto {
	this := MonitoringStatusRequestDto{}
	return &this
}

// NewMonitoringStatusRequestDtoWithDefaults instantiates a new MonitoringStatusRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringStatusRequestDtoWithDefaults() *MonitoringStatusRequestDto {
	this := MonitoringStatusRequestDto{}
	return &this
}

// GetEntityKeys returns the EntityKeys field value if set, zero value otherwise.
func (o *MonitoringStatusRequestDto) GetEntityKeys() []EntityKeyDto {
	if o == nil || IsNil(o.EntityKeys) {
		var ret []EntityKeyDto
		return ret
	}
	return o.EntityKeys
}

// GetEntityKeysOk returns a tuple with the EntityKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringStatusRequestDto) GetEntityKeysOk() ([]EntityKeyDto, bool) {
	if o == nil || IsNil(o.EntityKeys) {
		return nil, false
	}
	return o.EntityKeys, true
}

// HasEntityKeys returns a boolean if a field has been set.
func (o *MonitoringStatusRequestDto) HasEntityKeys() bool {
	if o != nil && !IsNil(o.EntityKeys) {
		return true
	}

	return false
}

// SetEntityKeys gets a reference to the given []EntityKeyDto and assigns it to the EntityKeys field.
func (o *MonitoringStatusRequestDto) SetEntityKeys(v []EntityKeyDto) {
	o.EntityKeys = v
}

// GetInstantMs returns the InstantMs field value if set, zero value otherwise.
func (o *MonitoringStatusRequestDto) GetInstantMs() int64 {
	if o == nil || IsNil(o.InstantMs) {
		var ret int64
		return ret
	}
	return *o.InstantMs
}

// GetInstantMsOk returns a tuple with the InstantMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringStatusRequestDto) GetInstantMsOk() (*int64, bool) {
	if o == nil || IsNil(o.InstantMs) {
		return nil, false
	}
	return o.InstantMs, true
}

// HasInstantMs returns a boolean if a field has been set.
func (o *MonitoringStatusRequestDto) HasInstantMs() bool {
	if o != nil && !IsNil(o.InstantMs) {
		return true
	}

	return false
}

// SetInstantMs gets a reference to the given int64 and assigns it to the InstantMs field.
func (o *MonitoringStatusRequestDto) SetInstantMs(v int64) {
	o.InstantMs = &v
}

// GetReportOnlyMissing returns the ReportOnlyMissing field value if set, zero value otherwise.
func (o *MonitoringStatusRequestDto) GetReportOnlyMissing() bool {
	if o == nil || IsNil(o.ReportOnlyMissing) {
		var ret bool
		return ret
	}
	return *o.ReportOnlyMissing
}

// GetReportOnlyMissingOk returns a tuple with the ReportOnlyMissing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringStatusRequestDto) GetReportOnlyMissingOk() (*bool, bool) {
	if o == nil || IsNil(o.ReportOnlyMissing) {
		return nil, false
	}
	return o.ReportOnlyMissing, true
}

// HasReportOnlyMissing returns a boolean if a field has been set.
func (o *MonitoringStatusRequestDto) HasReportOnlyMissing() bool {
	if o != nil && !IsNil(o.ReportOnlyMissing) {
		return true
	}

	return false
}

// SetReportOnlyMissing gets a reference to the given bool and assigns it to the ReportOnlyMissing field.
func (o *MonitoringStatusRequestDto) SetReportOnlyMissing(v bool) {
	o.ReportOnlyMissing = &v
}

// GetScopeCriteriaDto returns the ScopeCriteriaDto field value if set, zero value otherwise.
func (o *MonitoringStatusRequestDto) GetScopeCriteriaDto() ScopeCriteriaDto {
	if o == nil || IsNil(o.ScopeCriteriaDto) {
		var ret ScopeCriteriaDto
		return ret
	}
	return *o.ScopeCriteriaDto
}

// GetScopeCriteriaDtoOk returns a tuple with the ScopeCriteriaDto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringStatusRequestDto) GetScopeCriteriaDtoOk() (*ScopeCriteriaDto, bool) {
	if o == nil || IsNil(o.ScopeCriteriaDto) {
		return nil, false
	}
	return o.ScopeCriteriaDto, true
}

// HasScopeCriteriaDto returns a boolean if a field has been set.
func (o *MonitoringStatusRequestDto) HasScopeCriteriaDto() bool {
	if o != nil && !IsNil(o.ScopeCriteriaDto) {
		return true
	}

	return false
}

// SetScopeCriteriaDto gets a reference to the given ScopeCriteriaDto and assigns it to the ScopeCriteriaDto field.
func (o *MonitoringStatusRequestDto) SetScopeCriteriaDto(v ScopeCriteriaDto) {
	o.ScopeCriteriaDto = &v
}

func (o MonitoringStatusRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitoringStatusRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntityKeys) {
		toSerialize["entityKeys"] = o.EntityKeys
	}
	if !IsNil(o.InstantMs) {
		toSerialize["instantMs"] = o.InstantMs
	}
	if !IsNil(o.ReportOnlyMissing) {
		toSerialize["reportOnlyMissing"] = o.ReportOnlyMissing
	}
	if !IsNil(o.ScopeCriteriaDto) {
		toSerialize["scopeCriteriaDto"] = o.ScopeCriteriaDto
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MonitoringStatusRequestDto) UnmarshalJSON(data []byte) (err error) {
	varMonitoringStatusRequestDto := _MonitoringStatusRequestDto{}

	err = json.Unmarshal(data, &varMonitoringStatusRequestDto)

	if err != nil {
		return err
	}

	*o = MonitoringStatusRequestDto(varMonitoringStatusRequestDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entityKeys")
		delete(additionalProperties, "instantMs")
		delete(additionalProperties, "reportOnlyMissing")
		delete(additionalProperties, "scopeCriteriaDto")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMonitoringStatusRequestDto struct {
	value *MonitoringStatusRequestDto
	isSet bool
}

func (v NullableMonitoringStatusRequestDto) Get() *MonitoringStatusRequestDto {
	return v.value
}

func (v *NullableMonitoringStatusRequestDto) Set(val *MonitoringStatusRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringStatusRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringStatusRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringStatusRequestDto(val *MonitoringStatusRequestDto) *NullableMonitoringStatusRequestDto {
	return &NullableMonitoringStatusRequestDto{value: val, isSet: true}
}

func (v NullableMonitoringStatusRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringStatusRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
