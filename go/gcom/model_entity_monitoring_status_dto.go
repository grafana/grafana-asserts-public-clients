/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-055054
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the EntityMonitoringStatusDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntityMonitoringStatusDto{}

// EntityMonitoringStatusDto struct for EntityMonitoringStatusDto
type EntityMonitoringStatusDto struct {
	EntityKey            *EntityKeyDto `json:"entityKey,omitempty"`
	Resource             *bool         `json:"resource,omitempty"`
	Traffic              *bool         `json:"traffic,omitempty"`
	Latency              *bool         `json:"latency,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EntityMonitoringStatusDto EntityMonitoringStatusDto

// NewEntityMonitoringStatusDto instantiates a new EntityMonitoringStatusDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityMonitoringStatusDto() *EntityMonitoringStatusDto {
	this := EntityMonitoringStatusDto{}
	return &this
}

// NewEntityMonitoringStatusDtoWithDefaults instantiates a new EntityMonitoringStatusDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityMonitoringStatusDtoWithDefaults() *EntityMonitoringStatusDto {
	this := EntityMonitoringStatusDto{}
	return &this
}

// GetEntityKey returns the EntityKey field value if set, zero value otherwise.
func (o *EntityMonitoringStatusDto) GetEntityKey() EntityKeyDto {
	if o == nil || IsNil(o.EntityKey) {
		var ret EntityKeyDto
		return ret
	}
	return *o.EntityKey
}

// GetEntityKeyOk returns a tuple with the EntityKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityMonitoringStatusDto) GetEntityKeyOk() (*EntityKeyDto, bool) {
	if o == nil || IsNil(o.EntityKey) {
		return nil, false
	}
	return o.EntityKey, true
}

// HasEntityKey returns a boolean if a field has been set.
func (o *EntityMonitoringStatusDto) HasEntityKey() bool {
	if o != nil && !IsNil(o.EntityKey) {
		return true
	}

	return false
}

// SetEntityKey gets a reference to the given EntityKeyDto and assigns it to the EntityKey field.
func (o *EntityMonitoringStatusDto) SetEntityKey(v EntityKeyDto) {
	o.EntityKey = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *EntityMonitoringStatusDto) GetResource() bool {
	if o == nil || IsNil(o.Resource) {
		var ret bool
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityMonitoringStatusDto) GetResourceOk() (*bool, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *EntityMonitoringStatusDto) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given bool and assigns it to the Resource field.
func (o *EntityMonitoringStatusDto) SetResource(v bool) {
	o.Resource = &v
}

// GetTraffic returns the Traffic field value if set, zero value otherwise.
func (o *EntityMonitoringStatusDto) GetTraffic() bool {
	if o == nil || IsNil(o.Traffic) {
		var ret bool
		return ret
	}
	return *o.Traffic
}

// GetTrafficOk returns a tuple with the Traffic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityMonitoringStatusDto) GetTrafficOk() (*bool, bool) {
	if o == nil || IsNil(o.Traffic) {
		return nil, false
	}
	return o.Traffic, true
}

// HasTraffic returns a boolean if a field has been set.
func (o *EntityMonitoringStatusDto) HasTraffic() bool {
	if o != nil && !IsNil(o.Traffic) {
		return true
	}

	return false
}

// SetTraffic gets a reference to the given bool and assigns it to the Traffic field.
func (o *EntityMonitoringStatusDto) SetTraffic(v bool) {
	o.Traffic = &v
}

// GetLatency returns the Latency field value if set, zero value otherwise.
func (o *EntityMonitoringStatusDto) GetLatency() bool {
	if o == nil || IsNil(o.Latency) {
		var ret bool
		return ret
	}
	return *o.Latency
}

// GetLatencyOk returns a tuple with the Latency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityMonitoringStatusDto) GetLatencyOk() (*bool, bool) {
	if o == nil || IsNil(o.Latency) {
		return nil, false
	}
	return o.Latency, true
}

// HasLatency returns a boolean if a field has been set.
func (o *EntityMonitoringStatusDto) HasLatency() bool {
	if o != nil && !IsNil(o.Latency) {
		return true
	}

	return false
}

// SetLatency gets a reference to the given bool and assigns it to the Latency field.
func (o *EntityMonitoringStatusDto) SetLatency(v bool) {
	o.Latency = &v
}

func (o EntityMonitoringStatusDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntityMonitoringStatusDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntityKey) {
		toSerialize["entityKey"] = o.EntityKey
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.Traffic) {
		toSerialize["traffic"] = o.Traffic
	}
	if !IsNil(o.Latency) {
		toSerialize["latency"] = o.Latency
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EntityMonitoringStatusDto) UnmarshalJSON(data []byte) (err error) {
	varEntityMonitoringStatusDto := _EntityMonitoringStatusDto{}

	err = json.Unmarshal(data, &varEntityMonitoringStatusDto)

	if err != nil {
		return err
	}

	*o = EntityMonitoringStatusDto(varEntityMonitoringStatusDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entityKey")
		delete(additionalProperties, "resource")
		delete(additionalProperties, "traffic")
		delete(additionalProperties, "latency")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEntityMonitoringStatusDto struct {
	value *EntityMonitoringStatusDto
	isSet bool
}

func (v NullableEntityMonitoringStatusDto) Get() *EntityMonitoringStatusDto {
	return v.value
}

func (v *NullableEntityMonitoringStatusDto) Set(val *EntityMonitoringStatusDto) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityMonitoringStatusDto) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityMonitoringStatusDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityMonitoringStatusDto(val *EntityMonitoringStatusDto) *NullableEntityMonitoringStatusDto {
	return &NullableEntityMonitoringStatusDto{value: val, isSet: true}
}

func (v NullableEntityMonitoringStatusDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityMonitoringStatusDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
