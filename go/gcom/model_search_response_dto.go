/*
Asserts, Inc

Asserts Public API

API version: 2025.09.11-132913
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the SearchResponseDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchResponseDto{}

// SearchResponseDto struct for SearchResponseDto
type SearchResponseDto struct {
	Type                 *string          `json:"type,omitempty"`
	TimeCriteria         *TimeCriteriaDto `json:"timeCriteria,omitempty"`
	StepDuration         *string          `json:"stepDuration,omitempty"`
	Data                 interface{}      `json:"data,omitempty"`
	AdjustedTimeCriteria *bool            `json:"adjustedTimeCriteria,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SearchResponseDto SearchResponseDto

// NewSearchResponseDto instantiates a new SearchResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResponseDto() *SearchResponseDto {
	this := SearchResponseDto{}
	return &this
}

// NewSearchResponseDtoWithDefaults instantiates a new SearchResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResponseDtoWithDefaults() *SearchResponseDto {
	this := SearchResponseDto{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SearchResponseDto) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseDto) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SearchResponseDto) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SearchResponseDto) SetType(v string) {
	o.Type = &v
}

// GetTimeCriteria returns the TimeCriteria field value if set, zero value otherwise.
func (o *SearchResponseDto) GetTimeCriteria() TimeCriteriaDto {
	if o == nil || IsNil(o.TimeCriteria) {
		var ret TimeCriteriaDto
		return ret
	}
	return *o.TimeCriteria
}

// GetTimeCriteriaOk returns a tuple with the TimeCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseDto) GetTimeCriteriaOk() (*TimeCriteriaDto, bool) {
	if o == nil || IsNil(o.TimeCriteria) {
		return nil, false
	}
	return o.TimeCriteria, true
}

// HasTimeCriteria returns a boolean if a field has been set.
func (o *SearchResponseDto) HasTimeCriteria() bool {
	if o != nil && !IsNil(o.TimeCriteria) {
		return true
	}

	return false
}

// SetTimeCriteria gets a reference to the given TimeCriteriaDto and assigns it to the TimeCriteria field.
func (o *SearchResponseDto) SetTimeCriteria(v TimeCriteriaDto) {
	o.TimeCriteria = &v
}

// GetStepDuration returns the StepDuration field value if set, zero value otherwise.
func (o *SearchResponseDto) GetStepDuration() string {
	if o == nil || IsNil(o.StepDuration) {
		var ret string
		return ret
	}
	return *o.StepDuration
}

// GetStepDurationOk returns a tuple with the StepDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseDto) GetStepDurationOk() (*string, bool) {
	if o == nil || IsNil(o.StepDuration) {
		return nil, false
	}
	return o.StepDuration, true
}

// HasStepDuration returns a boolean if a field has been set.
func (o *SearchResponseDto) HasStepDuration() bool {
	if o != nil && !IsNil(o.StepDuration) {
		return true
	}

	return false
}

// SetStepDuration gets a reference to the given string and assigns it to the StepDuration field.
func (o *SearchResponseDto) SetStepDuration(v string) {
	o.StepDuration = &v
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchResponseDto) GetData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchResponseDto) GetDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return &o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SearchResponseDto) HasData() bool {
	if o != nil && IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given interface{} and assigns it to the Data field.
func (o *SearchResponseDto) SetData(v interface{}) {
	o.Data = v
}

// GetAdjustedTimeCriteria returns the AdjustedTimeCriteria field value if set, zero value otherwise.
func (o *SearchResponseDto) GetAdjustedTimeCriteria() bool {
	if o == nil || IsNil(o.AdjustedTimeCriteria) {
		var ret bool
		return ret
	}
	return *o.AdjustedTimeCriteria
}

// GetAdjustedTimeCriteriaOk returns a tuple with the AdjustedTimeCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseDto) GetAdjustedTimeCriteriaOk() (*bool, bool) {
	if o == nil || IsNil(o.AdjustedTimeCriteria) {
		return nil, false
	}
	return o.AdjustedTimeCriteria, true
}

// HasAdjustedTimeCriteria returns a boolean if a field has been set.
func (o *SearchResponseDto) HasAdjustedTimeCriteria() bool {
	if o != nil && !IsNil(o.AdjustedTimeCriteria) {
		return true
	}

	return false
}

// SetAdjustedTimeCriteria gets a reference to the given bool and assigns it to the AdjustedTimeCriteria field.
func (o *SearchResponseDto) SetAdjustedTimeCriteria(v bool) {
	o.AdjustedTimeCriteria = &v
}

func (o SearchResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchResponseDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TimeCriteria) {
		toSerialize["timeCriteria"] = o.TimeCriteria
	}
	if !IsNil(o.StepDuration) {
		toSerialize["stepDuration"] = o.StepDuration
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.AdjustedTimeCriteria) {
		toSerialize["adjustedTimeCriteria"] = o.AdjustedTimeCriteria
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SearchResponseDto) UnmarshalJSON(data []byte) (err error) {
	varSearchResponseDto := _SearchResponseDto{}

	err = json.Unmarshal(data, &varSearchResponseDto)

	if err != nil {
		return err
	}

	*o = SearchResponseDto(varSearchResponseDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "timeCriteria")
		delete(additionalProperties, "stepDuration")
		delete(additionalProperties, "data")
		delete(additionalProperties, "adjustedTimeCriteria")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSearchResponseDto struct {
	value *SearchResponseDto
	isSet bool
}

func (v NullableSearchResponseDto) Get() *SearchResponseDto {
	return v.value
}

func (v *NullableSearchResponseDto) Set(val *SearchResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResponseDto(val *SearchResponseDto) *NullableSearchResponseDto {
	return &NullableSearchResponseDto{value: val, isSet: true}
}

func (v NullableSearchResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
