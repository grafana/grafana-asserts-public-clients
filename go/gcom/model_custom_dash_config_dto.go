/*
Asserts, Inc

Asserts Public API

API version: 2025.08.25-143624
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the CustomDashConfigDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomDashConfigDto{}

// CustomDashConfigDto struct for CustomDashConfigDto
type CustomDashConfigDto struct {
	DashboardUri         *string              `json:"dashboardUri,omitempty"`
	Uid                  *string              `json:"uid,omitempty"`
	Query                *string              `json:"query,omitempty"`
	DashParams           map[string]string    `json:"dashParams,omitempty"`
	DataSourceParam      *string              `json:"dataSourceParam,omitempty"`
	AlertCategory        []string             `json:"alertCategory,omitempty"`
	OverrideEntityUri    *bool                `json:"overrideEntityUri,omitempty"`
	PropertyMatchers     []PropertyMatcherDto `json:"propertyMatchers,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomDashConfigDto CustomDashConfigDto

// NewCustomDashConfigDto instantiates a new CustomDashConfigDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomDashConfigDto() *CustomDashConfigDto {
	this := CustomDashConfigDto{}
	return &this
}

// NewCustomDashConfigDtoWithDefaults instantiates a new CustomDashConfigDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomDashConfigDtoWithDefaults() *CustomDashConfigDto {
	this := CustomDashConfigDto{}
	return &this
}

// GetDashboardUri returns the DashboardUri field value if set, zero value otherwise.
func (o *CustomDashConfigDto) GetDashboardUri() string {
	if o == nil || IsNil(o.DashboardUri) {
		var ret string
		return ret
	}
	return *o.DashboardUri
}

// GetDashboardUriOk returns a tuple with the DashboardUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDashConfigDto) GetDashboardUriOk() (*string, bool) {
	if o == nil || IsNil(o.DashboardUri) {
		return nil, false
	}
	return o.DashboardUri, true
}

// HasDashboardUri returns a boolean if a field has been set.
func (o *CustomDashConfigDto) HasDashboardUri() bool {
	if o != nil && !IsNil(o.DashboardUri) {
		return true
	}

	return false
}

// SetDashboardUri gets a reference to the given string and assigns it to the DashboardUri field.
func (o *CustomDashConfigDto) SetDashboardUri(v string) {
	o.DashboardUri = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *CustomDashConfigDto) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDashConfigDto) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *CustomDashConfigDto) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *CustomDashConfigDto) SetUid(v string) {
	o.Uid = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *CustomDashConfigDto) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDashConfigDto) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *CustomDashConfigDto) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *CustomDashConfigDto) SetQuery(v string) {
	o.Query = &v
}

// GetDashParams returns the DashParams field value if set, zero value otherwise.
func (o *CustomDashConfigDto) GetDashParams() map[string]string {
	if o == nil || IsNil(o.DashParams) {
		var ret map[string]string
		return ret
	}
	return o.DashParams
}

// GetDashParamsOk returns a tuple with the DashParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDashConfigDto) GetDashParamsOk() (map[string]string, bool) {
	if o == nil || IsNil(o.DashParams) {
		return map[string]string{}, false
	}
	return o.DashParams, true
}

// HasDashParams returns a boolean if a field has been set.
func (o *CustomDashConfigDto) HasDashParams() bool {
	if o != nil && !IsNil(o.DashParams) {
		return true
	}

	return false
}

// SetDashParams gets a reference to the given map[string]string and assigns it to the DashParams field.
func (o *CustomDashConfigDto) SetDashParams(v map[string]string) {
	o.DashParams = v
}

// GetDataSourceParam returns the DataSourceParam field value if set, zero value otherwise.
func (o *CustomDashConfigDto) GetDataSourceParam() string {
	if o == nil || IsNil(o.DataSourceParam) {
		var ret string
		return ret
	}
	return *o.DataSourceParam
}

// GetDataSourceParamOk returns a tuple with the DataSourceParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDashConfigDto) GetDataSourceParamOk() (*string, bool) {
	if o == nil || IsNil(o.DataSourceParam) {
		return nil, false
	}
	return o.DataSourceParam, true
}

// HasDataSourceParam returns a boolean if a field has been set.
func (o *CustomDashConfigDto) HasDataSourceParam() bool {
	if o != nil && !IsNil(o.DataSourceParam) {
		return true
	}

	return false
}

// SetDataSourceParam gets a reference to the given string and assigns it to the DataSourceParam field.
func (o *CustomDashConfigDto) SetDataSourceParam(v string) {
	o.DataSourceParam = &v
}

// GetAlertCategory returns the AlertCategory field value if set, zero value otherwise.
func (o *CustomDashConfigDto) GetAlertCategory() []string {
	if o == nil || IsNil(o.AlertCategory) {
		var ret []string
		return ret
	}
	return o.AlertCategory
}

// GetAlertCategoryOk returns a tuple with the AlertCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDashConfigDto) GetAlertCategoryOk() ([]string, bool) {
	if o == nil || IsNil(o.AlertCategory) {
		return nil, false
	}
	return o.AlertCategory, true
}

// HasAlertCategory returns a boolean if a field has been set.
func (o *CustomDashConfigDto) HasAlertCategory() bool {
	if o != nil && !IsNil(o.AlertCategory) {
		return true
	}

	return false
}

// SetAlertCategory gets a reference to the given []string and assigns it to the AlertCategory field.
func (o *CustomDashConfigDto) SetAlertCategory(v []string) {
	o.AlertCategory = v
}

// GetOverrideEntityUri returns the OverrideEntityUri field value if set, zero value otherwise.
func (o *CustomDashConfigDto) GetOverrideEntityUri() bool {
	if o == nil || IsNil(o.OverrideEntityUri) {
		var ret bool
		return ret
	}
	return *o.OverrideEntityUri
}

// GetOverrideEntityUriOk returns a tuple with the OverrideEntityUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDashConfigDto) GetOverrideEntityUriOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideEntityUri) {
		return nil, false
	}
	return o.OverrideEntityUri, true
}

// HasOverrideEntityUri returns a boolean if a field has been set.
func (o *CustomDashConfigDto) HasOverrideEntityUri() bool {
	if o != nil && !IsNil(o.OverrideEntityUri) {
		return true
	}

	return false
}

// SetOverrideEntityUri gets a reference to the given bool and assigns it to the OverrideEntityUri field.
func (o *CustomDashConfigDto) SetOverrideEntityUri(v bool) {
	o.OverrideEntityUri = &v
}

// GetPropertyMatchers returns the PropertyMatchers field value if set, zero value otherwise.
func (o *CustomDashConfigDto) GetPropertyMatchers() []PropertyMatcherDto {
	if o == nil || IsNil(o.PropertyMatchers) {
		var ret []PropertyMatcherDto
		return ret
	}
	return o.PropertyMatchers
}

// GetPropertyMatchersOk returns a tuple with the PropertyMatchers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDashConfigDto) GetPropertyMatchersOk() ([]PropertyMatcherDto, bool) {
	if o == nil || IsNil(o.PropertyMatchers) {
		return nil, false
	}
	return o.PropertyMatchers, true
}

// HasPropertyMatchers returns a boolean if a field has been set.
func (o *CustomDashConfigDto) HasPropertyMatchers() bool {
	if o != nil && !IsNil(o.PropertyMatchers) {
		return true
	}

	return false
}

// SetPropertyMatchers gets a reference to the given []PropertyMatcherDto and assigns it to the PropertyMatchers field.
func (o *CustomDashConfigDto) SetPropertyMatchers(v []PropertyMatcherDto) {
	o.PropertyMatchers = v
}

func (o CustomDashConfigDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomDashConfigDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DashboardUri) {
		toSerialize["dashboardUri"] = o.DashboardUri
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.DashParams) {
		toSerialize["dashParams"] = o.DashParams
	}
	if !IsNil(o.DataSourceParam) {
		toSerialize["dataSourceParam"] = o.DataSourceParam
	}
	if !IsNil(o.AlertCategory) {
		toSerialize["alertCategory"] = o.AlertCategory
	}
	if !IsNil(o.OverrideEntityUri) {
		toSerialize["overrideEntityUri"] = o.OverrideEntityUri
	}
	if !IsNil(o.PropertyMatchers) {
		toSerialize["propertyMatchers"] = o.PropertyMatchers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomDashConfigDto) UnmarshalJSON(data []byte) (err error) {
	varCustomDashConfigDto := _CustomDashConfigDto{}

	err = json.Unmarshal(data, &varCustomDashConfigDto)

	if err != nil {
		return err
	}

	*o = CustomDashConfigDto(varCustomDashConfigDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dashboardUri")
		delete(additionalProperties, "uid")
		delete(additionalProperties, "query")
		delete(additionalProperties, "dashParams")
		delete(additionalProperties, "dataSourceParam")
		delete(additionalProperties, "alertCategory")
		delete(additionalProperties, "overrideEntityUri")
		delete(additionalProperties, "propertyMatchers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomDashConfigDto struct {
	value *CustomDashConfigDto
	isSet bool
}

func (v NullableCustomDashConfigDto) Get() *CustomDashConfigDto {
	return v.value
}

func (v *NullableCustomDashConfigDto) Set(val *CustomDashConfigDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomDashConfigDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomDashConfigDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomDashConfigDto(val *CustomDashConfigDto) *NullableCustomDashConfigDto {
	return &NullableCustomDashConfigDto{value: val, isSet: true}
}

func (v NullableCustomDashConfigDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomDashConfigDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
