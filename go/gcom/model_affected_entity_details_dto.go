/*
Asserts, Inc

Asserts Public API

API version: 2025.08.25-143624
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AffectedEntityDetailsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AffectedEntityDetailsDto{}

// AffectedEntityDetailsDto struct for AffectedEntityDetailsDto
type AffectedEntityDetailsDto struct {
	Entities             []AffectedEntityDetailDto `json:"entities,omitempty"`
	TotalCount           *int32                    `json:"totalCount,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AffectedEntityDetailsDto AffectedEntityDetailsDto

// NewAffectedEntityDetailsDto instantiates a new AffectedEntityDetailsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffectedEntityDetailsDto() *AffectedEntityDetailsDto {
	this := AffectedEntityDetailsDto{}
	return &this
}

// NewAffectedEntityDetailsDtoWithDefaults instantiates a new AffectedEntityDetailsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffectedEntityDetailsDtoWithDefaults() *AffectedEntityDetailsDto {
	this := AffectedEntityDetailsDto{}
	return &this
}

// GetEntities returns the Entities field value if set, zero value otherwise.
func (o *AffectedEntityDetailsDto) GetEntities() []AffectedEntityDetailDto {
	if o == nil || IsNil(o.Entities) {
		var ret []AffectedEntityDetailDto
		return ret
	}
	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedEntityDetailsDto) GetEntitiesOk() ([]AffectedEntityDetailDto, bool) {
	if o == nil || IsNil(o.Entities) {
		return nil, false
	}
	return o.Entities, true
}

// HasEntities returns a boolean if a field has been set.
func (o *AffectedEntityDetailsDto) HasEntities() bool {
	if o != nil && !IsNil(o.Entities) {
		return true
	}

	return false
}

// SetEntities gets a reference to the given []AffectedEntityDetailDto and assigns it to the Entities field.
func (o *AffectedEntityDetailsDto) SetEntities(v []AffectedEntityDetailDto) {
	o.Entities = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *AffectedEntityDetailsDto) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffectedEntityDetailsDto) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *AffectedEntityDetailsDto) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *AffectedEntityDetailsDto) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o AffectedEntityDetailsDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AffectedEntityDetailsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entities) {
		toSerialize["entities"] = o.Entities
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AffectedEntityDetailsDto) UnmarshalJSON(data []byte) (err error) {
	varAffectedEntityDetailsDto := _AffectedEntityDetailsDto{}

	err = json.Unmarshal(data, &varAffectedEntityDetailsDto)

	if err != nil {
		return err
	}

	*o = AffectedEntityDetailsDto(varAffectedEntityDetailsDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entities")
		delete(additionalProperties, "totalCount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAffectedEntityDetailsDto struct {
	value *AffectedEntityDetailsDto
	isSet bool
}

func (v NullableAffectedEntityDetailsDto) Get() *AffectedEntityDetailsDto {
	return v.value
}

func (v *NullableAffectedEntityDetailsDto) Set(val *AffectedEntityDetailsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAffectedEntityDetailsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAffectedEntityDetailsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffectedEntityDetailsDto(val *AffectedEntityDetailsDto) *NullableAffectedEntityDetailsDto {
	return &NullableAffectedEntityDetailsDto{value: val, isSet: true}
}

func (v NullableAffectedEntityDetailsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffectedEntityDetailsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
