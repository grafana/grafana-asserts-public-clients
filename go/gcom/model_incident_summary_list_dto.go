/*
Asserts, Inc

Asserts Public API

API version: 2025.09.11-132913
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the IncidentSummaryListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentSummaryListDto{}

// IncidentSummaryListDto struct for IncidentSummaryListDto
type IncidentSummaryListDto struct {
	IncidentSummaries    []IncidentSummaryDto `json:"incidentSummaries,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IncidentSummaryListDto IncidentSummaryListDto

// NewIncidentSummaryListDto instantiates a new IncidentSummaryListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentSummaryListDto() *IncidentSummaryListDto {
	this := IncidentSummaryListDto{}
	return &this
}

// NewIncidentSummaryListDtoWithDefaults instantiates a new IncidentSummaryListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentSummaryListDtoWithDefaults() *IncidentSummaryListDto {
	this := IncidentSummaryListDto{}
	return &this
}

// GetIncidentSummaries returns the IncidentSummaries field value if set, zero value otherwise.
func (o *IncidentSummaryListDto) GetIncidentSummaries() []IncidentSummaryDto {
	if o == nil || IsNil(o.IncidentSummaries) {
		var ret []IncidentSummaryDto
		return ret
	}
	return o.IncidentSummaries
}

// GetIncidentSummariesOk returns a tuple with the IncidentSummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentSummaryListDto) GetIncidentSummariesOk() ([]IncidentSummaryDto, bool) {
	if o == nil || IsNil(o.IncidentSummaries) {
		return nil, false
	}
	return o.IncidentSummaries, true
}

// HasIncidentSummaries returns a boolean if a field has been set.
func (o *IncidentSummaryListDto) HasIncidentSummaries() bool {
	if o != nil && !IsNil(o.IncidentSummaries) {
		return true
	}

	return false
}

// SetIncidentSummaries gets a reference to the given []IncidentSummaryDto and assigns it to the IncidentSummaries field.
func (o *IncidentSummaryListDto) SetIncidentSummaries(v []IncidentSummaryDto) {
	o.IncidentSummaries = v
}

func (o IncidentSummaryListDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentSummaryListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncidentSummaries) {
		toSerialize["incidentSummaries"] = o.IncidentSummaries
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IncidentSummaryListDto) UnmarshalJSON(data []byte) (err error) {
	varIncidentSummaryListDto := _IncidentSummaryListDto{}

	err = json.Unmarshal(data, &varIncidentSummaryListDto)

	if err != nil {
		return err
	}

	*o = IncidentSummaryListDto(varIncidentSummaryListDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "incidentSummaries")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIncidentSummaryListDto struct {
	value *IncidentSummaryListDto
	isSet bool
}

func (v NullableIncidentSummaryListDto) Get() *IncidentSummaryListDto {
	return v.value
}

func (v *NullableIncidentSummaryListDto) Set(val *IncidentSummaryListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentSummaryListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentSummaryListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentSummaryListDto(val *IncidentSummaryListDto) *NullableIncidentSummaryListDto {
	return &NullableIncidentSummaryListDto{value: val, isSet: true}
}

func (v NullableIncidentSummaryListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentSummaryListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
