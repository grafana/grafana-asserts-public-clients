/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-112305
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the EdgeDisplayConfigDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdgeDisplayConfigDto{}

// EdgeDisplayConfigDto struct for EdgeDisplayConfigDto
type EdgeDisplayConfigDto struct {
	Color                *string `json:"color,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EdgeDisplayConfigDto EdgeDisplayConfigDto

// NewEdgeDisplayConfigDto instantiates a new EdgeDisplayConfigDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdgeDisplayConfigDto() *EdgeDisplayConfigDto {
	this := EdgeDisplayConfigDto{}
	return &this
}

// NewEdgeDisplayConfigDtoWithDefaults instantiates a new EdgeDisplayConfigDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdgeDisplayConfigDtoWithDefaults() *EdgeDisplayConfigDto {
	this := EdgeDisplayConfigDto{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *EdgeDisplayConfigDto) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeDisplayConfigDto) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *EdgeDisplayConfigDto) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *EdgeDisplayConfigDto) SetColor(v string) {
	o.Color = &v
}

func (o EdgeDisplayConfigDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdgeDisplayConfigDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EdgeDisplayConfigDto) UnmarshalJSON(data []byte) (err error) {
	varEdgeDisplayConfigDto := _EdgeDisplayConfigDto{}

	err = json.Unmarshal(data, &varEdgeDisplayConfigDto)

	if err != nil {
		return err
	}

	*o = EdgeDisplayConfigDto(varEdgeDisplayConfigDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "color")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEdgeDisplayConfigDto struct {
	value *EdgeDisplayConfigDto
	isSet bool
}

func (v NullableEdgeDisplayConfigDto) Get() *EdgeDisplayConfigDto {
	return v.value
}

func (v *NullableEdgeDisplayConfigDto) Set(val *EdgeDisplayConfigDto) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeDisplayConfigDto) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeDisplayConfigDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeDisplayConfigDto(val *EdgeDisplayConfigDto) *NullableEdgeDisplayConfigDto {
	return &NullableEdgeDisplayConfigDto{value: val, isSet: true}
}

func (v NullableEdgeDisplayConfigDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeDisplayConfigDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
