/*
Asserts, Inc

Asserts Public API

API version: 1.0.4
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the EntityScopesResponseDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntityScopesResponseDto{}

// EntityScopesResponseDto struct for EntityScopesResponseDto
type EntityScopesResponseDto struct {
	ScopeValues          map[string][]string `json:"scopeValues,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EntityScopesResponseDto EntityScopesResponseDto

// NewEntityScopesResponseDto instantiates a new EntityScopesResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityScopesResponseDto() *EntityScopesResponseDto {
	this := EntityScopesResponseDto{}
	return &this
}

// NewEntityScopesResponseDtoWithDefaults instantiates a new EntityScopesResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityScopesResponseDtoWithDefaults() *EntityScopesResponseDto {
	this := EntityScopesResponseDto{}
	return &this
}

// GetScopeValues returns the ScopeValues field value if set, zero value otherwise.
func (o *EntityScopesResponseDto) GetScopeValues() map[string][]string {
	if o == nil || IsNil(o.ScopeValues) {
		var ret map[string][]string
		return ret
	}
	return o.ScopeValues
}

// GetScopeValuesOk returns a tuple with the ScopeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityScopesResponseDto) GetScopeValuesOk() (map[string][]string, bool) {
	if o == nil || IsNil(o.ScopeValues) {
		return map[string][]string{}, false
	}
	return o.ScopeValues, true
}

// HasScopeValues returns a boolean if a field has been set.
func (o *EntityScopesResponseDto) HasScopeValues() bool {
	if o != nil && !IsNil(o.ScopeValues) {
		return true
	}

	return false
}

// SetScopeValues gets a reference to the given map[string][]string and assigns it to the ScopeValues field.
func (o *EntityScopesResponseDto) SetScopeValues(v map[string][]string) {
	o.ScopeValues = v
}

func (o EntityScopesResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntityScopesResponseDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScopeValues) {
		toSerialize["scopeValues"] = o.ScopeValues
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EntityScopesResponseDto) UnmarshalJSON(data []byte) (err error) {
	varEntityScopesResponseDto := _EntityScopesResponseDto{}

	err = json.Unmarshal(data, &varEntityScopesResponseDto)

	if err != nil {
		return err
	}

	*o = EntityScopesResponseDto(varEntityScopesResponseDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "scopeValues")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEntityScopesResponseDto struct {
	value *EntityScopesResponseDto
	isSet bool
}

func (v NullableEntityScopesResponseDto) Get() *EntityScopesResponseDto {
	return v.value
}

func (v *NullableEntityScopesResponseDto) Set(val *EntityScopesResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityScopesResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityScopesResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityScopesResponseDto(val *EntityScopesResponseDto) *NullableEntityScopesResponseDto {
	return &NullableEntityScopesResponseDto{value: val, isSet: true}
}

func (v NullableEntityScopesResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityScopesResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
