/*
Asserts, Inc

Asserts Public API

API version: 2025.08.25-143403
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the TenantLogConfigResponseDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantLogConfigResponseDto{}

// TenantLogConfigResponseDto struct for TenantLogConfigResponseDto
type TenantLogConfigResponseDto struct {
	LogDrilldownConfigs  []LogDrilldownConfigDto `json:"logDrilldownConfigs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TenantLogConfigResponseDto TenantLogConfigResponseDto

// NewTenantLogConfigResponseDto instantiates a new TenantLogConfigResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantLogConfigResponseDto() *TenantLogConfigResponseDto {
	this := TenantLogConfigResponseDto{}
	return &this
}

// NewTenantLogConfigResponseDtoWithDefaults instantiates a new TenantLogConfigResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantLogConfigResponseDtoWithDefaults() *TenantLogConfigResponseDto {
	this := TenantLogConfigResponseDto{}
	return &this
}

// GetLogDrilldownConfigs returns the LogDrilldownConfigs field value if set, zero value otherwise.
func (o *TenantLogConfigResponseDto) GetLogDrilldownConfigs() []LogDrilldownConfigDto {
	if o == nil || IsNil(o.LogDrilldownConfigs) {
		var ret []LogDrilldownConfigDto
		return ret
	}
	return o.LogDrilldownConfigs
}

// GetLogDrilldownConfigsOk returns a tuple with the LogDrilldownConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantLogConfigResponseDto) GetLogDrilldownConfigsOk() ([]LogDrilldownConfigDto, bool) {
	if o == nil || IsNil(o.LogDrilldownConfigs) {
		return nil, false
	}
	return o.LogDrilldownConfigs, true
}

// HasLogDrilldownConfigs returns a boolean if a field has been set.
func (o *TenantLogConfigResponseDto) HasLogDrilldownConfigs() bool {
	if o != nil && !IsNil(o.LogDrilldownConfigs) {
		return true
	}

	return false
}

// SetLogDrilldownConfigs gets a reference to the given []LogDrilldownConfigDto and assigns it to the LogDrilldownConfigs field.
func (o *TenantLogConfigResponseDto) SetLogDrilldownConfigs(v []LogDrilldownConfigDto) {
	o.LogDrilldownConfigs = v
}

func (o TenantLogConfigResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantLogConfigResponseDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LogDrilldownConfigs) {
		toSerialize["logDrilldownConfigs"] = o.LogDrilldownConfigs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TenantLogConfigResponseDto) UnmarshalJSON(data []byte) (err error) {
	varTenantLogConfigResponseDto := _TenantLogConfigResponseDto{}

	err = json.Unmarshal(data, &varTenantLogConfigResponseDto)

	if err != nil {
		return err
	}

	*o = TenantLogConfigResponseDto(varTenantLogConfigResponseDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "logDrilldownConfigs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTenantLogConfigResponseDto struct {
	value *TenantLogConfigResponseDto
	isSet bool
}

func (v NullableTenantLogConfigResponseDto) Get() *TenantLogConfigResponseDto {
	return v.value
}

func (v *NullableTenantLogConfigResponseDto) Set(val *TenantLogConfigResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantLogConfigResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantLogConfigResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantLogConfigResponseDto(val *TenantLogConfigResponseDto) *NullableTenantLogConfigResponseDto {
	return &NullableTenantLogConfigResponseDto{value: val, isSet: true}
}

func (v NullableTenantLogConfigResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantLogConfigResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
