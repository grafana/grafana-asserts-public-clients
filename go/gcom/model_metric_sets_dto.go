/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-055054
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the MetricSetsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricSetsDto{}

// MetricSetsDto struct for MetricSetsDto
type MetricSetsDto struct {
	Total                *int32   `json:"total,omitempty"`
	MetricNames          []string `json:"metricNames,omitempty"`
	RegexPatterns        []string `json:"regexPatterns,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetricSetsDto MetricSetsDto

// NewMetricSetsDto instantiates a new MetricSetsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricSetsDto() *MetricSetsDto {
	this := MetricSetsDto{}
	return &this
}

// NewMetricSetsDtoWithDefaults instantiates a new MetricSetsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricSetsDtoWithDefaults() *MetricSetsDto {
	this := MetricSetsDto{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *MetricSetsDto) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricSetsDto) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *MetricSetsDto) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *MetricSetsDto) SetTotal(v int32) {
	o.Total = &v
}

// GetMetricNames returns the MetricNames field value if set, zero value otherwise.
func (o *MetricSetsDto) GetMetricNames() []string {
	if o == nil || IsNil(o.MetricNames) {
		var ret []string
		return ret
	}
	return o.MetricNames
}

// GetMetricNamesOk returns a tuple with the MetricNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricSetsDto) GetMetricNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.MetricNames) {
		return nil, false
	}
	return o.MetricNames, true
}

// HasMetricNames returns a boolean if a field has been set.
func (o *MetricSetsDto) HasMetricNames() bool {
	if o != nil && !IsNil(o.MetricNames) {
		return true
	}

	return false
}

// SetMetricNames gets a reference to the given []string and assigns it to the MetricNames field.
func (o *MetricSetsDto) SetMetricNames(v []string) {
	o.MetricNames = v
}

// GetRegexPatterns returns the RegexPatterns field value if set, zero value otherwise.
func (o *MetricSetsDto) GetRegexPatterns() []string {
	if o == nil || IsNil(o.RegexPatterns) {
		var ret []string
		return ret
	}
	return o.RegexPatterns
}

// GetRegexPatternsOk returns a tuple with the RegexPatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricSetsDto) GetRegexPatternsOk() ([]string, bool) {
	if o == nil || IsNil(o.RegexPatterns) {
		return nil, false
	}
	return o.RegexPatterns, true
}

// HasRegexPatterns returns a boolean if a field has been set.
func (o *MetricSetsDto) HasRegexPatterns() bool {
	if o != nil && !IsNil(o.RegexPatterns) {
		return true
	}

	return false
}

// SetRegexPatterns gets a reference to the given []string and assigns it to the RegexPatterns field.
func (o *MetricSetsDto) SetRegexPatterns(v []string) {
	o.RegexPatterns = v
}

func (o MetricSetsDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricSetsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.MetricNames) {
		toSerialize["metricNames"] = o.MetricNames
	}
	if !IsNil(o.RegexPatterns) {
		toSerialize["regexPatterns"] = o.RegexPatterns
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetricSetsDto) UnmarshalJSON(data []byte) (err error) {
	varMetricSetsDto := _MetricSetsDto{}

	err = json.Unmarshal(data, &varMetricSetsDto)

	if err != nil {
		return err
	}

	*o = MetricSetsDto(varMetricSetsDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "total")
		delete(additionalProperties, "metricNames")
		delete(additionalProperties, "regexPatterns")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetricSetsDto struct {
	value *MetricSetsDto
	isSet bool
}

func (v NullableMetricSetsDto) Get() *MetricSetsDto {
	return v.value
}

func (v *NullableMetricSetsDto) Set(val *MetricSetsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricSetsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricSetsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricSetsDto(val *MetricSetsDto) *NullableMetricSetsDto {
	return &NullableMetricSetsDto{value: val, isSet: true}
}

func (v NullableMetricSetsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricSetsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
