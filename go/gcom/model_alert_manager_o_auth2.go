/*
Asserts, Inc

Asserts Public API

API version: 2025.09.11-132913
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AlertManagerOAuth2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertManagerOAuth2{}

// AlertManagerOAuth2 struct for AlertManagerOAuth2
type AlertManagerOAuth2 struct {
	Scopes               []string          `json:"scopes,omitempty"`
	ClientId             *string           `json:"client_id,omitempty"`
	ClientSecret         *string           `json:"client_secret,omitempty"`
	ClientSecretFile     *string           `json:"client_secret_file,omitempty"`
	TokenUrl             *string           `json:"token_url,omitempty"`
	EndpointParams       map[string]string `json:"endpoint_params,omitempty"`
	TlsConfig            *AlertManagerTls  `json:"tls_config,omitempty"`
	ProxyUrl             *string           `json:"proxy_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AlertManagerOAuth2 AlertManagerOAuth2

// NewAlertManagerOAuth2 instantiates a new AlertManagerOAuth2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertManagerOAuth2() *AlertManagerOAuth2 {
	this := AlertManagerOAuth2{}
	return &this
}

// NewAlertManagerOAuth2WithDefaults instantiates a new AlertManagerOAuth2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertManagerOAuth2WithDefaults() *AlertManagerOAuth2 {
	this := AlertManagerOAuth2{}
	return &this
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *AlertManagerOAuth2) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerOAuth2) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *AlertManagerOAuth2) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *AlertManagerOAuth2) SetScopes(v []string) {
	o.Scopes = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *AlertManagerOAuth2) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerOAuth2) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *AlertManagerOAuth2) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *AlertManagerOAuth2) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *AlertManagerOAuth2) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerOAuth2) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *AlertManagerOAuth2) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *AlertManagerOAuth2) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetClientSecretFile returns the ClientSecretFile field value if set, zero value otherwise.
func (o *AlertManagerOAuth2) GetClientSecretFile() string {
	if o == nil || IsNil(o.ClientSecretFile) {
		var ret string
		return ret
	}
	return *o.ClientSecretFile
}

// GetClientSecretFileOk returns a tuple with the ClientSecretFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerOAuth2) GetClientSecretFileOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecretFile) {
		return nil, false
	}
	return o.ClientSecretFile, true
}

// HasClientSecretFile returns a boolean if a field has been set.
func (o *AlertManagerOAuth2) HasClientSecretFile() bool {
	if o != nil && !IsNil(o.ClientSecretFile) {
		return true
	}

	return false
}

// SetClientSecretFile gets a reference to the given string and assigns it to the ClientSecretFile field.
func (o *AlertManagerOAuth2) SetClientSecretFile(v string) {
	o.ClientSecretFile = &v
}

// GetTokenUrl returns the TokenUrl field value if set, zero value otherwise.
func (o *AlertManagerOAuth2) GetTokenUrl() string {
	if o == nil || IsNil(o.TokenUrl) {
		var ret string
		return ret
	}
	return *o.TokenUrl
}

// GetTokenUrlOk returns a tuple with the TokenUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerOAuth2) GetTokenUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TokenUrl) {
		return nil, false
	}
	return o.TokenUrl, true
}

// HasTokenUrl returns a boolean if a field has been set.
func (o *AlertManagerOAuth2) HasTokenUrl() bool {
	if o != nil && !IsNil(o.TokenUrl) {
		return true
	}

	return false
}

// SetTokenUrl gets a reference to the given string and assigns it to the TokenUrl field.
func (o *AlertManagerOAuth2) SetTokenUrl(v string) {
	o.TokenUrl = &v
}

// GetEndpointParams returns the EndpointParams field value if set, zero value otherwise.
func (o *AlertManagerOAuth2) GetEndpointParams() map[string]string {
	if o == nil || IsNil(o.EndpointParams) {
		var ret map[string]string
		return ret
	}
	return o.EndpointParams
}

// GetEndpointParamsOk returns a tuple with the EndpointParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerOAuth2) GetEndpointParamsOk() (map[string]string, bool) {
	if o == nil || IsNil(o.EndpointParams) {
		return map[string]string{}, false
	}
	return o.EndpointParams, true
}

// HasEndpointParams returns a boolean if a field has been set.
func (o *AlertManagerOAuth2) HasEndpointParams() bool {
	if o != nil && !IsNil(o.EndpointParams) {
		return true
	}

	return false
}

// SetEndpointParams gets a reference to the given map[string]string and assigns it to the EndpointParams field.
func (o *AlertManagerOAuth2) SetEndpointParams(v map[string]string) {
	o.EndpointParams = v
}

// GetTlsConfig returns the TlsConfig field value if set, zero value otherwise.
func (o *AlertManagerOAuth2) GetTlsConfig() AlertManagerTls {
	if o == nil || IsNil(o.TlsConfig) {
		var ret AlertManagerTls
		return ret
	}
	return *o.TlsConfig
}

// GetTlsConfigOk returns a tuple with the TlsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerOAuth2) GetTlsConfigOk() (*AlertManagerTls, bool) {
	if o == nil || IsNil(o.TlsConfig) {
		return nil, false
	}
	return o.TlsConfig, true
}

// HasTlsConfig returns a boolean if a field has been set.
func (o *AlertManagerOAuth2) HasTlsConfig() bool {
	if o != nil && !IsNil(o.TlsConfig) {
		return true
	}

	return false
}

// SetTlsConfig gets a reference to the given AlertManagerTls and assigns it to the TlsConfig field.
func (o *AlertManagerOAuth2) SetTlsConfig(v AlertManagerTls) {
	o.TlsConfig = &v
}

// GetProxyUrl returns the ProxyUrl field value if set, zero value otherwise.
func (o *AlertManagerOAuth2) GetProxyUrl() string {
	if o == nil || IsNil(o.ProxyUrl) {
		var ret string
		return ret
	}
	return *o.ProxyUrl
}

// GetProxyUrlOk returns a tuple with the ProxyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerOAuth2) GetProxyUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyUrl) {
		return nil, false
	}
	return o.ProxyUrl, true
}

// HasProxyUrl returns a boolean if a field has been set.
func (o *AlertManagerOAuth2) HasProxyUrl() bool {
	if o != nil && !IsNil(o.ProxyUrl) {
		return true
	}

	return false
}

// SetProxyUrl gets a reference to the given string and assigns it to the ProxyUrl field.
func (o *AlertManagerOAuth2) SetProxyUrl(v string) {
	o.ProxyUrl = &v
}

func (o AlertManagerOAuth2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertManagerOAuth2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if !IsNil(o.ClientSecretFile) {
		toSerialize["client_secret_file"] = o.ClientSecretFile
	}
	if !IsNil(o.TokenUrl) {
		toSerialize["token_url"] = o.TokenUrl
	}
	if !IsNil(o.EndpointParams) {
		toSerialize["endpoint_params"] = o.EndpointParams
	}
	if !IsNil(o.TlsConfig) {
		toSerialize["tls_config"] = o.TlsConfig
	}
	if !IsNil(o.ProxyUrl) {
		toSerialize["proxy_url"] = o.ProxyUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AlertManagerOAuth2) UnmarshalJSON(data []byte) (err error) {
	varAlertManagerOAuth2 := _AlertManagerOAuth2{}

	err = json.Unmarshal(data, &varAlertManagerOAuth2)

	if err != nil {
		return err
	}

	*o = AlertManagerOAuth2(varAlertManagerOAuth2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "scopes")
		delete(additionalProperties, "client_id")
		delete(additionalProperties, "client_secret")
		delete(additionalProperties, "client_secret_file")
		delete(additionalProperties, "token_url")
		delete(additionalProperties, "endpoint_params")
		delete(additionalProperties, "tls_config")
		delete(additionalProperties, "proxy_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAlertManagerOAuth2 struct {
	value *AlertManagerOAuth2
	isSet bool
}

func (v NullableAlertManagerOAuth2) Get() *AlertManagerOAuth2 {
	return v.value
}

func (v *NullableAlertManagerOAuth2) Set(val *AlertManagerOAuth2) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertManagerOAuth2) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertManagerOAuth2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertManagerOAuth2(val *AlertManagerOAuth2) *NullableAlertManagerOAuth2 {
	return &NullableAlertManagerOAuth2{value: val, isSet: true}
}

func (v NullableAlertManagerOAuth2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertManagerOAuth2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
