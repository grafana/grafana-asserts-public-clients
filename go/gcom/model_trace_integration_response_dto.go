/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-110859
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the TraceIntegrationResponseDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TraceIntegrationResponseDto{}

// TraceIntegrationResponseDto struct for TraceIntegrationResponseDto
type TraceIntegrationResponseDto struct {
	Url                  *string `json:"url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TraceIntegrationResponseDto TraceIntegrationResponseDto

// NewTraceIntegrationResponseDto instantiates a new TraceIntegrationResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTraceIntegrationResponseDto() *TraceIntegrationResponseDto {
	this := TraceIntegrationResponseDto{}
	return &this
}

// NewTraceIntegrationResponseDtoWithDefaults instantiates a new TraceIntegrationResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTraceIntegrationResponseDtoWithDefaults() *TraceIntegrationResponseDto {
	this := TraceIntegrationResponseDto{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TraceIntegrationResponseDto) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceIntegrationResponseDto) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TraceIntegrationResponseDto) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TraceIntegrationResponseDto) SetUrl(v string) {
	o.Url = &v
}

func (o TraceIntegrationResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TraceIntegrationResponseDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TraceIntegrationResponseDto) UnmarshalJSON(data []byte) (err error) {
	varTraceIntegrationResponseDto := _TraceIntegrationResponseDto{}

	err = json.Unmarshal(data, &varTraceIntegrationResponseDto)

	if err != nil {
		return err
	}

	*o = TraceIntegrationResponseDto(varTraceIntegrationResponseDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTraceIntegrationResponseDto struct {
	value *TraceIntegrationResponseDto
	isSet bool
}

func (v NullableTraceIntegrationResponseDto) Get() *TraceIntegrationResponseDto {
	return v.value
}

func (v *NullableTraceIntegrationResponseDto) Set(val *TraceIntegrationResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTraceIntegrationResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTraceIntegrationResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTraceIntegrationResponseDto(val *TraceIntegrationResponseDto) *NullableTraceIntegrationResponseDto {
	return &NullableTraceIntegrationResponseDto{value: val, isSet: true}
}

func (v NullableTraceIntegrationResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTraceIntegrationResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
