/*
Asserts, Inc

Asserts Public API

API version: 2025.08.07-125604
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the ApiValidationError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiValidationError{}

// ApiValidationError struct for ApiValidationError
type ApiValidationError struct {
	Message              *string     `json:"message,omitempty"`
	Field                *string     `json:"field,omitempty"`
	RejectedValue        interface{} `json:"rejectedValue,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiValidationError ApiValidationError

// NewApiValidationError instantiates a new ApiValidationError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiValidationError() *ApiValidationError {
	this := ApiValidationError{}
	return &this
}

// NewApiValidationErrorWithDefaults instantiates a new ApiValidationError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiValidationErrorWithDefaults() *ApiValidationError {
	this := ApiValidationError{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ApiValidationError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiValidationError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ApiValidationError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ApiValidationError) SetMessage(v string) {
	o.Message = &v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *ApiValidationError) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiValidationError) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *ApiValidationError) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *ApiValidationError) SetField(v string) {
	o.Field = &v
}

// GetRejectedValue returns the RejectedValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiValidationError) GetRejectedValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RejectedValue
}

// GetRejectedValueOk returns a tuple with the RejectedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiValidationError) GetRejectedValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RejectedValue) {
		return nil, false
	}
	return &o.RejectedValue, true
}

// HasRejectedValue returns a boolean if a field has been set.
func (o *ApiValidationError) HasRejectedValue() bool {
	if o != nil && IsNil(o.RejectedValue) {
		return true
	}

	return false
}

// SetRejectedValue gets a reference to the given interface{} and assigns it to the RejectedValue field.
func (o *ApiValidationError) SetRejectedValue(v interface{}) {
	o.RejectedValue = v
}

func (o ApiValidationError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiValidationError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if o.RejectedValue != nil {
		toSerialize["rejectedValue"] = o.RejectedValue
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiValidationError) UnmarshalJSON(data []byte) (err error) {
	varApiValidationError := _ApiValidationError{}

	err = json.Unmarshal(data, &varApiValidationError)

	if err != nil {
		return err
	}

	*o = ApiValidationError(varApiValidationError)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		delete(additionalProperties, "field")
		delete(additionalProperties, "rejectedValue")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiValidationError struct {
	value *ApiValidationError
	isSet bool
}

func (v NullableApiValidationError) Get() *ApiValidationError {
	return v.value
}

func (v *NullableApiValidationError) Set(val *ApiValidationError) {
	v.value = val
	v.isSet = true
}

func (v NullableApiValidationError) IsSet() bool {
	return v.isSet
}

func (v *NullableApiValidationError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiValidationError(val *ApiValidationError) *NullableApiValidationError {
	return &NullableApiValidationError{value: val, isSet: true}
}

func (v NullableApiValidationError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiValidationError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
