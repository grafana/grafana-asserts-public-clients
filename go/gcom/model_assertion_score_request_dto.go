/*
Asserts, Inc

Asserts Public API

API version: 2025.09.11-132913
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AssertionScoreRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssertionScoreRequestDto{}

// AssertionScoreRequestDto struct for AssertionScoreRequestDto
type AssertionScoreRequestDto struct {
	StartMs                                       *int64            `json:"startMs,omitempty"`
	EndMs                                         *int64            `json:"endMs,omitempty"`
	HideAssertionsOlderThanNHours                 *int32            `json:"hideAssertionsOlderThanNHours,omitempty"`
	AlertCategories                               []string          `json:"alertCategories,omitempty"`
	ScopeCriteria                                 *ScopeCriteriaDto `json:"scopeCriteria,omitempty"`
	HideAssertionsPresentMoreThanPercentageOfTime *int32            `json:"hideAssertionsPresentMoreThanPercentageOfTime,omitempty"`
	AdditionalProperties                          map[string]interface{}
}

type _AssertionScoreRequestDto AssertionScoreRequestDto

// NewAssertionScoreRequestDto instantiates a new AssertionScoreRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssertionScoreRequestDto() *AssertionScoreRequestDto {
	this := AssertionScoreRequestDto{}
	return &this
}

// NewAssertionScoreRequestDtoWithDefaults instantiates a new AssertionScoreRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssertionScoreRequestDtoWithDefaults() *AssertionScoreRequestDto {
	this := AssertionScoreRequestDto{}
	return &this
}

// GetStartMs returns the StartMs field value if set, zero value otherwise.
func (o *AssertionScoreRequestDto) GetStartMs() int64 {
	if o == nil || IsNil(o.StartMs) {
		var ret int64
		return ret
	}
	return *o.StartMs
}

// GetStartMsOk returns a tuple with the StartMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionScoreRequestDto) GetStartMsOk() (*int64, bool) {
	if o == nil || IsNil(o.StartMs) {
		return nil, false
	}
	return o.StartMs, true
}

// HasStartMs returns a boolean if a field has been set.
func (o *AssertionScoreRequestDto) HasStartMs() bool {
	if o != nil && !IsNil(o.StartMs) {
		return true
	}

	return false
}

// SetStartMs gets a reference to the given int64 and assigns it to the StartMs field.
func (o *AssertionScoreRequestDto) SetStartMs(v int64) {
	o.StartMs = &v
}

// GetEndMs returns the EndMs field value if set, zero value otherwise.
func (o *AssertionScoreRequestDto) GetEndMs() int64 {
	if o == nil || IsNil(o.EndMs) {
		var ret int64
		return ret
	}
	return *o.EndMs
}

// GetEndMsOk returns a tuple with the EndMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionScoreRequestDto) GetEndMsOk() (*int64, bool) {
	if o == nil || IsNil(o.EndMs) {
		return nil, false
	}
	return o.EndMs, true
}

// HasEndMs returns a boolean if a field has been set.
func (o *AssertionScoreRequestDto) HasEndMs() bool {
	if o != nil && !IsNil(o.EndMs) {
		return true
	}

	return false
}

// SetEndMs gets a reference to the given int64 and assigns it to the EndMs field.
func (o *AssertionScoreRequestDto) SetEndMs(v int64) {
	o.EndMs = &v
}

// GetHideAssertionsOlderThanNHours returns the HideAssertionsOlderThanNHours field value if set, zero value otherwise.
func (o *AssertionScoreRequestDto) GetHideAssertionsOlderThanNHours() int32 {
	if o == nil || IsNil(o.HideAssertionsOlderThanNHours) {
		var ret int32
		return ret
	}
	return *o.HideAssertionsOlderThanNHours
}

// GetHideAssertionsOlderThanNHoursOk returns a tuple with the HideAssertionsOlderThanNHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionScoreRequestDto) GetHideAssertionsOlderThanNHoursOk() (*int32, bool) {
	if o == nil || IsNil(o.HideAssertionsOlderThanNHours) {
		return nil, false
	}
	return o.HideAssertionsOlderThanNHours, true
}

// HasHideAssertionsOlderThanNHours returns a boolean if a field has been set.
func (o *AssertionScoreRequestDto) HasHideAssertionsOlderThanNHours() bool {
	if o != nil && !IsNil(o.HideAssertionsOlderThanNHours) {
		return true
	}

	return false
}

// SetHideAssertionsOlderThanNHours gets a reference to the given int32 and assigns it to the HideAssertionsOlderThanNHours field.
func (o *AssertionScoreRequestDto) SetHideAssertionsOlderThanNHours(v int32) {
	o.HideAssertionsOlderThanNHours = &v
}

// GetAlertCategories returns the AlertCategories field value if set, zero value otherwise.
func (o *AssertionScoreRequestDto) GetAlertCategories() []string {
	if o == nil || IsNil(o.AlertCategories) {
		var ret []string
		return ret
	}
	return o.AlertCategories
}

// GetAlertCategoriesOk returns a tuple with the AlertCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionScoreRequestDto) GetAlertCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.AlertCategories) {
		return nil, false
	}
	return o.AlertCategories, true
}

// HasAlertCategories returns a boolean if a field has been set.
func (o *AssertionScoreRequestDto) HasAlertCategories() bool {
	if o != nil && !IsNil(o.AlertCategories) {
		return true
	}

	return false
}

// SetAlertCategories gets a reference to the given []string and assigns it to the AlertCategories field.
func (o *AssertionScoreRequestDto) SetAlertCategories(v []string) {
	o.AlertCategories = v
}

// GetScopeCriteria returns the ScopeCriteria field value if set, zero value otherwise.
func (o *AssertionScoreRequestDto) GetScopeCriteria() ScopeCriteriaDto {
	if o == nil || IsNil(o.ScopeCriteria) {
		var ret ScopeCriteriaDto
		return ret
	}
	return *o.ScopeCriteria
}

// GetScopeCriteriaOk returns a tuple with the ScopeCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionScoreRequestDto) GetScopeCriteriaOk() (*ScopeCriteriaDto, bool) {
	if o == nil || IsNil(o.ScopeCriteria) {
		return nil, false
	}
	return o.ScopeCriteria, true
}

// HasScopeCriteria returns a boolean if a field has been set.
func (o *AssertionScoreRequestDto) HasScopeCriteria() bool {
	if o != nil && !IsNil(o.ScopeCriteria) {
		return true
	}

	return false
}

// SetScopeCriteria gets a reference to the given ScopeCriteriaDto and assigns it to the ScopeCriteria field.
func (o *AssertionScoreRequestDto) SetScopeCriteria(v ScopeCriteriaDto) {
	o.ScopeCriteria = &v
}

// GetHideAssertionsPresentMoreThanPercentageOfTime returns the HideAssertionsPresentMoreThanPercentageOfTime field value if set, zero value otherwise.
func (o *AssertionScoreRequestDto) GetHideAssertionsPresentMoreThanPercentageOfTime() int32 {
	if o == nil || IsNil(o.HideAssertionsPresentMoreThanPercentageOfTime) {
		var ret int32
		return ret
	}
	return *o.HideAssertionsPresentMoreThanPercentageOfTime
}

// GetHideAssertionsPresentMoreThanPercentageOfTimeOk returns a tuple with the HideAssertionsPresentMoreThanPercentageOfTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssertionScoreRequestDto) GetHideAssertionsPresentMoreThanPercentageOfTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.HideAssertionsPresentMoreThanPercentageOfTime) {
		return nil, false
	}
	return o.HideAssertionsPresentMoreThanPercentageOfTime, true
}

// HasHideAssertionsPresentMoreThanPercentageOfTime returns a boolean if a field has been set.
func (o *AssertionScoreRequestDto) HasHideAssertionsPresentMoreThanPercentageOfTime() bool {
	if o != nil && !IsNil(o.HideAssertionsPresentMoreThanPercentageOfTime) {
		return true
	}

	return false
}

// SetHideAssertionsPresentMoreThanPercentageOfTime gets a reference to the given int32 and assigns it to the HideAssertionsPresentMoreThanPercentageOfTime field.
func (o *AssertionScoreRequestDto) SetHideAssertionsPresentMoreThanPercentageOfTime(v int32) {
	o.HideAssertionsPresentMoreThanPercentageOfTime = &v
}

func (o AssertionScoreRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssertionScoreRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartMs) {
		toSerialize["startMs"] = o.StartMs
	}
	if !IsNil(o.EndMs) {
		toSerialize["endMs"] = o.EndMs
	}
	if !IsNil(o.HideAssertionsOlderThanNHours) {
		toSerialize["hideAssertionsOlderThanNHours"] = o.HideAssertionsOlderThanNHours
	}
	if !IsNil(o.AlertCategories) {
		toSerialize["alertCategories"] = o.AlertCategories
	}
	if !IsNil(o.ScopeCriteria) {
		toSerialize["scopeCriteria"] = o.ScopeCriteria
	}
	if !IsNil(o.HideAssertionsPresentMoreThanPercentageOfTime) {
		toSerialize["hideAssertionsPresentMoreThanPercentageOfTime"] = o.HideAssertionsPresentMoreThanPercentageOfTime
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AssertionScoreRequestDto) UnmarshalJSON(data []byte) (err error) {
	varAssertionScoreRequestDto := _AssertionScoreRequestDto{}

	err = json.Unmarshal(data, &varAssertionScoreRequestDto)

	if err != nil {
		return err
	}

	*o = AssertionScoreRequestDto(varAssertionScoreRequestDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "startMs")
		delete(additionalProperties, "endMs")
		delete(additionalProperties, "hideAssertionsOlderThanNHours")
		delete(additionalProperties, "alertCategories")
		delete(additionalProperties, "scopeCriteria")
		delete(additionalProperties, "hideAssertionsPresentMoreThanPercentageOfTime")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAssertionScoreRequestDto struct {
	value *AssertionScoreRequestDto
	isSet bool
}

func (v NullableAssertionScoreRequestDto) Get() *AssertionScoreRequestDto {
	return v.value
}

func (v *NullableAssertionScoreRequestDto) Set(val *AssertionScoreRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAssertionScoreRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAssertionScoreRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssertionScoreRequestDto(val *AssertionScoreRequestDto) *NullableAssertionScoreRequestDto {
	return &NullableAssertionScoreRequestDto{value: val, isSet: true}
}

func (v NullableAssertionScoreRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssertionScoreRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
