/*
Asserts, Inc

Asserts Public API

API version: 1.0.4
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the TimeCriteriaDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeCriteriaDto{}

// TimeCriteriaDto struct for TimeCriteriaDto
type TimeCriteriaDto struct {
	Instant              *int64 `json:"instant,omitempty"`
	Start                *int64 `json:"start,omitempty"`
	End                  *int64 `json:"end,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TimeCriteriaDto TimeCriteriaDto

// NewTimeCriteriaDto instantiates a new TimeCriteriaDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeCriteriaDto() *TimeCriteriaDto {
	this := TimeCriteriaDto{}
	return &this
}

// NewTimeCriteriaDtoWithDefaults instantiates a new TimeCriteriaDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeCriteriaDtoWithDefaults() *TimeCriteriaDto {
	this := TimeCriteriaDto{}
	return &this
}

// GetInstant returns the Instant field value if set, zero value otherwise.
func (o *TimeCriteriaDto) GetInstant() int64 {
	if o == nil || IsNil(o.Instant) {
		var ret int64
		return ret
	}
	return *o.Instant
}

// GetInstantOk returns a tuple with the Instant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeCriteriaDto) GetInstantOk() (*int64, bool) {
	if o == nil || IsNil(o.Instant) {
		return nil, false
	}
	return o.Instant, true
}

// HasInstant returns a boolean if a field has been set.
func (o *TimeCriteriaDto) HasInstant() bool {
	if o != nil && !IsNil(o.Instant) {
		return true
	}

	return false
}

// SetInstant gets a reference to the given int64 and assigns it to the Instant field.
func (o *TimeCriteriaDto) SetInstant(v int64) {
	o.Instant = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *TimeCriteriaDto) GetStart() int64 {
	if o == nil || IsNil(o.Start) {
		var ret int64
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeCriteriaDto) GetStartOk() (*int64, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *TimeCriteriaDto) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int64 and assigns it to the Start field.
func (o *TimeCriteriaDto) SetStart(v int64) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *TimeCriteriaDto) GetEnd() int64 {
	if o == nil || IsNil(o.End) {
		var ret int64
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeCriteriaDto) GetEndOk() (*int64, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *TimeCriteriaDto) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given int64 and assigns it to the End field.
func (o *TimeCriteriaDto) SetEnd(v int64) {
	o.End = &v
}

func (o TimeCriteriaDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeCriteriaDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Instant) {
		toSerialize["instant"] = o.Instant
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TimeCriteriaDto) UnmarshalJSON(data []byte) (err error) {
	varTimeCriteriaDto := _TimeCriteriaDto{}

	err = json.Unmarshal(data, &varTimeCriteriaDto)

	if err != nil {
		return err
	}

	*o = TimeCriteriaDto(varTimeCriteriaDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "instant")
		delete(additionalProperties, "start")
		delete(additionalProperties, "end")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTimeCriteriaDto struct {
	value *TimeCriteriaDto
	isSet bool
}

func (v NullableTimeCriteriaDto) Get() *TimeCriteriaDto {
	return v.value
}

func (v *NullableTimeCriteriaDto) Set(val *TimeCriteriaDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeCriteriaDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeCriteriaDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeCriteriaDto(val *TimeCriteriaDto) *NullableTimeCriteriaDto {
	return &NullableTimeCriteriaDto{value: val, isSet: true}
}

func (v NullableTimeCriteriaDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeCriteriaDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
