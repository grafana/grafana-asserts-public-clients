/*
Asserts, Inc

Asserts Public API

API version: 1.0.4
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the EntityAssertionSummariesDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntityAssertionSummariesDto{}

// EntityAssertionSummariesDto struct for EntityAssertionSummariesDto
type EntityAssertionSummariesDto struct {
	Summaries                []EntityAssertionSummaryDto `json:"summaries,omitempty"`
	TimeWindow               *TimeWindowDto              `json:"timeWindow,omitempty"`
	TimeStepIntervalMs       *int64                      `json:"timeStepIntervalMs,omitempty"`
	AggregateAssertionScores *EntityAssertionScoresDto   `json:"aggregateAssertionScores,omitempty"`
	AssertionScores          []EntityAssertionScoresDto  `json:"assertionScores,omitempty"`
	GraphData                interface{}                 `json:"graphData,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _EntityAssertionSummariesDto EntityAssertionSummariesDto

// NewEntityAssertionSummariesDto instantiates a new EntityAssertionSummariesDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityAssertionSummariesDto() *EntityAssertionSummariesDto {
	this := EntityAssertionSummariesDto{}
	return &this
}

// NewEntityAssertionSummariesDtoWithDefaults instantiates a new EntityAssertionSummariesDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityAssertionSummariesDtoWithDefaults() *EntityAssertionSummariesDto {
	this := EntityAssertionSummariesDto{}
	return &this
}

// GetSummaries returns the Summaries field value if set, zero value otherwise.
func (o *EntityAssertionSummariesDto) GetSummaries() []EntityAssertionSummaryDto {
	if o == nil || IsNil(o.Summaries) {
		var ret []EntityAssertionSummaryDto
		return ret
	}
	return o.Summaries
}

// GetSummariesOk returns a tuple with the Summaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityAssertionSummariesDto) GetSummariesOk() ([]EntityAssertionSummaryDto, bool) {
	if o == nil || IsNil(o.Summaries) {
		return nil, false
	}
	return o.Summaries, true
}

// HasSummaries returns a boolean if a field has been set.
func (o *EntityAssertionSummariesDto) HasSummaries() bool {
	if o != nil && !IsNil(o.Summaries) {
		return true
	}

	return false
}

// SetSummaries gets a reference to the given []EntityAssertionSummaryDto and assigns it to the Summaries field.
func (o *EntityAssertionSummariesDto) SetSummaries(v []EntityAssertionSummaryDto) {
	o.Summaries = v
}

// GetTimeWindow returns the TimeWindow field value if set, zero value otherwise.
func (o *EntityAssertionSummariesDto) GetTimeWindow() TimeWindowDto {
	if o == nil || IsNil(o.TimeWindow) {
		var ret TimeWindowDto
		return ret
	}
	return *o.TimeWindow
}

// GetTimeWindowOk returns a tuple with the TimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityAssertionSummariesDto) GetTimeWindowOk() (*TimeWindowDto, bool) {
	if o == nil || IsNil(o.TimeWindow) {
		return nil, false
	}
	return o.TimeWindow, true
}

// HasTimeWindow returns a boolean if a field has been set.
func (o *EntityAssertionSummariesDto) HasTimeWindow() bool {
	if o != nil && !IsNil(o.TimeWindow) {
		return true
	}

	return false
}

// SetTimeWindow gets a reference to the given TimeWindowDto and assigns it to the TimeWindow field.
func (o *EntityAssertionSummariesDto) SetTimeWindow(v TimeWindowDto) {
	o.TimeWindow = &v
}

// GetTimeStepIntervalMs returns the TimeStepIntervalMs field value if set, zero value otherwise.
func (o *EntityAssertionSummariesDto) GetTimeStepIntervalMs() int64 {
	if o == nil || IsNil(o.TimeStepIntervalMs) {
		var ret int64
		return ret
	}
	return *o.TimeStepIntervalMs
}

// GetTimeStepIntervalMsOk returns a tuple with the TimeStepIntervalMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityAssertionSummariesDto) GetTimeStepIntervalMsOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeStepIntervalMs) {
		return nil, false
	}
	return o.TimeStepIntervalMs, true
}

// HasTimeStepIntervalMs returns a boolean if a field has been set.
func (o *EntityAssertionSummariesDto) HasTimeStepIntervalMs() bool {
	if o != nil && !IsNil(o.TimeStepIntervalMs) {
		return true
	}

	return false
}

// SetTimeStepIntervalMs gets a reference to the given int64 and assigns it to the TimeStepIntervalMs field.
func (o *EntityAssertionSummariesDto) SetTimeStepIntervalMs(v int64) {
	o.TimeStepIntervalMs = &v
}

// GetAggregateAssertionScores returns the AggregateAssertionScores field value if set, zero value otherwise.
func (o *EntityAssertionSummariesDto) GetAggregateAssertionScores() EntityAssertionScoresDto {
	if o == nil || IsNil(o.AggregateAssertionScores) {
		var ret EntityAssertionScoresDto
		return ret
	}
	return *o.AggregateAssertionScores
}

// GetAggregateAssertionScoresOk returns a tuple with the AggregateAssertionScores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityAssertionSummariesDto) GetAggregateAssertionScoresOk() (*EntityAssertionScoresDto, bool) {
	if o == nil || IsNil(o.AggregateAssertionScores) {
		return nil, false
	}
	return o.AggregateAssertionScores, true
}

// HasAggregateAssertionScores returns a boolean if a field has been set.
func (o *EntityAssertionSummariesDto) HasAggregateAssertionScores() bool {
	if o != nil && !IsNil(o.AggregateAssertionScores) {
		return true
	}

	return false
}

// SetAggregateAssertionScores gets a reference to the given EntityAssertionScoresDto and assigns it to the AggregateAssertionScores field.
func (o *EntityAssertionSummariesDto) SetAggregateAssertionScores(v EntityAssertionScoresDto) {
	o.AggregateAssertionScores = &v
}

// GetAssertionScores returns the AssertionScores field value if set, zero value otherwise.
func (o *EntityAssertionSummariesDto) GetAssertionScores() []EntityAssertionScoresDto {
	if o == nil || IsNil(o.AssertionScores) {
		var ret []EntityAssertionScoresDto
		return ret
	}
	return o.AssertionScores
}

// GetAssertionScoresOk returns a tuple with the AssertionScores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityAssertionSummariesDto) GetAssertionScoresOk() ([]EntityAssertionScoresDto, bool) {
	if o == nil || IsNil(o.AssertionScores) {
		return nil, false
	}
	return o.AssertionScores, true
}

// HasAssertionScores returns a boolean if a field has been set.
func (o *EntityAssertionSummariesDto) HasAssertionScores() bool {
	if o != nil && !IsNil(o.AssertionScores) {
		return true
	}

	return false
}

// SetAssertionScores gets a reference to the given []EntityAssertionScoresDto and assigns it to the AssertionScores field.
func (o *EntityAssertionSummariesDto) SetAssertionScores(v []EntityAssertionScoresDto) {
	o.AssertionScores = v
}

// GetGraphData returns the GraphData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EntityAssertionSummariesDto) GetGraphData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.GraphData
}

// GetGraphDataOk returns a tuple with the GraphData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EntityAssertionSummariesDto) GetGraphDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.GraphData) {
		return nil, false
	}
	return &o.GraphData, true
}

// HasGraphData returns a boolean if a field has been set.
func (o *EntityAssertionSummariesDto) HasGraphData() bool {
	if o != nil && IsNil(o.GraphData) {
		return true
	}

	return false
}

// SetGraphData gets a reference to the given interface{} and assigns it to the GraphData field.
func (o *EntityAssertionSummariesDto) SetGraphData(v interface{}) {
	o.GraphData = v
}

func (o EntityAssertionSummariesDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntityAssertionSummariesDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Summaries) {
		toSerialize["summaries"] = o.Summaries
	}
	if !IsNil(o.TimeWindow) {
		toSerialize["timeWindow"] = o.TimeWindow
	}
	if !IsNil(o.TimeStepIntervalMs) {
		toSerialize["timeStepIntervalMs"] = o.TimeStepIntervalMs
	}
	if !IsNil(o.AggregateAssertionScores) {
		toSerialize["aggregateAssertionScores"] = o.AggregateAssertionScores
	}
	if !IsNil(o.AssertionScores) {
		toSerialize["assertionScores"] = o.AssertionScores
	}
	if o.GraphData != nil {
		toSerialize["graphData"] = o.GraphData
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EntityAssertionSummariesDto) UnmarshalJSON(data []byte) (err error) {
	varEntityAssertionSummariesDto := _EntityAssertionSummariesDto{}

	err = json.Unmarshal(data, &varEntityAssertionSummariesDto)

	if err != nil {
		return err
	}

	*o = EntityAssertionSummariesDto(varEntityAssertionSummariesDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "summaries")
		delete(additionalProperties, "timeWindow")
		delete(additionalProperties, "timeStepIntervalMs")
		delete(additionalProperties, "aggregateAssertionScores")
		delete(additionalProperties, "assertionScores")
		delete(additionalProperties, "graphData")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEntityAssertionSummariesDto struct {
	value *EntityAssertionSummariesDto
	isSet bool
}

func (v NullableEntityAssertionSummariesDto) Get() *EntityAssertionSummariesDto {
	return v.value
}

func (v *NullableEntityAssertionSummariesDto) Set(val *EntityAssertionSummariesDto) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityAssertionSummariesDto) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityAssertionSummariesDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityAssertionSummariesDto(val *EntityAssertionSummariesDto) *NullableEntityAssertionSummariesDto {
	return &NullableEntityAssertionSummariesDto{value: val, isSet: true}
}

func (v NullableEntityAssertionSummariesDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityAssertionSummariesDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
