/*
Asserts, Inc

Asserts Public API

API version: 2025.09.11-132913
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the KpiDisplayConfigDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KpiDisplayConfigDto{}

// KpiDisplayConfigDto struct for KpiDisplayConfigDto
type KpiDisplayConfigDto struct {
	DefaultDashboard     *bool `json:"defaultDashboard,omitempty"`
	AdditionalDashboard  *bool `json:"additionalDashboard,omitempty"`
	FrameworkDashboard   *bool `json:"frameworkDashboard,omitempty"`
	RuntimeDashboard     *bool `json:"runtimeDashboard,omitempty"`
	K8sAppView           *bool `json:"k8sAppView,omitempty"`
	AppO11yAppView       *bool `json:"appO11yAppView,omitempty"`
	FrontendO11yAppView  *bool `json:"frontendO11yAppView,omitempty"`
	AwsAppView           *bool `json:"awsAppView,omitempty"`
	LogsView             *bool `json:"logsView,omitempty"`
	TracesView           *bool `json:"tracesView,omitempty"`
	PropertiesView       *bool `json:"propertiesView,omitempty"`
	MetricsView          *bool `json:"metricsView,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KpiDisplayConfigDto KpiDisplayConfigDto

// NewKpiDisplayConfigDto instantiates a new KpiDisplayConfigDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKpiDisplayConfigDto() *KpiDisplayConfigDto {
	this := KpiDisplayConfigDto{}
	return &this
}

// NewKpiDisplayConfigDtoWithDefaults instantiates a new KpiDisplayConfigDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKpiDisplayConfigDtoWithDefaults() *KpiDisplayConfigDto {
	this := KpiDisplayConfigDto{}
	return &this
}

// GetDefaultDashboard returns the DefaultDashboard field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetDefaultDashboard() bool {
	if o == nil || IsNil(o.DefaultDashboard) {
		var ret bool
		return ret
	}
	return *o.DefaultDashboard
}

// GetDefaultDashboardOk returns a tuple with the DefaultDashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetDefaultDashboardOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultDashboard) {
		return nil, false
	}
	return o.DefaultDashboard, true
}

// HasDefaultDashboard returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasDefaultDashboard() bool {
	if o != nil && !IsNil(o.DefaultDashboard) {
		return true
	}

	return false
}

// SetDefaultDashboard gets a reference to the given bool and assigns it to the DefaultDashboard field.
func (o *KpiDisplayConfigDto) SetDefaultDashboard(v bool) {
	o.DefaultDashboard = &v
}

// GetAdditionalDashboard returns the AdditionalDashboard field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetAdditionalDashboard() bool {
	if o == nil || IsNil(o.AdditionalDashboard) {
		var ret bool
		return ret
	}
	return *o.AdditionalDashboard
}

// GetAdditionalDashboardOk returns a tuple with the AdditionalDashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetAdditionalDashboardOk() (*bool, bool) {
	if o == nil || IsNil(o.AdditionalDashboard) {
		return nil, false
	}
	return o.AdditionalDashboard, true
}

// HasAdditionalDashboard returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasAdditionalDashboard() bool {
	if o != nil && !IsNil(o.AdditionalDashboard) {
		return true
	}

	return false
}

// SetAdditionalDashboard gets a reference to the given bool and assigns it to the AdditionalDashboard field.
func (o *KpiDisplayConfigDto) SetAdditionalDashboard(v bool) {
	o.AdditionalDashboard = &v
}

// GetFrameworkDashboard returns the FrameworkDashboard field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetFrameworkDashboard() bool {
	if o == nil || IsNil(o.FrameworkDashboard) {
		var ret bool
		return ret
	}
	return *o.FrameworkDashboard
}

// GetFrameworkDashboardOk returns a tuple with the FrameworkDashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetFrameworkDashboardOk() (*bool, bool) {
	if o == nil || IsNil(o.FrameworkDashboard) {
		return nil, false
	}
	return o.FrameworkDashboard, true
}

// HasFrameworkDashboard returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasFrameworkDashboard() bool {
	if o != nil && !IsNil(o.FrameworkDashboard) {
		return true
	}

	return false
}

// SetFrameworkDashboard gets a reference to the given bool and assigns it to the FrameworkDashboard field.
func (o *KpiDisplayConfigDto) SetFrameworkDashboard(v bool) {
	o.FrameworkDashboard = &v
}

// GetRuntimeDashboard returns the RuntimeDashboard field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetRuntimeDashboard() bool {
	if o == nil || IsNil(o.RuntimeDashboard) {
		var ret bool
		return ret
	}
	return *o.RuntimeDashboard
}

// GetRuntimeDashboardOk returns a tuple with the RuntimeDashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetRuntimeDashboardOk() (*bool, bool) {
	if o == nil || IsNil(o.RuntimeDashboard) {
		return nil, false
	}
	return o.RuntimeDashboard, true
}

// HasRuntimeDashboard returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasRuntimeDashboard() bool {
	if o != nil && !IsNil(o.RuntimeDashboard) {
		return true
	}

	return false
}

// SetRuntimeDashboard gets a reference to the given bool and assigns it to the RuntimeDashboard field.
func (o *KpiDisplayConfigDto) SetRuntimeDashboard(v bool) {
	o.RuntimeDashboard = &v
}

// GetK8sAppView returns the K8sAppView field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetK8sAppView() bool {
	if o == nil || IsNil(o.K8sAppView) {
		var ret bool
		return ret
	}
	return *o.K8sAppView
}

// GetK8sAppViewOk returns a tuple with the K8sAppView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetK8sAppViewOk() (*bool, bool) {
	if o == nil || IsNil(o.K8sAppView) {
		return nil, false
	}
	return o.K8sAppView, true
}

// HasK8sAppView returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasK8sAppView() bool {
	if o != nil && !IsNil(o.K8sAppView) {
		return true
	}

	return false
}

// SetK8sAppView gets a reference to the given bool and assigns it to the K8sAppView field.
func (o *KpiDisplayConfigDto) SetK8sAppView(v bool) {
	o.K8sAppView = &v
}

// GetAppO11yAppView returns the AppO11yAppView field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetAppO11yAppView() bool {
	if o == nil || IsNil(o.AppO11yAppView) {
		var ret bool
		return ret
	}
	return *o.AppO11yAppView
}

// GetAppO11yAppViewOk returns a tuple with the AppO11yAppView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetAppO11yAppViewOk() (*bool, bool) {
	if o == nil || IsNil(o.AppO11yAppView) {
		return nil, false
	}
	return o.AppO11yAppView, true
}

// HasAppO11yAppView returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasAppO11yAppView() bool {
	if o != nil && !IsNil(o.AppO11yAppView) {
		return true
	}

	return false
}

// SetAppO11yAppView gets a reference to the given bool and assigns it to the AppO11yAppView field.
func (o *KpiDisplayConfigDto) SetAppO11yAppView(v bool) {
	o.AppO11yAppView = &v
}

// GetFrontendO11yAppView returns the FrontendO11yAppView field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetFrontendO11yAppView() bool {
	if o == nil || IsNil(o.FrontendO11yAppView) {
		var ret bool
		return ret
	}
	return *o.FrontendO11yAppView
}

// GetFrontendO11yAppViewOk returns a tuple with the FrontendO11yAppView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetFrontendO11yAppViewOk() (*bool, bool) {
	if o == nil || IsNil(o.FrontendO11yAppView) {
		return nil, false
	}
	return o.FrontendO11yAppView, true
}

// HasFrontendO11yAppView returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasFrontendO11yAppView() bool {
	if o != nil && !IsNil(o.FrontendO11yAppView) {
		return true
	}

	return false
}

// SetFrontendO11yAppView gets a reference to the given bool and assigns it to the FrontendO11yAppView field.
func (o *KpiDisplayConfigDto) SetFrontendO11yAppView(v bool) {
	o.FrontendO11yAppView = &v
}

// GetAwsAppView returns the AwsAppView field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetAwsAppView() bool {
	if o == nil || IsNil(o.AwsAppView) {
		var ret bool
		return ret
	}
	return *o.AwsAppView
}

// GetAwsAppViewOk returns a tuple with the AwsAppView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetAwsAppViewOk() (*bool, bool) {
	if o == nil || IsNil(o.AwsAppView) {
		return nil, false
	}
	return o.AwsAppView, true
}

// HasAwsAppView returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasAwsAppView() bool {
	if o != nil && !IsNil(o.AwsAppView) {
		return true
	}

	return false
}

// SetAwsAppView gets a reference to the given bool and assigns it to the AwsAppView field.
func (o *KpiDisplayConfigDto) SetAwsAppView(v bool) {
	o.AwsAppView = &v
}

// GetLogsView returns the LogsView field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetLogsView() bool {
	if o == nil || IsNil(o.LogsView) {
		var ret bool
		return ret
	}
	return *o.LogsView
}

// GetLogsViewOk returns a tuple with the LogsView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetLogsViewOk() (*bool, bool) {
	if o == nil || IsNil(o.LogsView) {
		return nil, false
	}
	return o.LogsView, true
}

// HasLogsView returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasLogsView() bool {
	if o != nil && !IsNil(o.LogsView) {
		return true
	}

	return false
}

// SetLogsView gets a reference to the given bool and assigns it to the LogsView field.
func (o *KpiDisplayConfigDto) SetLogsView(v bool) {
	o.LogsView = &v
}

// GetTracesView returns the TracesView field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetTracesView() bool {
	if o == nil || IsNil(o.TracesView) {
		var ret bool
		return ret
	}
	return *o.TracesView
}

// GetTracesViewOk returns a tuple with the TracesView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetTracesViewOk() (*bool, bool) {
	if o == nil || IsNil(o.TracesView) {
		return nil, false
	}
	return o.TracesView, true
}

// HasTracesView returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasTracesView() bool {
	if o != nil && !IsNil(o.TracesView) {
		return true
	}

	return false
}

// SetTracesView gets a reference to the given bool and assigns it to the TracesView field.
func (o *KpiDisplayConfigDto) SetTracesView(v bool) {
	o.TracesView = &v
}

// GetPropertiesView returns the PropertiesView field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetPropertiesView() bool {
	if o == nil || IsNil(o.PropertiesView) {
		var ret bool
		return ret
	}
	return *o.PropertiesView
}

// GetPropertiesViewOk returns a tuple with the PropertiesView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetPropertiesViewOk() (*bool, bool) {
	if o == nil || IsNil(o.PropertiesView) {
		return nil, false
	}
	return o.PropertiesView, true
}

// HasPropertiesView returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasPropertiesView() bool {
	if o != nil && !IsNil(o.PropertiesView) {
		return true
	}

	return false
}

// SetPropertiesView gets a reference to the given bool and assigns it to the PropertiesView field.
func (o *KpiDisplayConfigDto) SetPropertiesView(v bool) {
	o.PropertiesView = &v
}

// GetMetricsView returns the MetricsView field value if set, zero value otherwise.
func (o *KpiDisplayConfigDto) GetMetricsView() bool {
	if o == nil || IsNil(o.MetricsView) {
		var ret bool
		return ret
	}
	return *o.MetricsView
}

// GetMetricsViewOk returns a tuple with the MetricsView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KpiDisplayConfigDto) GetMetricsViewOk() (*bool, bool) {
	if o == nil || IsNil(o.MetricsView) {
		return nil, false
	}
	return o.MetricsView, true
}

// HasMetricsView returns a boolean if a field has been set.
func (o *KpiDisplayConfigDto) HasMetricsView() bool {
	if o != nil && !IsNil(o.MetricsView) {
		return true
	}

	return false
}

// SetMetricsView gets a reference to the given bool and assigns it to the MetricsView field.
func (o *KpiDisplayConfigDto) SetMetricsView(v bool) {
	o.MetricsView = &v
}

func (o KpiDisplayConfigDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KpiDisplayConfigDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultDashboard) {
		toSerialize["defaultDashboard"] = o.DefaultDashboard
	}
	if !IsNil(o.AdditionalDashboard) {
		toSerialize["additionalDashboard"] = o.AdditionalDashboard
	}
	if !IsNil(o.FrameworkDashboard) {
		toSerialize["frameworkDashboard"] = o.FrameworkDashboard
	}
	if !IsNil(o.RuntimeDashboard) {
		toSerialize["runtimeDashboard"] = o.RuntimeDashboard
	}
	if !IsNil(o.K8sAppView) {
		toSerialize["k8sAppView"] = o.K8sAppView
	}
	if !IsNil(o.AppO11yAppView) {
		toSerialize["appO11yAppView"] = o.AppO11yAppView
	}
	if !IsNil(o.FrontendO11yAppView) {
		toSerialize["frontendO11yAppView"] = o.FrontendO11yAppView
	}
	if !IsNil(o.AwsAppView) {
		toSerialize["awsAppView"] = o.AwsAppView
	}
	if !IsNil(o.LogsView) {
		toSerialize["logsView"] = o.LogsView
	}
	if !IsNil(o.TracesView) {
		toSerialize["tracesView"] = o.TracesView
	}
	if !IsNil(o.PropertiesView) {
		toSerialize["propertiesView"] = o.PropertiesView
	}
	if !IsNil(o.MetricsView) {
		toSerialize["metricsView"] = o.MetricsView
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KpiDisplayConfigDto) UnmarshalJSON(data []byte) (err error) {
	varKpiDisplayConfigDto := _KpiDisplayConfigDto{}

	err = json.Unmarshal(data, &varKpiDisplayConfigDto)

	if err != nil {
		return err
	}

	*o = KpiDisplayConfigDto(varKpiDisplayConfigDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "defaultDashboard")
		delete(additionalProperties, "additionalDashboard")
		delete(additionalProperties, "frameworkDashboard")
		delete(additionalProperties, "runtimeDashboard")
		delete(additionalProperties, "k8sAppView")
		delete(additionalProperties, "appO11yAppView")
		delete(additionalProperties, "frontendO11yAppView")
		delete(additionalProperties, "awsAppView")
		delete(additionalProperties, "logsView")
		delete(additionalProperties, "tracesView")
		delete(additionalProperties, "propertiesView")
		delete(additionalProperties, "metricsView")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKpiDisplayConfigDto struct {
	value *KpiDisplayConfigDto
	isSet bool
}

func (v NullableKpiDisplayConfigDto) Get() *KpiDisplayConfigDto {
	return v.value
}

func (v *NullableKpiDisplayConfigDto) Set(val *KpiDisplayConfigDto) {
	v.value = val
	v.isSet = true
}

func (v NullableKpiDisplayConfigDto) IsSet() bool {
	return v.isSet
}

func (v *NullableKpiDisplayConfigDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKpiDisplayConfigDto(val *KpiDisplayConfigDto) *NullableKpiDisplayConfigDto {
	return &NullableKpiDisplayConfigDto{value: val, isSet: true}
}

func (v NullableKpiDisplayConfigDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKpiDisplayConfigDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
