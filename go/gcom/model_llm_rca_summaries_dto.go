/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-112305
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the LlmRcaSummariesDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LlmRcaSummariesDto{}

// LlmRcaSummariesDto struct for LlmRcaSummariesDto
type LlmRcaSummariesDto struct {
	Summaries            []LlmRcaAssertionSummaryDto `json:"summaries,omitempty"`
	GraphData            []LlmRcaGraphEntityDto      `json:"graphData,omitempty"`
	Suggestions          []LlmRcaSuggestionDto       `json:"suggestions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LlmRcaSummariesDto LlmRcaSummariesDto

// NewLlmRcaSummariesDto instantiates a new LlmRcaSummariesDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLlmRcaSummariesDto() *LlmRcaSummariesDto {
	this := LlmRcaSummariesDto{}
	return &this
}

// NewLlmRcaSummariesDtoWithDefaults instantiates a new LlmRcaSummariesDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLlmRcaSummariesDtoWithDefaults() *LlmRcaSummariesDto {
	this := LlmRcaSummariesDto{}
	return &this
}

// GetSummaries returns the Summaries field value if set, zero value otherwise.
func (o *LlmRcaSummariesDto) GetSummaries() []LlmRcaAssertionSummaryDto {
	if o == nil || IsNil(o.Summaries) {
		var ret []LlmRcaAssertionSummaryDto
		return ret
	}
	return o.Summaries
}

// GetSummariesOk returns a tuple with the Summaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LlmRcaSummariesDto) GetSummariesOk() ([]LlmRcaAssertionSummaryDto, bool) {
	if o == nil || IsNil(o.Summaries) {
		return nil, false
	}
	return o.Summaries, true
}

// HasSummaries returns a boolean if a field has been set.
func (o *LlmRcaSummariesDto) HasSummaries() bool {
	if o != nil && !IsNil(o.Summaries) {
		return true
	}

	return false
}

// SetSummaries gets a reference to the given []LlmRcaAssertionSummaryDto and assigns it to the Summaries field.
func (o *LlmRcaSummariesDto) SetSummaries(v []LlmRcaAssertionSummaryDto) {
	o.Summaries = v
}

// GetGraphData returns the GraphData field value if set, zero value otherwise.
func (o *LlmRcaSummariesDto) GetGraphData() []LlmRcaGraphEntityDto {
	if o == nil || IsNil(o.GraphData) {
		var ret []LlmRcaGraphEntityDto
		return ret
	}
	return o.GraphData
}

// GetGraphDataOk returns a tuple with the GraphData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LlmRcaSummariesDto) GetGraphDataOk() ([]LlmRcaGraphEntityDto, bool) {
	if o == nil || IsNil(o.GraphData) {
		return nil, false
	}
	return o.GraphData, true
}

// HasGraphData returns a boolean if a field has been set.
func (o *LlmRcaSummariesDto) HasGraphData() bool {
	if o != nil && !IsNil(o.GraphData) {
		return true
	}

	return false
}

// SetGraphData gets a reference to the given []LlmRcaGraphEntityDto and assigns it to the GraphData field.
func (o *LlmRcaSummariesDto) SetGraphData(v []LlmRcaGraphEntityDto) {
	o.GraphData = v
}

// GetSuggestions returns the Suggestions field value if set, zero value otherwise.
func (o *LlmRcaSummariesDto) GetSuggestions() []LlmRcaSuggestionDto {
	if o == nil || IsNil(o.Suggestions) {
		var ret []LlmRcaSuggestionDto
		return ret
	}
	return o.Suggestions
}

// GetSuggestionsOk returns a tuple with the Suggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LlmRcaSummariesDto) GetSuggestionsOk() ([]LlmRcaSuggestionDto, bool) {
	if o == nil || IsNil(o.Suggestions) {
		return nil, false
	}
	return o.Suggestions, true
}

// HasSuggestions returns a boolean if a field has been set.
func (o *LlmRcaSummariesDto) HasSuggestions() bool {
	if o != nil && !IsNil(o.Suggestions) {
		return true
	}

	return false
}

// SetSuggestions gets a reference to the given []LlmRcaSuggestionDto and assigns it to the Suggestions field.
func (o *LlmRcaSummariesDto) SetSuggestions(v []LlmRcaSuggestionDto) {
	o.Suggestions = v
}

func (o LlmRcaSummariesDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LlmRcaSummariesDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Summaries) {
		toSerialize["summaries"] = o.Summaries
	}
	if !IsNil(o.GraphData) {
		toSerialize["graphData"] = o.GraphData
	}
	if !IsNil(o.Suggestions) {
		toSerialize["suggestions"] = o.Suggestions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LlmRcaSummariesDto) UnmarshalJSON(data []byte) (err error) {
	varLlmRcaSummariesDto := _LlmRcaSummariesDto{}

	err = json.Unmarshal(data, &varLlmRcaSummariesDto)

	if err != nil {
		return err
	}

	*o = LlmRcaSummariesDto(varLlmRcaSummariesDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "summaries")
		delete(additionalProperties, "graphData")
		delete(additionalProperties, "suggestions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLlmRcaSummariesDto struct {
	value *LlmRcaSummariesDto
	isSet bool
}

func (v NullableLlmRcaSummariesDto) Get() *LlmRcaSummariesDto {
	return v.value
}

func (v *NullableLlmRcaSummariesDto) Set(val *LlmRcaSummariesDto) {
	v.value = val
	v.isSet = true
}

func (v NullableLlmRcaSummariesDto) IsSet() bool {
	return v.isSet
}

func (v *NullableLlmRcaSummariesDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLlmRcaSummariesDto(val *LlmRcaSummariesDto) *NullableLlmRcaSummariesDto {
	return &NullableLlmRcaSummariesDto{value: val, isSet: true}
}

func (v NullableLlmRcaSummariesDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLlmRcaSummariesDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
