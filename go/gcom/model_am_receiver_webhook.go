/*
Asserts, Inc

Asserts Public API

API version: 2025.08.25-143624
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AMReceiverWebhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AMReceiverWebhook{}

// AMReceiverWebhook struct for AMReceiverWebhook
type AMReceiverWebhook struct {
	Url                  *string           `json:"url,omitempty"`
	SendResolved         *bool             `json:"send_resolved,omitempty"`
	MaxAlerts            *int32            `json:"max_alerts,omitempty"`
	HttpConfig           *AlertManagerHttp `json:"http_config,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AMReceiverWebhook AMReceiverWebhook

// NewAMReceiverWebhook instantiates a new AMReceiverWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAMReceiverWebhook() *AMReceiverWebhook {
	this := AMReceiverWebhook{}
	return &this
}

// NewAMReceiverWebhookWithDefaults instantiates a new AMReceiverWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAMReceiverWebhookWithDefaults() *AMReceiverWebhook {
	this := AMReceiverWebhook{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AMReceiverWebhook) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverWebhook) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AMReceiverWebhook) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AMReceiverWebhook) SetUrl(v string) {
	o.Url = &v
}

// GetSendResolved returns the SendResolved field value if set, zero value otherwise.
func (o *AMReceiverWebhook) GetSendResolved() bool {
	if o == nil || IsNil(o.SendResolved) {
		var ret bool
		return ret
	}
	return *o.SendResolved
}

// GetSendResolvedOk returns a tuple with the SendResolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverWebhook) GetSendResolvedOk() (*bool, bool) {
	if o == nil || IsNil(o.SendResolved) {
		return nil, false
	}
	return o.SendResolved, true
}

// HasSendResolved returns a boolean if a field has been set.
func (o *AMReceiverWebhook) HasSendResolved() bool {
	if o != nil && !IsNil(o.SendResolved) {
		return true
	}

	return false
}

// SetSendResolved gets a reference to the given bool and assigns it to the SendResolved field.
func (o *AMReceiverWebhook) SetSendResolved(v bool) {
	o.SendResolved = &v
}

// GetMaxAlerts returns the MaxAlerts field value if set, zero value otherwise.
func (o *AMReceiverWebhook) GetMaxAlerts() int32 {
	if o == nil || IsNil(o.MaxAlerts) {
		var ret int32
		return ret
	}
	return *o.MaxAlerts
}

// GetMaxAlertsOk returns a tuple with the MaxAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverWebhook) GetMaxAlertsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxAlerts) {
		return nil, false
	}
	return o.MaxAlerts, true
}

// HasMaxAlerts returns a boolean if a field has been set.
func (o *AMReceiverWebhook) HasMaxAlerts() bool {
	if o != nil && !IsNil(o.MaxAlerts) {
		return true
	}

	return false
}

// SetMaxAlerts gets a reference to the given int32 and assigns it to the MaxAlerts field.
func (o *AMReceiverWebhook) SetMaxAlerts(v int32) {
	o.MaxAlerts = &v
}

// GetHttpConfig returns the HttpConfig field value if set, zero value otherwise.
func (o *AMReceiverWebhook) GetHttpConfig() AlertManagerHttp {
	if o == nil || IsNil(o.HttpConfig) {
		var ret AlertManagerHttp
		return ret
	}
	return *o.HttpConfig
}

// GetHttpConfigOk returns a tuple with the HttpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverWebhook) GetHttpConfigOk() (*AlertManagerHttp, bool) {
	if o == nil || IsNil(o.HttpConfig) {
		return nil, false
	}
	return o.HttpConfig, true
}

// HasHttpConfig returns a boolean if a field has been set.
func (o *AMReceiverWebhook) HasHttpConfig() bool {
	if o != nil && !IsNil(o.HttpConfig) {
		return true
	}

	return false
}

// SetHttpConfig gets a reference to the given AlertManagerHttp and assigns it to the HttpConfig field.
func (o *AMReceiverWebhook) SetHttpConfig(v AlertManagerHttp) {
	o.HttpConfig = &v
}

func (o AMReceiverWebhook) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AMReceiverWebhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.SendResolved) {
		toSerialize["send_resolved"] = o.SendResolved
	}
	if !IsNil(o.MaxAlerts) {
		toSerialize["max_alerts"] = o.MaxAlerts
	}
	if !IsNil(o.HttpConfig) {
		toSerialize["http_config"] = o.HttpConfig
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AMReceiverWebhook) UnmarshalJSON(data []byte) (err error) {
	varAMReceiverWebhook := _AMReceiverWebhook{}

	err = json.Unmarshal(data, &varAMReceiverWebhook)

	if err != nil {
		return err
	}

	*o = AMReceiverWebhook(varAMReceiverWebhook)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "url")
		delete(additionalProperties, "send_resolved")
		delete(additionalProperties, "max_alerts")
		delete(additionalProperties, "http_config")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAMReceiverWebhook struct {
	value *AMReceiverWebhook
	isSet bool
}

func (v NullableAMReceiverWebhook) Get() *AMReceiverWebhook {
	return v.value
}

func (v *NullableAMReceiverWebhook) Set(val *AMReceiverWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableAMReceiverWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableAMReceiverWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAMReceiverWebhook(val *AMReceiverWebhook) *NullableAMReceiverWebhook {
	return &NullableAMReceiverWebhook{value: val, isSet: true}
}

func (v NullableAMReceiverWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAMReceiverWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
