/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-110859
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the GraphEntityKpiValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphEntityKpiValue{}

// GraphEntityKpiValue struct for GraphEntityKpiValue
type GraphEntityKpiValue struct {
	KpiValue             *float64               `json:"kpiValue,omitempty"`
	AssertionSummary     *GraphAssertionSummary `json:"assertionSummary,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GraphEntityKpiValue GraphEntityKpiValue

// NewGraphEntityKpiValue instantiates a new GraphEntityKpiValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphEntityKpiValue() *GraphEntityKpiValue {
	this := GraphEntityKpiValue{}
	return &this
}

// NewGraphEntityKpiValueWithDefaults instantiates a new GraphEntityKpiValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphEntityKpiValueWithDefaults() *GraphEntityKpiValue {
	this := GraphEntityKpiValue{}
	return &this
}

// GetKpiValue returns the KpiValue field value if set, zero value otherwise.
func (o *GraphEntityKpiValue) GetKpiValue() float64 {
	if o == nil || IsNil(o.KpiValue) {
		var ret float64
		return ret
	}
	return *o.KpiValue
}

// GetKpiValueOk returns a tuple with the KpiValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphEntityKpiValue) GetKpiValueOk() (*float64, bool) {
	if o == nil || IsNil(o.KpiValue) {
		return nil, false
	}
	return o.KpiValue, true
}

// HasKpiValue returns a boolean if a field has been set.
func (o *GraphEntityKpiValue) HasKpiValue() bool {
	if o != nil && !IsNil(o.KpiValue) {
		return true
	}

	return false
}

// SetKpiValue gets a reference to the given float64 and assigns it to the KpiValue field.
func (o *GraphEntityKpiValue) SetKpiValue(v float64) {
	o.KpiValue = &v
}

// GetAssertionSummary returns the AssertionSummary field value if set, zero value otherwise.
func (o *GraphEntityKpiValue) GetAssertionSummary() GraphAssertionSummary {
	if o == nil || IsNil(o.AssertionSummary) {
		var ret GraphAssertionSummary
		return ret
	}
	return *o.AssertionSummary
}

// GetAssertionSummaryOk returns a tuple with the AssertionSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphEntityKpiValue) GetAssertionSummaryOk() (*GraphAssertionSummary, bool) {
	if o == nil || IsNil(o.AssertionSummary) {
		return nil, false
	}
	return o.AssertionSummary, true
}

// HasAssertionSummary returns a boolean if a field has been set.
func (o *GraphEntityKpiValue) HasAssertionSummary() bool {
	if o != nil && !IsNil(o.AssertionSummary) {
		return true
	}

	return false
}

// SetAssertionSummary gets a reference to the given GraphAssertionSummary and assigns it to the AssertionSummary field.
func (o *GraphEntityKpiValue) SetAssertionSummary(v GraphAssertionSummary) {
	o.AssertionSummary = &v
}

func (o GraphEntityKpiValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphEntityKpiValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KpiValue) {
		toSerialize["kpiValue"] = o.KpiValue
	}
	if !IsNil(o.AssertionSummary) {
		toSerialize["assertionSummary"] = o.AssertionSummary
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GraphEntityKpiValue) UnmarshalJSON(data []byte) (err error) {
	varGraphEntityKpiValue := _GraphEntityKpiValue{}

	err = json.Unmarshal(data, &varGraphEntityKpiValue)

	if err != nil {
		return err
	}

	*o = GraphEntityKpiValue(varGraphEntityKpiValue)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "kpiValue")
		delete(additionalProperties, "assertionSummary")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGraphEntityKpiValue struct {
	value *GraphEntityKpiValue
	isSet bool
}

func (v NullableGraphEntityKpiValue) Get() *GraphEntityKpiValue {
	return v.value
}

func (v *NullableGraphEntityKpiValue) Set(val *GraphEntityKpiValue) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphEntityKpiValue) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphEntityKpiValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphEntityKpiValue(val *GraphEntityKpiValue) *NullableGraphEntityKpiValue {
	return &NullableGraphEntityKpiValue{value: val, isSet: true}
}

func (v NullableGraphEntityKpiValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphEntityKpiValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
