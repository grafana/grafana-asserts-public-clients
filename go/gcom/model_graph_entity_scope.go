/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-110859
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the GraphEntityScope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphEntityScope{}

// GraphEntityScope struct for GraphEntityScope
type GraphEntityScope struct {
	Empty                *bool `json:"empty,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GraphEntityScope GraphEntityScope

// NewGraphEntityScope instantiates a new GraphEntityScope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphEntityScope() *GraphEntityScope {
	this := GraphEntityScope{}
	return &this
}

// NewGraphEntityScopeWithDefaults instantiates a new GraphEntityScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphEntityScopeWithDefaults() *GraphEntityScope {
	this := GraphEntityScope{}
	return &this
}

// GetEmpty returns the Empty field value if set, zero value otherwise.
func (o *GraphEntityScope) GetEmpty() bool {
	if o == nil || IsNil(o.Empty) {
		var ret bool
		return ret
	}
	return *o.Empty
}

// GetEmptyOk returns a tuple with the Empty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphEntityScope) GetEmptyOk() (*bool, bool) {
	if o == nil || IsNil(o.Empty) {
		return nil, false
	}
	return o.Empty, true
}

// HasEmpty returns a boolean if a field has been set.
func (o *GraphEntityScope) HasEmpty() bool {
	if o != nil && !IsNil(o.Empty) {
		return true
	}

	return false
}

// SetEmpty gets a reference to the given bool and assigns it to the Empty field.
func (o *GraphEntityScope) SetEmpty(v bool) {
	o.Empty = &v
}

func (o GraphEntityScope) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphEntityScope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Empty) {
		toSerialize["empty"] = o.Empty
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GraphEntityScope) UnmarshalJSON(data []byte) (err error) {
	varGraphEntityScope := _GraphEntityScope{}

	err = json.Unmarshal(data, &varGraphEntityScope)

	if err != nil {
		return err
	}

	*o = GraphEntityScope(varGraphEntityScope)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "empty")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGraphEntityScope struct {
	value *GraphEntityScope
	isSet bool
}

func (v NullableGraphEntityScope) Get() *GraphEntityScope {
	return v.value
}

func (v *NullableGraphEntityScope) Set(val *GraphEntityScope) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphEntityScope) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphEntityScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphEntityScope(val *GraphEntityScope) *NullableGraphEntityScope {
	return &NullableGraphEntityScope{value: val, isSet: true}
}

func (v NullableGraphEntityScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphEntityScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
