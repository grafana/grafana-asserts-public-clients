/*
Asserts, Inc

Asserts Public API

API version: 1.0.4
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the ConfigValidationResponseDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigValidationResponseDto{}

// ConfigValidationResponseDto struct for ConfigValidationResponseDto
type ConfigValidationResponseDto struct {
	State                *string  `json:"state,omitempty"`
	JobId                *string  `json:"jobId,omitempty"`
	Errors               []string `json:"errors,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConfigValidationResponseDto ConfigValidationResponseDto

// NewConfigValidationResponseDto instantiates a new ConfigValidationResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigValidationResponseDto() *ConfigValidationResponseDto {
	this := ConfigValidationResponseDto{}
	return &this
}

// NewConfigValidationResponseDtoWithDefaults instantiates a new ConfigValidationResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigValidationResponseDtoWithDefaults() *ConfigValidationResponseDto {
	this := ConfigValidationResponseDto{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ConfigValidationResponseDto) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigValidationResponseDto) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ConfigValidationResponseDto) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ConfigValidationResponseDto) SetState(v string) {
	o.State = &v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *ConfigValidationResponseDto) GetJobId() string {
	if o == nil || IsNil(o.JobId) {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigValidationResponseDto) GetJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *ConfigValidationResponseDto) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *ConfigValidationResponseDto) SetJobId(v string) {
	o.JobId = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ConfigValidationResponseDto) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigValidationResponseDto) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ConfigValidationResponseDto) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *ConfigValidationResponseDto) SetErrors(v []string) {
	o.Errors = v
}

func (o ConfigValidationResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigValidationResponseDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.JobId) {
		toSerialize["jobId"] = o.JobId
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConfigValidationResponseDto) UnmarshalJSON(data []byte) (err error) {
	varConfigValidationResponseDto := _ConfigValidationResponseDto{}

	err = json.Unmarshal(data, &varConfigValidationResponseDto)

	if err != nil {
		return err
	}

	*o = ConfigValidationResponseDto(varConfigValidationResponseDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "state")
		delete(additionalProperties, "jobId")
		delete(additionalProperties, "errors")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConfigValidationResponseDto struct {
	value *ConfigValidationResponseDto
	isSet bool
}

func (v NullableConfigValidationResponseDto) Get() *ConfigValidationResponseDto {
	return v.value
}

func (v *NullableConfigValidationResponseDto) Set(val *ConfigValidationResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigValidationResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigValidationResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigValidationResponseDto(val *ConfigValidationResponseDto) *NullableConfigValidationResponseDto {
	return &NullableConfigValidationResponseDto{value: val, isSet: true}
}

func (v NullableConfigValidationResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigValidationResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
