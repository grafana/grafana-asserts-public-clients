/*
Asserts, Inc

Asserts Public API

API version: 2025.08.25-143403
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AlertManagerReceiver type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertManagerReceiver{}

// AlertManagerReceiver struct for AlertManagerReceiver
type AlertManagerReceiver struct {
	Name                 *string               `json:"name,omitempty"`
	EmailConfigs         []AMReceiverEmail     `json:"email_configs,omitempty"`
	OpsgenieConfigs      []AMReceiverOpsGenie  `json:"opsgenie_configs,omitempty"`
	PagerdutyConfigs     []AMReceiverPagerDuty `json:"pagerduty_configs,omitempty"`
	PushoverConfigs      []AMReceiverPushOver  `json:"pushover_configs,omitempty"`
	SlackConfigs         []AMReceiverSlack     `json:"slack_configs,omitempty"`
	SnsConfigs           []AMReceiverSNS       `json:"sns_configs,omitempty"`
	VictoropsConfigs     []AMReceiverVictorOps `json:"victorops_configs,omitempty"`
	WebhookConfigs       []AMReceiverWebhook   `json:"webhook_configs,omitempty"`
	WechatConfigs        []AMReceiverWebhook   `json:"wechat_configs,omitempty"`
	TelegramConfigs      []AMReceiverWebhook   `json:"telegram_configs,omitempty"`
	WebexConfigs         []AMReceiverWebhook   `json:"webex_configs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AlertManagerReceiver AlertManagerReceiver

// NewAlertManagerReceiver instantiates a new AlertManagerReceiver object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertManagerReceiver() *AlertManagerReceiver {
	this := AlertManagerReceiver{}
	return &this
}

// NewAlertManagerReceiverWithDefaults instantiates a new AlertManagerReceiver object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertManagerReceiverWithDefaults() *AlertManagerReceiver {
	this := AlertManagerReceiver{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AlertManagerReceiver) SetName(v string) {
	o.Name = &v
}

// GetEmailConfigs returns the EmailConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetEmailConfigs() []AMReceiverEmail {
	if o == nil || IsNil(o.EmailConfigs) {
		var ret []AMReceiverEmail
		return ret
	}
	return o.EmailConfigs
}

// GetEmailConfigsOk returns a tuple with the EmailConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetEmailConfigsOk() ([]AMReceiverEmail, bool) {
	if o == nil || IsNil(o.EmailConfigs) {
		return nil, false
	}
	return o.EmailConfigs, true
}

// HasEmailConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasEmailConfigs() bool {
	if o != nil && !IsNil(o.EmailConfigs) {
		return true
	}

	return false
}

// SetEmailConfigs gets a reference to the given []AMReceiverEmail and assigns it to the EmailConfigs field.
func (o *AlertManagerReceiver) SetEmailConfigs(v []AMReceiverEmail) {
	o.EmailConfigs = v
}

// GetOpsgenieConfigs returns the OpsgenieConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetOpsgenieConfigs() []AMReceiverOpsGenie {
	if o == nil || IsNil(o.OpsgenieConfigs) {
		var ret []AMReceiverOpsGenie
		return ret
	}
	return o.OpsgenieConfigs
}

// GetOpsgenieConfigsOk returns a tuple with the OpsgenieConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetOpsgenieConfigsOk() ([]AMReceiverOpsGenie, bool) {
	if o == nil || IsNil(o.OpsgenieConfigs) {
		return nil, false
	}
	return o.OpsgenieConfigs, true
}

// HasOpsgenieConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasOpsgenieConfigs() bool {
	if o != nil && !IsNil(o.OpsgenieConfigs) {
		return true
	}

	return false
}

// SetOpsgenieConfigs gets a reference to the given []AMReceiverOpsGenie and assigns it to the OpsgenieConfigs field.
func (o *AlertManagerReceiver) SetOpsgenieConfigs(v []AMReceiverOpsGenie) {
	o.OpsgenieConfigs = v
}

// GetPagerdutyConfigs returns the PagerdutyConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetPagerdutyConfigs() []AMReceiverPagerDuty {
	if o == nil || IsNil(o.PagerdutyConfigs) {
		var ret []AMReceiverPagerDuty
		return ret
	}
	return o.PagerdutyConfigs
}

// GetPagerdutyConfigsOk returns a tuple with the PagerdutyConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetPagerdutyConfigsOk() ([]AMReceiverPagerDuty, bool) {
	if o == nil || IsNil(o.PagerdutyConfigs) {
		return nil, false
	}
	return o.PagerdutyConfigs, true
}

// HasPagerdutyConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasPagerdutyConfigs() bool {
	if o != nil && !IsNil(o.PagerdutyConfigs) {
		return true
	}

	return false
}

// SetPagerdutyConfigs gets a reference to the given []AMReceiverPagerDuty and assigns it to the PagerdutyConfigs field.
func (o *AlertManagerReceiver) SetPagerdutyConfigs(v []AMReceiverPagerDuty) {
	o.PagerdutyConfigs = v
}

// GetPushoverConfigs returns the PushoverConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetPushoverConfigs() []AMReceiverPushOver {
	if o == nil || IsNil(o.PushoverConfigs) {
		var ret []AMReceiverPushOver
		return ret
	}
	return o.PushoverConfigs
}

// GetPushoverConfigsOk returns a tuple with the PushoverConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetPushoverConfigsOk() ([]AMReceiverPushOver, bool) {
	if o == nil || IsNil(o.PushoverConfigs) {
		return nil, false
	}
	return o.PushoverConfigs, true
}

// HasPushoverConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasPushoverConfigs() bool {
	if o != nil && !IsNil(o.PushoverConfigs) {
		return true
	}

	return false
}

// SetPushoverConfigs gets a reference to the given []AMReceiverPushOver and assigns it to the PushoverConfigs field.
func (o *AlertManagerReceiver) SetPushoverConfigs(v []AMReceiverPushOver) {
	o.PushoverConfigs = v
}

// GetSlackConfigs returns the SlackConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetSlackConfigs() []AMReceiverSlack {
	if o == nil || IsNil(o.SlackConfigs) {
		var ret []AMReceiverSlack
		return ret
	}
	return o.SlackConfigs
}

// GetSlackConfigsOk returns a tuple with the SlackConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetSlackConfigsOk() ([]AMReceiverSlack, bool) {
	if o == nil || IsNil(o.SlackConfigs) {
		return nil, false
	}
	return o.SlackConfigs, true
}

// HasSlackConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasSlackConfigs() bool {
	if o != nil && !IsNil(o.SlackConfigs) {
		return true
	}

	return false
}

// SetSlackConfigs gets a reference to the given []AMReceiverSlack and assigns it to the SlackConfigs field.
func (o *AlertManagerReceiver) SetSlackConfigs(v []AMReceiverSlack) {
	o.SlackConfigs = v
}

// GetSnsConfigs returns the SnsConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetSnsConfigs() []AMReceiverSNS {
	if o == nil || IsNil(o.SnsConfigs) {
		var ret []AMReceiverSNS
		return ret
	}
	return o.SnsConfigs
}

// GetSnsConfigsOk returns a tuple with the SnsConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetSnsConfigsOk() ([]AMReceiverSNS, bool) {
	if o == nil || IsNil(o.SnsConfigs) {
		return nil, false
	}
	return o.SnsConfigs, true
}

// HasSnsConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasSnsConfigs() bool {
	if o != nil && !IsNil(o.SnsConfigs) {
		return true
	}

	return false
}

// SetSnsConfigs gets a reference to the given []AMReceiverSNS and assigns it to the SnsConfigs field.
func (o *AlertManagerReceiver) SetSnsConfigs(v []AMReceiverSNS) {
	o.SnsConfigs = v
}

// GetVictoropsConfigs returns the VictoropsConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetVictoropsConfigs() []AMReceiverVictorOps {
	if o == nil || IsNil(o.VictoropsConfigs) {
		var ret []AMReceiverVictorOps
		return ret
	}
	return o.VictoropsConfigs
}

// GetVictoropsConfigsOk returns a tuple with the VictoropsConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetVictoropsConfigsOk() ([]AMReceiverVictorOps, bool) {
	if o == nil || IsNil(o.VictoropsConfigs) {
		return nil, false
	}
	return o.VictoropsConfigs, true
}

// HasVictoropsConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasVictoropsConfigs() bool {
	if o != nil && !IsNil(o.VictoropsConfigs) {
		return true
	}

	return false
}

// SetVictoropsConfigs gets a reference to the given []AMReceiverVictorOps and assigns it to the VictoropsConfigs field.
func (o *AlertManagerReceiver) SetVictoropsConfigs(v []AMReceiverVictorOps) {
	o.VictoropsConfigs = v
}

// GetWebhookConfigs returns the WebhookConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetWebhookConfigs() []AMReceiverWebhook {
	if o == nil || IsNil(o.WebhookConfigs) {
		var ret []AMReceiverWebhook
		return ret
	}
	return o.WebhookConfigs
}

// GetWebhookConfigsOk returns a tuple with the WebhookConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetWebhookConfigsOk() ([]AMReceiverWebhook, bool) {
	if o == nil || IsNil(o.WebhookConfigs) {
		return nil, false
	}
	return o.WebhookConfigs, true
}

// HasWebhookConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasWebhookConfigs() bool {
	if o != nil && !IsNil(o.WebhookConfigs) {
		return true
	}

	return false
}

// SetWebhookConfigs gets a reference to the given []AMReceiverWebhook and assigns it to the WebhookConfigs field.
func (o *AlertManagerReceiver) SetWebhookConfigs(v []AMReceiverWebhook) {
	o.WebhookConfigs = v
}

// GetWechatConfigs returns the WechatConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetWechatConfigs() []AMReceiverWebhook {
	if o == nil || IsNil(o.WechatConfigs) {
		var ret []AMReceiverWebhook
		return ret
	}
	return o.WechatConfigs
}

// GetWechatConfigsOk returns a tuple with the WechatConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetWechatConfigsOk() ([]AMReceiverWebhook, bool) {
	if o == nil || IsNil(o.WechatConfigs) {
		return nil, false
	}
	return o.WechatConfigs, true
}

// HasWechatConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasWechatConfigs() bool {
	if o != nil && !IsNil(o.WechatConfigs) {
		return true
	}

	return false
}

// SetWechatConfigs gets a reference to the given []AMReceiverWebhook and assigns it to the WechatConfigs field.
func (o *AlertManagerReceiver) SetWechatConfigs(v []AMReceiverWebhook) {
	o.WechatConfigs = v
}

// GetTelegramConfigs returns the TelegramConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetTelegramConfigs() []AMReceiverWebhook {
	if o == nil || IsNil(o.TelegramConfigs) {
		var ret []AMReceiverWebhook
		return ret
	}
	return o.TelegramConfigs
}

// GetTelegramConfigsOk returns a tuple with the TelegramConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetTelegramConfigsOk() ([]AMReceiverWebhook, bool) {
	if o == nil || IsNil(o.TelegramConfigs) {
		return nil, false
	}
	return o.TelegramConfigs, true
}

// HasTelegramConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasTelegramConfigs() bool {
	if o != nil && !IsNil(o.TelegramConfigs) {
		return true
	}

	return false
}

// SetTelegramConfigs gets a reference to the given []AMReceiverWebhook and assigns it to the TelegramConfigs field.
func (o *AlertManagerReceiver) SetTelegramConfigs(v []AMReceiverWebhook) {
	o.TelegramConfigs = v
}

// GetWebexConfigs returns the WebexConfigs field value if set, zero value otherwise.
func (o *AlertManagerReceiver) GetWebexConfigs() []AMReceiverWebhook {
	if o == nil || IsNil(o.WebexConfigs) {
		var ret []AMReceiverWebhook
		return ret
	}
	return o.WebexConfigs
}

// GetWebexConfigsOk returns a tuple with the WebexConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerReceiver) GetWebexConfigsOk() ([]AMReceiverWebhook, bool) {
	if o == nil || IsNil(o.WebexConfigs) {
		return nil, false
	}
	return o.WebexConfigs, true
}

// HasWebexConfigs returns a boolean if a field has been set.
func (o *AlertManagerReceiver) HasWebexConfigs() bool {
	if o != nil && !IsNil(o.WebexConfigs) {
		return true
	}

	return false
}

// SetWebexConfigs gets a reference to the given []AMReceiverWebhook and assigns it to the WebexConfigs field.
func (o *AlertManagerReceiver) SetWebexConfigs(v []AMReceiverWebhook) {
	o.WebexConfigs = v
}

func (o AlertManagerReceiver) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertManagerReceiver) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.EmailConfigs) {
		toSerialize["email_configs"] = o.EmailConfigs
	}
	if !IsNil(o.OpsgenieConfigs) {
		toSerialize["opsgenie_configs"] = o.OpsgenieConfigs
	}
	if !IsNil(o.PagerdutyConfigs) {
		toSerialize["pagerduty_configs"] = o.PagerdutyConfigs
	}
	if !IsNil(o.PushoverConfigs) {
		toSerialize["pushover_configs"] = o.PushoverConfigs
	}
	if !IsNil(o.SlackConfigs) {
		toSerialize["slack_configs"] = o.SlackConfigs
	}
	if !IsNil(o.SnsConfigs) {
		toSerialize["sns_configs"] = o.SnsConfigs
	}
	if !IsNil(o.VictoropsConfigs) {
		toSerialize["victorops_configs"] = o.VictoropsConfigs
	}
	if !IsNil(o.WebhookConfigs) {
		toSerialize["webhook_configs"] = o.WebhookConfigs
	}
	if !IsNil(o.WechatConfigs) {
		toSerialize["wechat_configs"] = o.WechatConfigs
	}
	if !IsNil(o.TelegramConfigs) {
		toSerialize["telegram_configs"] = o.TelegramConfigs
	}
	if !IsNil(o.WebexConfigs) {
		toSerialize["webex_configs"] = o.WebexConfigs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AlertManagerReceiver) UnmarshalJSON(data []byte) (err error) {
	varAlertManagerReceiver := _AlertManagerReceiver{}

	err = json.Unmarshal(data, &varAlertManagerReceiver)

	if err != nil {
		return err
	}

	*o = AlertManagerReceiver(varAlertManagerReceiver)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "email_configs")
		delete(additionalProperties, "opsgenie_configs")
		delete(additionalProperties, "pagerduty_configs")
		delete(additionalProperties, "pushover_configs")
		delete(additionalProperties, "slack_configs")
		delete(additionalProperties, "sns_configs")
		delete(additionalProperties, "victorops_configs")
		delete(additionalProperties, "webhook_configs")
		delete(additionalProperties, "wechat_configs")
		delete(additionalProperties, "telegram_configs")
		delete(additionalProperties, "webex_configs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAlertManagerReceiver struct {
	value *AlertManagerReceiver
	isSet bool
}

func (v NullableAlertManagerReceiver) Get() *AlertManagerReceiver {
	return v.value
}

func (v *NullableAlertManagerReceiver) Set(val *AlertManagerReceiver) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertManagerReceiver) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertManagerReceiver) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertManagerReceiver(val *AlertManagerReceiver) *NullableAlertManagerReceiver {
	return &NullableAlertManagerReceiver{value: val, isSet: true}
}

func (v NullableAlertManagerReceiver) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertManagerReceiver) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
