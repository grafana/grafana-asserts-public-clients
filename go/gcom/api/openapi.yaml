openapi: 3.1.0
info:
  contact:
    email: support@asserts.ai
    name: Support
    url: https://www.grafana.com
  description: Asserts Public API
  termsOfService: https://www.asserts.ai/terms-of-service
  title: "Asserts, Inc"
  version: 2025.08.25-143403
servers:
- description: Generated server url
  url: http://localhost:8030/asserts/api-server
tags:
- description: APIs for managing custom model rule configurations
  name: Custom Model Rules Configuration
- description: APIs for managing alert configurations
  name: Alert Configuration
paths:
  /v2/stack:
    put:
      operationId: putV2Stack
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - stack-controller
  /v2/stack/dataset:
    put:
      operationId: updateDataset
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackDatasetDto'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DatasetSanityChecksDto'
          description: OK
      tags:
      - stack-controller
  /v2/config/relabel-rules/prologue:
    delete:
      operationId: deletePrologueRelabelRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - mimir-relabel-rules-config-controller
    get:
      operationId: getPrologueRelabelRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
          description: OK
      tags:
      - mimir-relabel-rules-config-controller
    put:
      operationId: putMimirPrologueRelabelRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - mimir-relabel-rules-config-controller
  /v2/config/relabel-rules/epilogue:
    delete:
      operationId: deleteEpilogueRelabelRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - mimir-relabel-rules-config-controller
    get:
      operationId: getEpilogueRelabelRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
          description: OK
      tags:
      - mimir-relabel-rules-config-controller
    put:
      operationId: putMimirEpilogueRelabelRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - mimir-relabel-rules-config-controller
  /v1/stack:
    get:
      operationId: getStackDetail
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackDetailDto'
          description: OK
      tags:
      - stack-controller
    post:
      operationId: createStack
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - stack-controller
    put:
      operationId: updateStack
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - stack-controller
  /v1/search/definition/{id}:
    delete:
      operationId: deleteSearchDefinition
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - search-definition-controller
    get:
      operationId: getSearchDefinition
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDefinitionDto'
          description: OK
      tags:
      - search-definition-controller
    put:
      operationId: updateSearchDefinition
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDefinitionDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDefinitionDto'
          description: OK
      tags:
      - search-definition-controller
  /v1/product/activation:
    put:
      operationId: upsertProductActivation
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductActivationDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - product-activation-controller
  /v1/config/prom-rules:
    get:
      operationId: listPromRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleNamesDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/RuleNamesDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RuleNamesDto'
          description: OK
      tags:
      - prom-rules-config-controller
    put:
      operationId: putPromRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusRulesDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/PrometheusRulesDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PrometheusRulesDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - prom-rules-config-controller
  /v1/config/model-rules:
    get:
      description: Retrieves a list of all available model rule configuration names
        for the current tenant.
      operationId: listModelRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRuleNamesDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ModelRuleNamesDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ModelRuleNamesDto'
          description: Successfully retrieved list of model rule names
      summary: List all model rule names
      tags:
      - Custom Model Rules Configuration
    put:
      description: Creates or updates model rules using the name specified in the
        request body.
      operationId: putModelRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRulesDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/ModelRulesDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ModelRulesDto'
        required: true
      responses:
        "200":
          description: Successfully created or updated model rules
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid request data or validation failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create or update model rules
      tags:
      - Custom Model Rules Configuration
  /v1/config/model-rules/{name}:
    delete:
      description: Permanently deletes a specific model rules configuration by its
        name.
      operationId: deleteModelRules
      parameters:
      - description: The name of the model rules configuration to delete
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "204":
          description: Successfully deleted model rules
      summary: Delete model rules by name
      tags:
      - Custom Model Rules Configuration
    get:
      description: Retrieves a specific model rules configuration by its name.
      operationId: getModelRules
      parameters:
      - description: The name of the model rules configuration to retrieve
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRulesDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ModelRulesDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ModelRulesDto'
          description: Successfully retrieved model rules
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRulesDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ModelRulesDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ModelRulesDto'
          description: Model rules not found
      summary: Get model rules by name
      tags:
      - Custom Model Rules Configuration
    put:
      description: "Creates or updates model rules with a specific name. If the dto\
        \ also contains a name, it will be used instead (save as operation)."
      operationId: putModelRules_1
      parameters:
      - description: The name of the model rules configuration
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRulesDto'
        required: true
      responses:
        "200":
          description: Successfully created or updated model rules
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid request data or validation failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create or update model rules by name
      tags:
      - Custom Model Rules Configuration
  /v1/config/model-mapping/{name}:
    delete:
      operationId: delete
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - model-mapping-controller
    get:
      operationId: get
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMappingDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ModelMappingDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ModelMappingDto'
          description: OK
      tags:
      - model-mapping-controller
    put:
      operationId: put
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "([a-zA-Z_0-9]|-)+"
          type: string
        style: simple
      - explode: true
        in: query
        name: tagging
        required: false
        schema:
          type: boolean
        style: form
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelMappingDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/ModelMappingDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ModelMappingDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - model-mapping-controller
  /v2/stack/enable:
    post:
      operationId: enableV2Stack
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsSanityChecksDto'
          description: OK
      tags:
      - stack-controller
  /v2/stack/datasets/auto-setup:
    post:
      operationId: detectAndAutoConfigureDatasets
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  enum:
                  - kubernetes
                  - prometheus
                  - otel
                  - aws
                  - custom
                  type: string
                type: array
                uniqueItems: true
          description: OK
      tags:
      - stack-controller
  /v2/latency-thresholds:
    post:
      operationId: getLatencyThresholds
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/EntityKeyDto'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LatencyThresholdsDto'
                type: array
          description: OK
      tags:
      - latency-threshold-controller
  /v2/config/thresholds:
    get:
      operationId: getThresholds
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThresholdsV2Dto'
          description: OK
      tags:
      - thresholds-v-2-config-controller
    post:
      operationId: updateAllThresholds
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThresholdsV2Dto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - thresholds-v-2-config-controller
  /v2/config/thresholds/resource:
    post:
      operationId: updateResourceThresholds
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ResourceThresholdV2Dto'
              type: array
        required: true
      responses:
        "200":
          description: OK
      tags:
      - thresholds-v-2-config-controller
  /v2/config/thresholds/request:
    post:
      operationId: updateRequestThresholds
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RequestThresholdV2Dto'
              type: array
        required: true
      responses:
        "200":
          description: OK
      tags:
      - thresholds-v-2-config-controller
  /v2/config/thresholds/health:
    post:
      operationId: updateHealthThresholds
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/HealthThresholdV2Dto'
              type: array
        required: true
      responses:
        "200":
          description: OK
      tags:
      - thresholds-v-2-config-controller
  /v2/config/log:
    get:
      description: Retrieves all the log drilldown configuration entries for the tenant
      operationId: getTenantLogConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantLogConfigResponseDto'
          description: Successfully retrieved log configuration
      summary: Get tenant log configuration
      tags:
      - log-drilldown-config-controller
    post:
      description: Creates or updates the log drilldown configuration entry for the
        tenant
      operationId: upsertLogDrilldownConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogDrilldownConfigDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/LogDrilldownConfigDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LogDrilldownConfigDto'
        required: true
      responses:
        "200":
          description: Configuration upserted successfully
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid configuration data
      summary: Upsert log drilldown configuration
      tags:
      - log-drilldown-config-controller
  /v1/validate/prometheus-query:
    post:
      operationId: validatePromQL
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      tags:
      - prom-ql-validation-controller
  /v1/stack/status/{status}:
    post:
      operationId: updateStatus
      parameters:
      - explode: false
        in: path
        name: status
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackStatusDto'
          description: OK
      tags:
      - stack-controller
  /v1/stack/enable:
    get:
      operationId: getStackEnable
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackEnableDto'
          description: OK
      tags:
      - stack-controller
    post:
      operationId: enableStack
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackEnableDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackStatusDto'
          description: OK
      tags:
      - stack-controller
  /v1/stack/disable:
    post:
      operationId: disableStack
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - stack-controller
  /v1/stack-info:
    get:
      deprecated: true
      operationId: getStackInfos
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackInfosDto'
          description: OK
      tags:
      - stack-info-controller
    post:
      deprecated: true
      operationId: upsertStackInfo
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackInfoDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackInfoDto'
          description: OK
      tags:
      - stack-info-controller
  /v1/stack-info/{id}/enable:
    post:
      deprecated: true
      operationId: enableStackInfo
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - stack-info-controller
  /v1/stack-info/{id}/disable:
    post:
      deprecated: true
      operationId: disableStackInfo
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - stack-info-controller
  /v1/slo:
    post:
      operationId: getSlos
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SloListRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SloListDto'
          description: OK
      tags:
      - service-level-controller
  /v1/slo/top:
    post:
      operationId: getTopSloTargets
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SloListRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SloListDto'
          description: OK
      tags:
      - service-level-controller
  /v1/slo/incidents:
    post:
      operationId: getSloIncidents
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SloIncidentRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SloIncidentListDto'
          description: OK
      tags:
      - incident-controller
  /v1/slo/chart:
    post:
      operationId: getSloChart
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SloChartRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SloChartResponseDto'
          description: OK
      tags:
      - service-level-controller
  /v1/search:
    post:
      operationId: search
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponseDto'
          description: OK
      tags:
      - search-controller
  /v1/search/definition:
    get:
      operationId: searchDefinitions
      parameters:
      - explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: onlyCustomSearch
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDefinitionResponseDto'
          description: OK
      tags:
      - search-definition-controller
    post:
      operationId: createSearchDefinition
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDefinitionDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDefinitionDto'
          description: OK
      tags:
      - search-definition-controller
  /v1/search/assertions:
    post:
      operationId: searchAssertions
      parameters:
      - explode: true
        in: query
        name: withFilters
        required: false
        schema:
          type: boolean
        style: form
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionSearchRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      tags:
      - entity-assertions-controller
  /v1/search/assertions/summary:
    post:
      operationId: searchAssertionsSummary
      parameters:
      - explode: true
        in: query
        name: withRCA
        required: false
        schema:
          type: boolean
        style: form
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionSearchRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAssertionSummariesDto'
          description: OK
      tags:
      - entity-assertions-controller
  /v1/search/assertions/llm-summary:
    post:
      operationId: getLlmRcaSummary
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LlmRcaSummarySearchReqDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LlmRcaSummariesDto'
          description: OK
      tags:
      - llm-rca-controller
  /v1/patterns/search:
    post:
      operationId: search_1
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RcaPatternSearchRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RcaPatternSearchResponseDto'
          description: OK
      tags:
      - rca-pattern-controller
  /v1/patterns/list:
    post:
      operationId: list
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RcaPatternListRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      tags:
      - rca-pattern-controller
  /v1/monitoring-status/for-entities:
    post:
      operationId: getEntityMonitoringStatus
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringStatusRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringStatusResponseDto'
          description: OK
      tags:
      - monitoring-status-controller
  /v1/logging/external:
    post:
      operationId: buildExternalLoggingUrl
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalLoggingRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLoggingResponseDto'
          description: OK
      tags:
      - external-logging-controller
  /v1/latency-thresholds:
    post:
      operationId: getLatencyThresholds_1
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityKeyDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LatencyThresholdDto'
                type: array
          description: OK
      tags:
      - latency-threshold-controller
  /v1/kpi/summary/for-entities/{kpi_name}:
    post:
      operationId: getKpiSummary
      parameters:
      - explode: false
        in: path
        name: kpi_name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KpiSummaryRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/GraphEntityKpiValue'
          description: OK
      tags:
      - entity-kpi-controller
  /v1/integration/trace:
    post:
      operationId: buildTraceUrl
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceIntegrationRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceIntegrationResponseDto'
          description: OK
      tags:
      - trace-controller
  /v1/incidents:
    post:
      operationId: getIncidents
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentGroupListDto'
          description: OK
      tags:
      - incident-controller
  /v1/incidents/top:
    post:
      operationId: getTopIncidents
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSummaryListDto'
          description: OK
      tags:
      - incident-controller
  /v1/entity_type/count:
    post:
      operationId: getCountByEntityType
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityCountRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int64
                  type: integer
          description: OK
      tags:
      - entity-type-controller
  /v1/entity_scope:
    get:
      operationId: getAllEntityScopes
      parameters:
      - explode: true
        in: query
        name: start
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityScopesResponseDto'
          description: OK
      tags:
      - entity-scope-controller
    post:
      operationId: getEntityScopes
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityScopesRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityScopesResponseDto'
          description: OK
      tags:
      - entity-scope-controller
  /v1/customer/metric:
    get:
      operationId: getAllMetrics
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerMetricResponseDto'
          description: OK
      tags:
      - customer-metric-controller
    post:
      operationId: getAllMetrics_1
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerMetricRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerMetricResponseDto'
          description: OK
      tags:
      - customer-metric-controller
  /v1/config/trace:
    get:
      operationId: getTenantTraceEnvConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceEnvConfigResponseDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/TraceEnvConfigResponseDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TraceEnvConfigResponseDto'
          description: OK
      tags:
      - trace-config-controller
    post:
      operationId: upsertTraceEnvConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceEnvConfigDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/TraceEnvConfigDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TraceEnvConfigDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - trace-config-controller
  /v1/config/threshold-rules:
    get:
      operationId: getCustomThresholdRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusRulesDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/PrometheusRulesDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PrometheusRulesDto'
          description: OK
      tags:
      - threshold-rules-config-controller
    post:
      operationId: updateCustomThresholdRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusRulesDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/PrometheusRulesDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PrometheusRulesDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - threshold-rules-config-controller
  /v1/config/threshold-rule:
    post:
      operationId: updateCustomThresholdRule
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusRuleDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - threshold-rules-config-controller
  /v1/config/threshold-rule/delete:
    post:
      operationId: deleteCustomThresholdRule
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusRuleDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - threshold-rules-config-controller
  /v1/config/slo:
    get:
      operationId: getSloConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SloConfigResponseDto'
                type: array
            application/x-yml:
              schema:
                items:
                  $ref: '#/components/schemas/SloConfigResponseDto'
                type: array
            application/x-yaml:
              schema:
                items:
                  $ref: '#/components/schemas/SloConfigResponseDto'
                type: array
          description: OK
      tags:
      - slo-config-controller
    post:
      operationId: postSloConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SloConfigRequestDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/SloConfigRequestDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/SloConfigRequestDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - slo-config-controller
  /v1/config/slo-validate:
    post:
      operationId: validate
      parameters:
      - explode: true
        in: query
        name: start
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SloConfigRequestDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/SloConfigRequestDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/SloConfigRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
          description: OK
      tags:
      - slo-config-controller
  /v1/config/slo-generate-rules:
    post:
      operationId: regenerateSloRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - slo-config-controller
  /v1/config/prom-rules/{name}:
    delete:
      operationId: deletePromRules
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - prom-rules-config-controller
    get:
      operationId: getPromRules
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusRulesDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/PrometheusRulesDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PrometheusRulesDto'
          description: OK
      tags:
      - prom-rules-config-controller
    post:
      operationId: updateRule
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusRuleDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/PrometheusRuleDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PrometheusRuleDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - prom-rules-config-controller
  /v1/config/prom-rules/{name}/delete:
    post:
      operationId: deleteRule
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusRuleDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/PrometheusRuleDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PrometheusRuleDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - prom-rules-config-controller
  /v1/config/prom-rules/generate:
    post:
      operationId: generateRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/x-yml:
            schema:
              $ref: '#/components/schemas/RuleGenerationRequestDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RuleGenerationRequestDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RuleGenerationRequestDto'
        required: true
      responses:
        "200":
          content:
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RuleGenerationResponseDto'
          description: OK
      tags:
      - recording-rule-controller
  /v1/config/prom-rules-validate:
    post:
      operationId: submitValidation
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrometheusRulesDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/PrometheusRulesDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PrometheusRulesDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
          description: OK
      tags:
      - prom-rules-config-controller
  /v1/config/prom-rules-enable/{name}:
    post:
      operationId: enableRule
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - prom-rules-config-controller
  /v1/config/prom-rules-disable/{name}:
    post:
      operationId: disableRule
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - prom-rules-config-controller
  /v1/config/otel-collector:
    delete:
      operationId: deleteOtelCollectorConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - otel-config-controller
    get:
      operationId: getOtelCollectorConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtelCollectorConfigDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/OtelCollectorConfigDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OtelCollectorConfigDto'
          description: OK
      tags:
      - otel-config-controller
    post:
      operationId: updateOtelCollectorConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtelCollectorConfigDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/OtelCollectorConfigDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/OtelCollectorConfigDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - otel-config-controller
  /v1/config/import:
    post:
      operationId: importConfigurations
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/x-yml:
            schema:
              additionalProperties:
                additionalProperties:
                  type: string
          application/x-yaml:
            schema:
              additionalProperties:
                additionalProperties:
                  type: string
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigImportResultDto'
          description: OK
      tags:
      - config-export-import-controller
  /v1/config/environment:
    get:
      operationId: getTenantEnvConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantEnvConfigResponseDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/TenantEnvConfigResponseDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TenantEnvConfigResponseDto'
          description: OK
      tags:
      - log-config-controller
    post:
      operationId: upsertEnvironmentConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/EnvironmentDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/EnvironmentDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - log-config-controller
  /v1/config/display/kpi:
    get:
      operationId: getKpiViewConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KpiDisplayConfigDto'
          description: OK
      tags:
      - kpi-display-config-controller
    post:
      operationId: putKpiViewConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KpiDisplayConfigDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - kpi-display-config-controller
  /v1/config/display/graph:
    get:
      operationId: getGraphDisplayConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphDisplayConfigDto'
          description: OK
      tags:
      - graph-display-config-controller
    post:
      operationId: putGraphDisplayConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphDisplayConfigDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - graph-display-config-controller
  /v1/config/disabled-alerts:
    get:
      description: Retrieves a list of all currently disabled alert configurations
        for the tenant.
      operationId: getAllDisabledAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledAlertConfigsDto'
          description: Successfully retrieved configurations
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get all disabled alert configurations
      tags:
      - Alert Configuration
    post:
      description: Creates or updates a batch of disabled alert configurations.
      operationId: putDisabledAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisabledAlertConfigsDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/DisabledAlertConfigsDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/DisabledAlertConfigsDto'
        required: true
      responses:
        "200":
          description: Alerts disabled successfully
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid configuration file provided
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Disable multiple alert configurations
      tags:
      - Alert Configuration
  /v1/config/disabled-alert:
    post:
      description: "Creates a new disabled alert configuration, effectively silencing\
        \ it."
      operationId: putDisabledAlertConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisabledAlertConfigDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/DisabledAlertConfigDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/DisabledAlertConfigDto'
        required: true
      responses:
        "200":
          description: Alert disabled successfully
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid configuration provided
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Disable a single alert configuration
      tags:
      - Alert Configuration
  /v1/config/dashboard/{entity_type}:
    get:
      operationId: getCustomDashConfig
      parameters:
      - explode: false
        in: path
        name: entity_type
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDashConfigsDto'
          description: OK
      tags:
      - custom-dash-config-controller
    post:
      operationId: updateCustomDashConfig
      parameters:
      - explode: false
        in: path
        name: entity_type
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDashConfigDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - custom-dash-config-controller
  /v1/config/dashboard/delete/{entity_type}:
    post:
      operationId: deleteCustomDashConfig
      parameters:
      - explode: false
        in: path
        name: entity_type
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDashConfigDto'
        required: true
      responses:
        "200":
          description: OK
      tags:
      - custom-dash-config-controller
  /v1/config/alerts:
    get:
      description: Retrieves a list of all alert configurations for the tenant.
      operationId: getAllAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfigsDto'
          description: Successfully retrieved alert configurations
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get all alert configurations
      tags:
      - Alert Configuration
    post:
      description: Creates or updates a batch of alert configurations.
      operationId: putAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertConfigsDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/AlertConfigsDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AlertConfigsDto'
        required: true
      responses:
        "200":
          description: Alert configurations saved successfully
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid alert configuration file provided
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create or update multiple alert configurations
      tags:
      - Alert Configuration
  /v1/config/alertmanager:
    delete:
      operationId: deleteAlertManagerConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - alert-manager-config-controller
    get:
      operationId: getAlertManagerConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertManagerConfig'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/AlertManagerConfig'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AlertManagerConfig'
          description: OK
      tags:
      - alert-manager-config-controller
    post:
      operationId: updateAlertManagerConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertManagerConfig'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/AlertManagerConfig'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AlertManagerConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertManagerConfig'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/AlertManagerConfig'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AlertManagerConfig'
          description: OK
      tags:
      - alert-manager-config-controller
  /v1/config/alert:
    post:
      description: Creates a new alert configuration or updates an existing one based
        on the provided data.
      operationId: putAlertConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertConfigDto'
          application/x-yml:
            schema:
              $ref: '#/components/schemas/AlertConfigDto'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AlertConfigDto'
        required: true
      responses:
        "200":
          description: Alert configuration saved successfully
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid alert configuration provided
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Create or update a single alert configuration
      tags:
      - Alert Configuration
  /v1/assertions:
    post:
      operationId: getAssertions
      parameters:
      - explode: true
        in: query
        name: withFilters
        required: false
        schema:
          type: boolean
        style: form
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionsRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      tags:
      - entity-assertions-controller
  /v1/assertions/summary:
    post:
      operationId: getAssertionsSummary
      parameters:
      - explode: true
        in: query
        name: withRCA
        required: false
        schema:
          type: boolean
        style: form
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionsRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAssertionSummariesDto'
          description: OK
      tags:
      - entity-assertions-controller
  /v1/assertions/search:
    post:
      operationId: search_2
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionSearchRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntityKeyDto'
                type: array
          description: OK
      tags:
      - assertion-search-controller
  /v1/assertions/llm-summary:
    post:
      operationId: getLlmRcaSummary_1
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LlmRcaSummaryReqDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LlmRcaSummariesDto'
          description: OK
      tags:
      - llm-rca-controller
  /v1/assertions/graph:
    post:
      operationId: getEntityAssertionsGraph
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionsRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAssertionsGraphDto'
          description: OK
      tags:
      - entity-assertions-controller
  /v1/assertions/entity-metric:
    post:
      operationId: entityAssertionsDetails
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityAssertionMetricRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAssertionDetailsDto'
          description: OK
      tags:
      - entity-assertions-controller
  /v1/assertion_scores:
    post:
      operationId: getAssertionScores
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionScoreRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionScoresDto'
          description: OK
      tags:
      - assertion-score-controller
  /v1/assertion_scores/top_entities:
    post:
      operationId: getTopNAssertingEntities
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionScoreRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntityKeyDto'
                type: array
          description: OK
      tags:
      - assertion-score-controller
  /v1/assertion_scores/search:
    post:
      operationId: getAssertionScoresFromSearch
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionSearchRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionScoresDto'
          description: OK
      tags:
      - assertion-score-controller
  /v1/assertion/{name}/info:
    get:
      deprecated: true
      operationId: getAssertionInfo
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionInfoDto'
          description: OK
      tags:
      - assertion-info-controller
    post:
      operationId: getAssertionInfo_1
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionInfoRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionInfoDto'
          description: OK
      tags:
      - assertion-info-controller
  /v1/assertion/affected-entity-names:
    post:
      operationId: getAssertionEntityNames
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityAssertionMetricRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffectedEntityNamesDto'
          description: OK
      tags:
      - entity-assertions-controller
  /v1/assertion/affected-entities:
    post:
      operationId: getAssertionAffectedEntities
      parameters:
      - $ref: '#/components/parameters/TenantId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityAssertionMetricRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffectedEntityDetailsDto'
          description: OK
      tags:
      - entity-assertions-controller
  /v5/prometheus/rules:
    get:
      operationId: getAllRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllRulesDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/AllRulesDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AllRulesDto'
          description: OK
      tags:
      - rules-controller
  /v2/stack/datasets:
    get:
      operationId: getDatasets
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsDto'
          description: OK
      tags:
      - stack-controller
  /v2/stack/dataset/{dataset}:
    get:
      operationId: fetchDataset
      parameters:
      - explode: false
        in: path
        name: dataset
        required: true
        schema:
          enum:
          - kubernetes
          - prometheus
          - otel
          - aws
          - custom
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackDatasetDto'
          description: OK
      tags:
      - stack-controller
  /v2/stack/dataset/{dataset}/vendors:
    get:
      operationId: getDatasetVendors
      parameters:
      - explode: false
        in: path
        name: dataset
        required: true
        schema:
          enum:
          - kubernetes
          - prometheus
          - otel
          - aws
          - custom
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetVendorsDto'
          description: OK
      tags:
      - stack-controller
  /v2/stack/dataset/{dataset}/sanity:
    get:
      operationId: runDatasetSanityChecks
      parameters:
      - explode: false
        in: path
        name: dataset
        required: true
        schema:
          enum:
          - kubernetes
          - prometheus
          - otel
          - aws
          - custom
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSanityChecksDto'
          description: OK
      tags:
      - stack-controller
  /v2/config/relabel-rules/generated:
    get:
      operationId: getGeneratedRelabelRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MimirRelabelRuleGroupDto'
          description: OK
      tags:
      - mimir-relabel-rules-config-controller
  /v1/version/ui:
    get:
      deprecated: true
      operationId: jarvisVersion
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionDto'
          description: OK
      tags:
      - version-controller
  /v1/vendor-names:
    get:
      operationId: getVendorNames
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorNamesDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/VendorNamesDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VendorNamesDto'
          description: OK
      tags:
      - prom-rules-config-controller
  /v1/stack/vendor-integration:
    get:
      operationId: discoverVendorsForCurrentTenant
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorIntegrationsDto'
          description: OK
      tags:
      - stack-controller
  /v1/stack/update-bucket:
    get:
      operationId: getStackUpdateBucket
      parameters:
      - explode: true
        in: query
        name: timestamp
        required: false
        schema:
          type: string
        style: form
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackUpdateBucketDto'
          description: OK
      tags:
      - stack-controller
  /v1/stack/status:
    get:
      operationId: getStatus
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackStatusDto'
          description: OK
      tags:
      - stack-controller
  /v1/stack/sanity:
    get:
      operationId: runMetricSanityChecks
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSanityCheckDto'
          description: OK
      tags:
      - stack-controller
  /v1/stack-info/{id}:
    delete:
      deprecated: true
      operationId: deleteStackInfo
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - stack-info-controller
    get:
      deprecated: true
      operationId: getStackInfo
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackInfoDto'
          description: OK
      tags:
      - stack-info-controller
  /v1/search/autocomplete/{index}:
    get:
      operationId: autoComplete
      parameters:
      - explode: false
        in: path
        name: index
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fuzzy
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoCompleteResponseDto'
          description: OK
      tags:
      - auto-complete-controller
  /v1/prometheus/alertmanager:
    get:
      operationId: getVersionAlertManagerConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedAlertManagerPayload'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/VersionedAlertManagerPayload'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/VersionedAlertManagerPayload'
          description: OK
      tags:
      - alert-manager-versioned-config-controller
  /v1/kpi/list:
    get:
      operationId: getKpisByEntityType
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiListDto'
          description: OK
      tags:
      - entity-kpi-controller
  /v1/entity_type:
    get:
      operationId: getAll
      parameters:
      - explode: true
        in: query
        name: instant
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: start
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTypesDto'
          description: OK
      tags:
      - entity-type-controller
  /v1/entity_type/{type}:
    get:
      operationId: getEntityType
      parameters:
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTypeDto'
          description: OK
      tags:
      - entity-type-controller
  /v1/entity:
    get:
      operationId: lookupEntityFromAlertLabels
      parameters:
      - explode: true
        in: query
        name: env
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: site
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: requestParams
        required: true
        schema:
          additionalProperties:
            type: string
        style: form
      - explode: true
        in: query
        name: start
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GraphEntity'
          description: OK
      tags:
      - entity-controller
  /v1/entity/info:
    get:
      operationId: getEntity
      parameters:
      - explode: true
        in: query
        name: entity_type
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: entity_name
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: env
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: site
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: start
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GraphEntity'
          description: OK
      tags:
      - entity-controller
  /v1/customer/metric/hosted:
    get:
      operationId: getRuleMetrics
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSetsDto'
          description: OK
      tags:
      - customer-metric-controller
  /v1/customer/metric/client:
    get:
      operationId: getClientMetrics
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSetsDto'
          description: OK
      tags:
      - customer-metric-controller
  /v1/config/types:
    get:
      operationId: getSupportedConfigTypes
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                uniqueItems: true
          description: OK
      tags:
      - config-export-import-controller
  /v1/config/threshold-rules/resource:
    get:
      operationId: getResourceThresholdRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThresholdRulesDto'
          description: OK
      tags:
      - threshold-rules-config-controller
  /v1/config/threshold-rules/request:
    get:
      operationId: getRequestThresholdRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThresholdRulesDto'
          description: OK
      tags:
      - threshold-rules-config-controller
  /v1/config/slo/{name}:
    delete:
      operationId: deleteSloConfig
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - slo-config-controller
    get:
      operationId: getSloConfig
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SloConfigResponseDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/SloConfigResponseDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/SloConfigResponseDto'
          description: OK
      tags:
      - slo-config-controller
  /v1/config/prom-rules-validate/{id}:
    delete:
      operationId: abortValidation
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
          description: OK
      tags:
      - prom-rules-config-controller
    get:
      operationId: getValidation
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ConfigValidationResponseDto'
          description: OK
      tags:
      - prom-rules-config-controller
  /v1/config/prom-rules-disable:
    get:
      operationId: getDisabledRules
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledRulesDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/DisabledRulesDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/DisabledRulesDto'
          description: OK
      tags:
      - prom-rules-config-controller
  /v1/config/failure-rules:
    get:
      description: Retrieves Prometheus rule groups related to failures. Can be filtered
        for custom or all rules.
      operationId: getFailureRuleGroups
      parameters:
      - description: Set to true to fetch only custom failure rules
        explode: true
        in: query
        name: customFailureRules
        required: false
        schema:
          type: boolean
        style: form
      - description: Set to true to fetch all failure rule groups (custom and default)
        explode: true
        in: query
        name: allFailureRuleGroups
        required: false
        schema:
          type: boolean
        style: form
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusRuleGroupDto'
          description: Successfully retrieved rule groups
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get Prometheus failure rule groups
      tags:
      - Alert Configuration
  /v1/config/export:
    get:
      operationId: exportConfigurations
      parameters:
      - explode: true
        in: query
        name: config_type
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/x-yml:
              schema:
                additionalProperties:
                  additionalProperties: {}
          description: OK
      tags:
      - config-export-import-controller
  /v1/config/disabled-alerts/resource:
    get:
      description: Retrieves disabled alert configurations specifically for resources.
      operationId: getDisabledResourceAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledAlertConfigsDto'
          description: Successfully retrieved configurations
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get disabled resource-based alert configurations
      tags:
      - Alert Configuration
  /v1/config/disabled-alerts/request:
    get:
      description: Retrieves disabled alert configurations specifically for requests.
      operationId: getDisabledRequestAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledAlertConfigsDto'
          description: Successfully retrieved configurations
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get disabled request-based alert configurations
      tags:
      - Alert Configuration
  /v1/config/disabled-alerts/health:
    get:
      description: Retrieves disabled alert configurations related to system health.
      operationId: getDisabledHealthAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledAlertConfigsDto'
          description: Successfully retrieved configurations
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get disabled health-based alert configurations
      tags:
      - Alert Configuration
  /v1/config/datasource/prometheus:
    get:
      operationId: getPromDatasourceDetail
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourcePromDto'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/DataSourcePromDto'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/DataSourcePromDto'
          description: OK
      tags:
      - data-sources-config-controller
  /v1/config/dashboard:
    get:
      operationId: getAllCustomDashConfig
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomKpiDashConfigDto'
          description: OK
      tags:
      - custom-dash-config-controller
  /v1/config/alerts/slo:
    get:
      description: Retrieves alert configurations related to Service Level Objectives.
      operationId: getSloAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfigsDto'
          description: Successfully retrieved SLO alert configurations
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get SLO-based alert configurations
      tags:
      - Alert Configuration
  /v1/config/alerts/resource:
    get:
      description: Retrieves alert configurations specifically for resources.
      operationId: getResourceAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfigsDto'
          description: Successfully retrieved resource alert configurations
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get resource-based alert configurations
      tags:
      - Alert Configuration
  /v1/config/alerts/request:
    get:
      description: Retrieves alert configurations specifically for requests.
      operationId: getRequestAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfigsDto'
          description: Successfully retrieved request alert configurations
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get request-based alert configurations
      tags:
      - Alert Configuration
  /v1/config/alerts/health:
    get:
      description: Retrieves alert configurations related to system health.
      operationId: getHealthAlertConfigs
      parameters:
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfigsDto'
          description: Successfully retrieved health alert configurations
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Get health-based alert configurations
      tags:
      - Alert Configuration
  /v1/assertion/alert-affected-entity:
    get:
      operationId: getAffectedEntity
      parameters:
      - explode: true
        in: query
        name: alertLabels
        required: true
        schema:
          additionalProperties:
            type: string
        style: form
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphEntity'
          description: OK
      tags:
      - alert-entity-controller
  /v2/config/log/{name}:
    delete:
      description: Deletes the specified log drilldown configuration entry for the
        tenant
      operationId: deleteConfig
      parameters:
      - description: Name of the log configuration to delete
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: Configuration deleted successfully
      summary: Delete log drilldown configuration
      tags:
      - log-drilldown-config-controller
  /v1/config/trace/{name}:
    delete:
      operationId: deleteTraceConfig
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - trace-config-controller
  /v1/config/environment/{name}:
    delete:
      operationId: deleteConfig_1
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - log-config-controller
  /v1/config/display/graph/entity_type/{name}:
    delete:
      operationId: deleteGraphEntityDisplayConfig
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - graph-display-config-controller
  /v1/config/display/graph/edge_type/{name}:
    delete:
      operationId: deleteGraphEdgeDisplayConfig
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: OK
      tags:
      - graph-display-config-controller
  /v1/config/disabled-alert/{name}:
    delete:
      description: "Deletes a 'disabled' configuration, which re-enables the alert."
      operationId: deleteDisabledAlertConfig
      parameters:
      - description: The name of the disabled alert to re-enable
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: Alert enabled successfully
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Re-enable an alert configuration by name
      tags:
      - Alert Configuration
  /v1/config/alert/{name}:
    delete:
      description: Deletes a specific alert configuration identified by its name.
      operationId: deleteAlertConfig
      parameters:
      - description: The name of the alert configuration to delete
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/TenantId'
      responses:
        "200":
          description: Alert configuration deleted successfully
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yml:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal server error
      summary: Delete an alert configuration by name
      tags:
      - Alert Configuration
components:
  parameters:
    TenantId:
      description: Grafana Tenant/Stack ID
      example: "2944"
      explode: false
      in: header
      name: X-Scope-OrgID
      required: false
      schema:
        type: string
      style: simple
  schemas:
    StackDto:
      example:
        grafanaToken: grafanaToken
        gcomToken: gcomToken
        mimirToken: mimirToken
        assertionDetectorToken: assertionDetectorToken
      properties:
        gcomToken:
          type: string
        mimirToken:
          type: string
        assertionDetectorToken:
          type: string
        grafanaToken:
          type: string
    StackDatasetDto:
      example:
        disabledVendors:
        - disabledVendors
        - disabledVendors
        datasetType: kubernetes
        filterGroups:
        - envLabelValues:
          - envLabelValues
          - envLabelValues
          siteLabelValues:
          - siteLabelValues
          - siteLabelValues
          envName: envName
          envLabel: envLabel
          filters:
          - values:
            - values
            - values
            name: name
            operator: operator
          - values:
            - values
            - values
            name: name
            operator: operator
          siteLabel: siteLabel
        - envLabelValues:
          - envLabelValues
          - envLabelValues
          siteLabelValues:
          - siteLabelValues
          - siteLabelValues
          envName: envName
          envLabel: envLabel
          filters:
          - values:
            - values
            - values
            name: name
            operator: operator
          - values:
            - values
            - values
            name: name
            operator: operator
          siteLabel: siteLabel
      properties:
        datasetType:
          enum:
          - kubernetes
          - prometheus
          - otel
          - aws
          - custom
          type: string
        disabledVendors:
          items:
            type: string
          type: array
          uniqueItems: true
        filterGroups:
          items:
            $ref: '#/components/schemas/StackFilterGroupDto'
          type: array
      required:
      - datasetType
    StackFilterDto:
      example:
        values:
        - values
        - values
        name: name
        operator: operator
      properties:
        name:
          type: string
        operator:
          type: string
        values:
          items:
            type: string
          type: array
    StackFilterGroupDto:
      example:
        envLabelValues:
        - envLabelValues
        - envLabelValues
        siteLabelValues:
        - siteLabelValues
        - siteLabelValues
        envName: envName
        envLabel: envLabel
        filters:
        - values:
          - values
          - values
          name: name
          operator: operator
        - values:
          - values
          - values
          name: name
          operator: operator
        siteLabel: siteLabel
      properties:
        envLabel:
          type: string
        envName:
          type: string
        siteLabel:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/StackFilterDto'
          type: array
        envLabelValues:
          items:
            type: string
          type: array
        siteLabelValues:
          items:
            type: string
          type: array
    DatasetSanityCheckResultDto:
      example:
        stepResults:
        - troubleshoot: troubleshoot
          warnings:
          - warnings
          - warnings
          name: name
          blockers:
          - blockers
          - blockers
        - troubleshoot: troubleshoot
          warnings:
          - warnings
          - warnings
          name: name
          blockers:
          - blockers
          - blockers
        checkName: checkName
      properties:
        checkName:
          type: string
        stepResults:
          items:
            $ref: '#/components/schemas/DatasetSanityCheckStepResultDto'
          type: array
    DatasetSanityCheckStepResultDto:
      example:
        troubleshoot: troubleshoot
        warnings:
        - warnings
        - warnings
        name: name
        blockers:
        - blockers
        - blockers
      properties:
        name:
          type: string
        troubleshoot:
          type: string
        blockers:
          items:
            type: string
          type: array
        warnings:
          items:
            type: string
          type: array
    DatasetSanityChecksDto:
      example:
        stepResults:
        - stepResults:
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          checkName: checkName
        - stepResults:
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          checkName: checkName
      properties:
        stepResults:
          items:
            $ref: '#/components/schemas/DatasetSanityCheckResultDto'
          type: array
    MimirRelabelRuleDto:
      example:
        drop: true
        join_separator: join_separator
        ranked_choice:
        - ranked_choice
        - ranked_choice
        join_labels:
        - join_labels
        - join_labels
        selector: selector
        transform_arg: transform_arg
        replacement: replacement
        transform_label: transform_label
        transform_operation: transform_operation
        target_label: target_label
      properties:
        selector:
          type: string
        replacement:
          type: string
        drop:
          type: boolean
        join_labels:
          items:
            type: string
          type: array
        join_separator:
          type: string
        ranked_choice:
          items:
            type: string
          type: array
        transform_label:
          type: string
        transform_operation:
          type: string
        transform_arg:
          type: string
        target_label:
          type: string
    MimirRelabelRuleGroupDto:
      example:
        name: name
        selector: selector
        rules:
        - drop: true
          join_separator: join_separator
          ranked_choice:
          - ranked_choice
          - ranked_choice
          join_labels:
          - join_labels
          - join_labels
          selector: selector
          transform_arg: transform_arg
          replacement: replacement
          transform_label: transform_label
          transform_operation: transform_operation
          target_label: target_label
        - drop: true
          join_separator: join_separator
          ranked_choice:
          - ranked_choice
          - ranked_choice
          join_labels:
          - join_labels
          - join_labels
          selector: selector
          transform_arg: transform_arg
          replacement: replacement
          transform_label: transform_label
          transform_operation: transform_operation
          target_label: target_label
        order: 0
      properties:
        name:
          type: string
        order:
          format: int32
          type: integer
        selector:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/MimirRelabelRuleDto'
          type: array
    EntityMatcherDto:
      example:
        connectToEntityTypes:
        - connectToEntityTypes
        - connectToEntityTypes
        havingAssertion: true
        entityType: entityType
        propertyMatchers:
        - op: op
          uom: MB
          name: name
          value: ""
        - op: op
          uom: MB
          name: name
          value: ""
      properties:
        entityType:
          minLength: 1
          type: string
        propertyMatchers:
          items:
            $ref: '#/components/schemas/PropertyMatcherDto'
          type: array
        connectToEntityTypes:
          items:
            type: string
          type: array
          uniqueItems: true
        havingAssertion:
          type: boolean
      required:
      - entityType
    PropertyMatcherDto:
      example:
        op: op
        uom: MB
        name: name
        value: ""
      properties:
        name:
          type: string
        value: {}
        op:
          type: string
        uom:
          enum:
          - MB
          - GB
          - '%'
          type: string
      required:
      - name
      - op
    SearchDefinitionBindingDto:
      example:
        query: query
        subType: subType
        type: type
      properties:
        query:
          type: string
        type:
          type: string
        subType:
          type: string
    SearchDefinitionDto:
      example:
        filterCriteria:
        - connectToEntityTypes:
          - connectToEntityTypes
          - connectToEntityTypes
          havingAssertion: true
          entityType: entityType
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
        - connectToEntityTypes:
          - connectToEntityTypes
          - connectToEntityTypes
          havingAssertion: true
          entityType: entityType
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
        indexed: true
        bindings:
          key:
            query: query
            subType: subType
            type: type
        typeDetails:
          type: type
        description: description
        id: 0
        describedQuery: describedQuery
        rawQuery: rawQuery
      properties:
        id:
          format: int32
          type: integer
        indexed:
          type: boolean
        describedQuery:
          type: string
        description:
          type: string
        rawQuery:
          type: string
        bindings:
          additionalProperties:
            $ref: '#/components/schemas/SearchDefinitionBindingDto'
        typeDetails:
          $ref: '#/components/schemas/SearchDefinitionTypeDetailsDto'
        filterCriteria:
          items:
            $ref: '#/components/schemas/EntityMatcherDto'
          type: array
    SearchDefinitionTypeDetailsDto:
      example:
        type: type
      properties:
        type:
          type: string
    ProductActivationDto:
      example:
        product: appo11y
        enabled: true
      properties:
        product:
          enum:
          - appo11y
          - k8so11y
          type: string
        enabled:
          type: boolean
      required:
      - enabled
      - product
    PrometheusRuleDto:
      example:
        alert: alert
        record: record
        disableInGroups:
        - disableInGroups
        - disableInGroups
        for: for
        active: true
        annotations:
          key: annotations
        expr: expr
        labels:
          key: labels
      properties:
        active:
          type: boolean
        record:
          type: string
        alert:
          type: string
        expr:
          type: string
        annotations:
          additionalProperties:
            type: string
        labels:
          additionalProperties:
            type: string
        disableInGroups:
          items:
            type: string
          type: array
        for:
          type: string
    PrometheusRuleGroupDto:
      example:
        name: name
        interval: interval
        rules:
        - alert: alert
          record: record
          disableInGroups:
          - disableInGroups
          - disableInGroups
          for: for
          active: true
          annotations:
            key: annotations
          expr: expr
          labels:
            key: labels
        - alert: alert
          record: record
          disableInGroups:
          - disableInGroups
          - disableInGroups
          for: for
          active: true
          annotations:
            key: annotations
          expr: expr
          labels:
            key: labels
      properties:
        name:
          type: string
        interval:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/PrometheusRuleDto'
          type: array
    PrometheusRulesDto:
      example:
        name: name
        active: true
        groups:
        - name: name
          interval: interval
          rules:
          - alert: alert
            record: record
            disableInGroups:
            - disableInGroups
            - disableInGroups
            for: for
            active: true
            annotations:
              key: annotations
            expr: expr
            labels:
              key: labels
          - alert: alert
            record: record
            disableInGroups:
            - disableInGroups
            - disableInGroups
            for: for
            active: true
            annotations:
              key: annotations
            expr: expr
            labels:
              key: labels
        - name: name
          interval: interval
          rules:
          - alert: alert
            record: record
            disableInGroups:
            - disableInGroups
            - disableInGroups
            for: for
            active: true
            annotations:
              key: annotations
            expr: expr
            labels:
              key: labels
          - alert: alert
            record: record
            disableInGroups:
            - disableInGroups
            - disableInGroups
            for: for
            active: true
            annotations:
              key: annotations
            expr: expr
            labels:
              key: labels
      properties:
        active:
          type: boolean
        name:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/PrometheusRuleGroupDto'
          type: array
    ApiError:
      example:
        trace_id: trace_id
        span_id: span_id
        requestId: requestId
        debugMessage: debugMessage
        message: message
        status:
          is4xxClientError: true
          is5xxServerError: true
          is2xxSuccessful: true
          error: true
          is3xxRedirection: true
          is1xxInformational: true
        timestamp: 0
        subErrors:
        - message: message
        - message: message
      properties:
        status:
          $ref: '#/components/schemas/ApiError_status'
        requestId:
          type: string
        timestamp:
          format: int64
          type: integer
        message:
          type: string
        debugMessage:
          type: string
        subErrors:
          items:
            $ref: '#/components/schemas/ApiError_subErrors_inner'
          type: array
        trace_id:
          type: string
        span_id:
          type: string
    ApiSubError:
      example:
        message: message
      properties:
        message:
          type: string
    ApiValidationError:
      allOf:
      - $ref: '#/components/schemas/ApiSubError'
      - properties:
          field:
            type: string
          rejectedValue: {}
    DefaultHttpStatusCode:
      allOf:
      - $ref: '#/components/schemas/HttpStatusCode'
      example:
        is4xxClientError: true
        is5xxServerError: true
        is2xxSuccessful: true
        error: true
        is3xxRedirection: true
        is1xxInformational: true
    HttpStatus:
      enum:
      - 100 CONTINUE
      - 101 SWITCHING_PROTOCOLS
      - 102 PROCESSING
      - 103 EARLY_HINTS
      - 103 CHECKPOINT
      - 200 OK
      - 201 CREATED
      - 202 ACCEPTED
      - 203 NON_AUTHORITATIVE_INFORMATION
      - 204 NO_CONTENT
      - 205 RESET_CONTENT
      - 206 PARTIAL_CONTENT
      - 207 MULTI_STATUS
      - 208 ALREADY_REPORTED
      - 226 IM_USED
      - 300 MULTIPLE_CHOICES
      - 301 MOVED_PERMANENTLY
      - 302 FOUND
      - 302 MOVED_TEMPORARILY
      - 303 SEE_OTHER
      - 304 NOT_MODIFIED
      - 305 USE_PROXY
      - 307 TEMPORARY_REDIRECT
      - 308 PERMANENT_REDIRECT
      - 400 BAD_REQUEST
      - 401 UNAUTHORIZED
      - 402 PAYMENT_REQUIRED
      - 403 FORBIDDEN
      - 404 NOT_FOUND
      - 405 METHOD_NOT_ALLOWED
      - 406 NOT_ACCEPTABLE
      - 407 PROXY_AUTHENTICATION_REQUIRED
      - 408 REQUEST_TIMEOUT
      - 409 CONFLICT
      - 410 GONE
      - 411 LENGTH_REQUIRED
      - 412 PRECONDITION_FAILED
      - 413 PAYLOAD_TOO_LARGE
      - 413 REQUEST_ENTITY_TOO_LARGE
      - 414 URI_TOO_LONG
      - 414 REQUEST_URI_TOO_LONG
      - 415 UNSUPPORTED_MEDIA_TYPE
      - 416 REQUESTED_RANGE_NOT_SATISFIABLE
      - 417 EXPECTATION_FAILED
      - 418 I_AM_A_TEAPOT
      - 419 INSUFFICIENT_SPACE_ON_RESOURCE
      - 420 METHOD_FAILURE
      - 421 DESTINATION_LOCKED
      - 422 UNPROCESSABLE_ENTITY
      - 423 LOCKED
      - 424 FAILED_DEPENDENCY
      - 425 TOO_EARLY
      - 426 UPGRADE_REQUIRED
      - 428 PRECONDITION_REQUIRED
      - 429 TOO_MANY_REQUESTS
      - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
      - 451 UNAVAILABLE_FOR_LEGAL_REASONS
      - 500 INTERNAL_SERVER_ERROR
      - 501 NOT_IMPLEMENTED
      - 502 BAD_GATEWAY
      - 503 SERVICE_UNAVAILABLE
      - 504 GATEWAY_TIMEOUT
      - 505 HTTP_VERSION_NOT_SUPPORTED
      - 506 VARIANT_ALSO_NEGOTIATES
      - 507 INSUFFICIENT_STORAGE
      - 508 LOOP_DETECTED
      - 509 BANDWIDTH_LIMIT_EXCEEDED
      - 510 NOT_EXTENDED
      - 511 NETWORK_AUTHENTICATION_REQUIRED
      type: string
    HttpStatusCode:
      properties:
        error:
          type: boolean
        is4xxClientError:
          type: boolean
        is5xxServerError:
          type: boolean
        is2xxSuccessful:
          type: boolean
        is1xxInformational:
          type: boolean
        is3xxRedirection:
          type: boolean
    DefinedByDto:
      discriminator:
        propertyName: source
      properties:
        staticProperties:
          additionalProperties: {}
        source:
          type: string
      required:
      - source
    DefinedByMetricsDto:
      allOf:
      - $ref: '#/components/schemas/DefinedByDto'
      - properties:
          pattern:
            type: string
          startEntityMatchers:
            additionalProperties:
              type: string
          endEntityMatchers:
            additionalProperties:
              type: string
      example:
        pattern: pattern
        staticProperties:
          key: ""
        startEntityMatchers:
          key: startEntityMatchers
        source: source
        endEntityMatchers:
          key: endEntityMatchers
    DefinedByPropertyMatchDto:
      allOf:
      - $ref: '#/components/schemas/DefinedByDto'
      - properties:
          startEntityProperties:
            items:
              type: string
            type: array
          endEntityProperties:
            items:
              type: string
            type: array
    EntityRuleDto:
      example:
        lookup:
          key: lookup
        enrichedBy:
        - labelValues:
            key: labelValues
          query: query
          literals:
            key: literals
          metricValue: metricValue
          disabled: true
        - labelValues:
            key: labelValues
          query: query
          literals:
            key: literals
          metricValue: metricValue
          disabled: true
        scope:
          key: scope
        name: name
        definedBy:
        - labelValues:
            key: labelValues
          query: query
          literals:
            key: literals
          metricValue: metricValue
          disabled: true
        - labelValues:
            key: labelValues
          query: query
          literals:
            key: literals
          metricValue: metricValue
          disabled: true
        disabled: true
        type: type
      properties:
        type:
          type: string
        name:
          type: string
        scope:
          additionalProperties:
            type: string
        lookup:
          additionalProperties:
            type: string
        definedBy:
          items:
            $ref: '#/components/schemas/PropertyRuleDto'
          type: array
        enrichedBy:
          items:
            $ref: '#/components/schemas/PropertyRuleDto'
          type: array
        disabled:
          type: boolean
    ModelRulesDto:
      description: The model rules configuration to create or update
      example:
        entities:
        - lookup:
            key: lookup
          enrichedBy:
          - labelValues:
              key: labelValues
            query: query
            literals:
              key: literals
            metricValue: metricValue
            disabled: true
          - labelValues:
              key: labelValues
            query: query
            literals:
              key: literals
            metricValue: metricValue
            disabled: true
          scope:
            key: scope
          name: name
          definedBy:
          - labelValues:
              key: labelValues
            query: query
            literals:
              key: literals
            metricValue: metricValue
            disabled: true
          - labelValues:
              key: labelValues
            query: query
            literals:
              key: literals
            metricValue: metricValue
            disabled: true
          disabled: true
          type: type
        - lookup:
            key: lookup
          enrichedBy:
          - labelValues:
              key: labelValues
            query: query
            literals:
              key: literals
            metricValue: metricValue
            disabled: true
          - labelValues:
              key: labelValues
            query: query
            literals:
              key: literals
            metricValue: metricValue
            disabled: true
          scope:
            key: scope
          name: name
          definedBy:
          - labelValues:
              key: labelValues
            query: query
            literals:
              key: literals
            metricValue: metricValue
            disabled: true
          - labelValues:
              key: labelValues
            query: query
            literals:
              key: literals
            metricValue: metricValue
            disabled: true
          disabled: true
          type: type
        name: name
        relations:
        - startEntityType: startEntityType
          endEntityType: endEntityType
          definedBy:
            pattern: pattern
            staticProperties:
              key: ""
            startEntityMatchers:
              key: startEntityMatchers
            source: source
            endEntityMatchers:
              key: endEntityMatchers
          type: type
        - startEntityType: startEntityType
          endEntityType: endEntityType
          definedBy:
            pattern: pattern
            staticProperties:
              key: ""
            startEntityMatchers:
              key: startEntityMatchers
            source: source
            endEntityMatchers:
              key: endEntityMatchers
          type: type
      properties:
        name:
          type: string
        entities:
          items:
            $ref: '#/components/schemas/EntityRuleDto'
          type: array
        relations:
          items:
            $ref: '#/components/schemas/RelationRuleDto'
          type: array
    PropertyRuleDto:
      example:
        labelValues:
          key: labelValues
        query: query
        literals:
          key: literals
        metricValue: metricValue
        disabled: true
      properties:
        query:
          type: string
        labelValues:
          additionalProperties:
            type: string
        literals:
          additionalProperties:
            type: string
        metricValue:
          type: string
        disabled:
          type: boolean
    RelationRuleDto:
      example:
        startEntityType: startEntityType
        endEntityType: endEntityType
        definedBy:
          pattern: pattern
          staticProperties:
            key: ""
          startEntityMatchers:
            key: startEntityMatchers
          source: source
          endEntityMatchers:
            key: endEntityMatchers
        type: type
      properties:
        type:
          type: string
        startEntityType:
          type: string
        endEntityType:
          type: string
        definedBy:
          $ref: '#/components/schemas/RelationRuleDto_definedBy'
    ModelMappingDto:
      example:
        entities:
        - signals:
          - quantiles:
            - 0.8008281904610115
            - 0.8008281904610115
            metricSource: metricSource
            metricName: metricName
            requestType: requestType
            requestContext:
            - requestContext
            - requestContext
            kind: kind
            id: id
            filters:
            - values:
              - values
              - values
              name: name
              operator: operator
            - values:
              - values
              - values
              name: name
              operator: operator
            requestContextJoin: requestContextJoin
            errors:
            - comparator: comparator
              errorType: errorType
              label: label
              value: value
            - comparator: comparator
              errorType: errorType
              label: label
              value: value
            entityNameLabel: entityNameLabel
            metricUnit: metricUnit
          - quantiles:
            - 0.8008281904610115
            - 0.8008281904610115
            metricSource: metricSource
            metricName: metricName
            requestType: requestType
            requestContext:
            - requestContext
            - requestContext
            kind: kind
            id: id
            filters:
            - values:
              - values
              - values
              name: name
              operator: operator
            - values:
              - values
              - values
              name: name
              operator: operator
            requestContextJoin: requestContextJoin
            errors:
            - comparator: comparator
              errorType: errorType
              label: label
              value: value
            - comparator: comparator
              errorType: errorType
              label: label
              value: value
            entityNameLabel: entityNameLabel
            metricUnit: metricUnit
          entityType: entityType
          id: id
        - signals:
          - quantiles:
            - 0.8008281904610115
            - 0.8008281904610115
            metricSource: metricSource
            metricName: metricName
            requestType: requestType
            requestContext:
            - requestContext
            - requestContext
            kind: kind
            id: id
            filters:
            - values:
              - values
              - values
              name: name
              operator: operator
            - values:
              - values
              - values
              name: name
              operator: operator
            requestContextJoin: requestContextJoin
            errors:
            - comparator: comparator
              errorType: errorType
              label: label
              value: value
            - comparator: comparator
              errorType: errorType
              label: label
              value: value
            entityNameLabel: entityNameLabel
            metricUnit: metricUnit
          - quantiles:
            - 0.8008281904610115
            - 0.8008281904610115
            metricSource: metricSource
            metricName: metricName
            requestType: requestType
            requestContext:
            - requestContext
            - requestContext
            kind: kind
            id: id
            filters:
            - values:
              - values
              - values
              name: name
              operator: operator
            - values:
              - values
              - values
              name: name
              operator: operator
            requestContextJoin: requestContextJoin
            errors:
            - comparator: comparator
              errorType: errorType
              label: label
              value: value
            - comparator: comparator
              errorType: errorType
              label: label
              value: value
            entityNameLabel: entityNameLabel
            metricUnit: metricUnit
          entityType: entityType
          id: id
      properties:
        entities:
          items:
            $ref: '#/components/schemas/ModelMappingEntityDto'
          minItems: 1
          type: array
      required:
      - entities
    ModelMappingEntityDto:
      example:
        signals:
        - quantiles:
          - 0.8008281904610115
          - 0.8008281904610115
          metricSource: metricSource
          metricName: metricName
          requestType: requestType
          requestContext:
          - requestContext
          - requestContext
          kind: kind
          id: id
          filters:
          - values:
            - values
            - values
            name: name
            operator: operator
          - values:
            - values
            - values
            name: name
            operator: operator
          requestContextJoin: requestContextJoin
          errors:
          - comparator: comparator
            errorType: errorType
            label: label
            value: value
          - comparator: comparator
            errorType: errorType
            label: label
            value: value
          entityNameLabel: entityNameLabel
          metricUnit: metricUnit
        - quantiles:
          - 0.8008281904610115
          - 0.8008281904610115
          metricSource: metricSource
          metricName: metricName
          requestType: requestType
          requestContext:
          - requestContext
          - requestContext
          kind: kind
          id: id
          filters:
          - values:
            - values
            - values
            name: name
            operator: operator
          - values:
            - values
            - values
            name: name
            operator: operator
          requestContextJoin: requestContextJoin
          errors:
          - comparator: comparator
            errorType: errorType
            label: label
            value: value
          - comparator: comparator
            errorType: errorType
            label: label
            value: value
          entityNameLabel: entityNameLabel
          metricUnit: metricUnit
        entityType: entityType
        id: id
      properties:
        id:
          type: string
        entityType:
          minLength: 1
          pattern: Service|DataSource|Topic
          type: string
        signals:
          items:
            $ref: '#/components/schemas/ModelMappingEntityDto_signals_inner'
          minItems: 1
          type: array
      required:
      - entityType
      - signals
    ModelMappingHistogramDto:
      allOf:
      - $ref: '#/components/schemas/ModelMappingSignalDto'
      - properties:
          metricName:
            minLength: 1
            type: string
          metricUnit:
            pattern: ((milli|micro|)seconds)|((m|μ|)s)
            type: string
          quantiles:
            items:
              format: double
              type: number
            type: array
          errors:
            items:
              $ref: '#/components/schemas/ModelMappingRequestErrorConditionDto'
            type: array
      example:
        quantiles:
        - 0.8008281904610115
        - 0.8008281904610115
        metricSource: metricSource
        metricName: metricName
        requestType: requestType
        requestContext:
        - requestContext
        - requestContext
        kind: kind
        id: id
        filters:
        - values:
          - values
          - values
          name: name
          operator: operator
        - values:
          - values
          - values
          name: name
          operator: operator
        requestContextJoin: requestContextJoin
        errors:
        - comparator: comparator
          errorType: errorType
          label: label
          value: value
        - comparator: comparator
          errorType: errorType
          label: label
          value: value
        entityNameLabel: entityNameLabel
        metricUnit: metricUnit
      required:
      - entityNameLabel
      - metricName
      - metricSource
      - requestType
    ModelMappingLatencyAverageDto:
      allOf:
      - $ref: '#/components/schemas/ModelMappingSignalDto'
      - properties:
          latencyAverageType:
            minLength: 1
            pattern: counter|gauge
            type: string
          sumMetricName:
            type: string
          sumMetricUnit:
            pattern: ((milli|micro|)seconds)|((m|μ|)s)
            type: string
          countMetricName:
            type: string
          gaugeMetricName:
            type: string
          gaugeMetricUnit:
            pattern: ((milli|micro|)seconds)|((m|μ|)s)
            type: string
      required:
      - entityNameLabel
      - latencyAverageType
      - metricSource
      - requestType
    ModelMappingLatencyQuantileDto:
      allOf:
      - $ref: '#/components/schemas/ModelMappingSignalDto'
      - properties:
          histogramMetricName:
            minLength: 1
            type: string
          histogramMetricUnit:
            minLength: 1
            pattern: ((milli|micro|)seconds)|((m|μ|)s)
            type: string
          quantiles:
            items:
              format: double
              type: number
            minItems: 1
            type: array
      required:
      - entityNameLabel
      - histogramMetricName
      - histogramMetricUnit
      - metricSource
      - quantiles
      - requestType
    ModelMappingRequestErrorConditionDto:
      example:
        comparator: comparator
        errorType: errorType
        label: label
        value: value
      properties:
        errorType:
          minLength: 1
          type: string
        label:
          type: string
        comparator:
          pattern: =|!=|=~|!~
          type: string
        value:
          type: string
      required:
      - errorType
    ModelMappingRequestErrorDto:
      allOf:
      - $ref: '#/components/schemas/ModelMappingSignalDto'
      - properties:
          metricName:
            minLength: 1
            type: string
          metricType:
            minLength: 1
            pattern: counter|gauge
            type: string
          errors:
            items:
              $ref: '#/components/schemas/ModelMappingRequestErrorConditionDto'
            minItems: 1
            type: array
      required:
      - entityNameLabel
      - errors
      - metricName
      - metricSource
      - metricType
      - requestType
    ModelMappingRequestRateDto:
      allOf:
      - $ref: '#/components/schemas/ModelMappingSignalDto'
      - properties:
          metricName:
            minLength: 1
            type: string
          metricType:
            minLength: 1
            pattern: counter|gauge
            type: string
      required:
      - entityNameLabel
      - metricName
      - metricSource
      - metricType
      - requestType
    ModelMappingSignalDto:
      discriminator:
        propertyName: kind
      properties:
        id:
          type: string
        entityNameLabel:
          minLength: 1
          type: string
        metricSource:
          minLength: 1
          type: string
        requestType:
          minLength: 1
          type: string
        requestContext:
          items:
            type: string
          type: array
        requestContextJoin:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/ModelMappingSignalFilterDto'
          type: array
        kind:
          type: string
      required:
      - entityNameLabel
      - kind
      - metricSource
      - requestType
    ModelMappingSignalFilterDto:
      example:
        values:
        - values
        - values
        name: name
        operator: operator
      properties:
        name:
          minLength: 1
          pattern: ^((?!(__name__|asserts_.*)).)*$
          type: string
        operator:
          pattern: =|!=|=~|!~
          type: string
        values:
          items:
            type: string
          type: array
      required:
      - name
    DatasetsSanityChecksDto:
      example:
        sanityChecks:
          key:
            stepResults:
            - stepResults:
              - troubleshoot: troubleshoot
                warnings:
                - warnings
                - warnings
                name: name
                blockers:
                - blockers
                - blockers
              - troubleshoot: troubleshoot
                warnings:
                - warnings
                - warnings
                name: name
                blockers:
                - blockers
                - blockers
              checkName: checkName
            - stepResults:
              - troubleshoot: troubleshoot
                warnings:
                - warnings
                - warnings
                name: name
                blockers:
                - blockers
                - blockers
              - troubleshoot: troubleshoot
                warnings:
                - warnings
                - warnings
                name: name
                blockers:
                - blockers
                - blockers
              checkName: checkName
      properties:
        sanityChecks:
          additionalProperties:
            $ref: '#/components/schemas/DatasetSanityChecksDto'
    EntityKeyDto:
      example:
        scope:
          key: ""
        name: name
        type: type
      properties:
        type:
          type: string
        name:
          type: string
        scope:
          additionalProperties: {}
    LatencyThresholdDto:
      example:
        upperThreshold: 0.8008281904610115
        requestType: requestType
        requestContext: requestContext
      properties:
        requestType:
          type: string
        requestContext:
          type: string
        upperThreshold:
          format: double
          type: number
    LatencyThresholdsDto:
      example:
        latencyThresholds:
        - upperThreshold: 0.8008281904610115
          requestType: requestType
          requestContext: requestContext
        - upperThreshold: 0.8008281904610115
          requestType: requestType
          requestContext: requestContext
        entityKey:
          scope:
            key: ""
          name: name
          type: type
      properties:
        entityKey:
          $ref: '#/components/schemas/EntityKeyDto'
        latencyThresholds:
          items:
            $ref: '#/components/schemas/LatencyThresholdDto'
          type: array
    HealthThresholdV2Dto:
      example:
        expression: expression
        assertionName: assertionName
      properties:
        assertionName:
          minLength: 1
          type: string
        expression:
          minLength: 1
          type: string
      required:
      - assertionName
      - expression
    RequestThresholdV2Dto:
      example:
        requestType: requestType
        requestContext: requestContext
        entityName: entityName
        assertionName: assertionName
        validAssertionName: true
        value: 0.8008281904610115
      properties:
        entityName:
          minLength: 1
          type: string
        assertionName:
          minLength: 1
          type: string
        requestType:
          minLength: 1
          type: string
        requestContext:
          minLength: 1
          type: string
        value:
          format: double
          type: number
        validAssertionName:
          type: boolean
      required:
      - assertionName
      - entityName
      - requestContext
      - requestType
      - value
    ResourceThresholdV2Dto:
      example:
        severity: severity
        containerName: containerName
        assertionName: assertionName
        validAssertionName: true
        source: source
        validSeverity: true
        value: 6.027456183070403
        resourceType: resourceType
      properties:
        assertionName:
          minLength: 1
          type: string
        resourceType:
          minLength: 1
          type: string
        containerName:
          minLength: 1
          type: string
        source:
          minLength: 1
          type: string
        severity:
          minLength: 1
          type: string
        value:
          format: double
          type: number
        validAssertionName:
          type: boolean
        validSeverity:
          type: boolean
      required:
      - assertionName
      - containerName
      - resourceType
      - severity
      - source
      - value
    ThresholdsV2Dto:
      example:
        requestThresholds:
        - requestType: requestType
          requestContext: requestContext
          entityName: entityName
          assertionName: assertionName
          validAssertionName: true
          value: 0.8008281904610115
        - requestType: requestType
          requestContext: requestContext
          entityName: entityName
          assertionName: assertionName
          validAssertionName: true
          value: 0.8008281904610115
        resourceThresholds:
        - severity: severity
          containerName: containerName
          assertionName: assertionName
          validAssertionName: true
          source: source
          validSeverity: true
          value: 6.027456183070403
          resourceType: resourceType
        - severity: severity
          containerName: containerName
          assertionName: assertionName
          validAssertionName: true
          source: source
          validSeverity: true
          value: 6.027456183070403
          resourceType: resourceType
        healthThresholds:
        - expression: expression
          assertionName: assertionName
        - expression: expression
          assertionName: assertionName
      properties:
        requestThresholds:
          items:
            $ref: '#/components/schemas/RequestThresholdV2Dto'
          type: array
        resourceThresholds:
          items:
            $ref: '#/components/schemas/ResourceThresholdV2Dto'
          type: array
        healthThresholds:
          items:
            $ref: '#/components/schemas/HealthThresholdV2Dto'
          type: array
    LogDrilldownConfigDto:
      example:
        dataSourceUid: dataSourceUid
        filterByTraceId: true
        defaultConfig: true
        name: name
        match:
        - op: EQUALS
          values:
          - values
          - values
          property: property
        - op: EQUALS
          values:
          - values
          - values
          property: property
        entityPropertyToLogLabelMapping:
          key: entityPropertyToLogLabelMapping
        errorLabel: errorLabel
        filterBySpanId: true
      properties:
        name:
          type: string
        match:
          items:
            $ref: '#/components/schemas/PropertyMatchEntryDto'
          type: array
        defaultConfig:
          type: boolean
        dataSourceUid:
          type: string
        errorLabel:
          type: string
        entityPropertyToLogLabelMapping:
          additionalProperties:
            type: string
        filterBySpanId:
          type: boolean
        filterByTraceId:
          type: boolean
    PropertyMatchEntryDto:
      example:
        op: EQUALS
        values:
        - values
        - values
        property: property
      properties:
        property:
          type: string
        op:
          enum:
          - EQUALS
          - NOT_EQUALS
          - CONTAINS
          - DOES_NOT_CONTAIN
          - IS_NULL
          - IS_NOT_NULL
          type: string
        values:
          items:
            type: string
          type: array
    MetricSanityCheckResult:
      example:
        stepResults:
        - troubleshoot: troubleshoot
          warnings:
          - warnings
          - warnings
          name: name
          blockers:
          - blockers
          - blockers
        - troubleshoot: troubleshoot
          warnings:
          - warnings
          - warnings
          name: name
          blockers:
          - blockers
          - blockers
        checkName: checkName
        dataPresent: true
      properties:
        checkName:
          type: string
        dataPresent:
          type: boolean
        stepResults:
          items:
            $ref: '#/components/schemas/MetricSanityCheckStepResult'
          type: array
    MetricSanityCheckStepResult:
      example:
        troubleshoot: troubleshoot
        warnings:
        - warnings
        - warnings
        name: name
        blockers:
        - blockers
        - blockers
      properties:
        name:
          type: string
        troubleshoot:
          type: string
        blockers:
          items:
            type: string
          type: array
        warnings:
          items:
            type: string
          type: array
    StackStatusDto:
      example:
        alertManagerConfigured: true
        sanityCheckResults:
        - stepResults:
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          checkName: checkName
          dataPresent: true
        - stepResults:
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          checkName: checkName
          dataPresent: true
        useGrafanaManagedAlerts: true
        processAlertsInEnrichment: true
        disabledTime: 2000-01-23T04:56:07.000+00:00
        version: 0
        enabled: true
        status: status
        graphInstanceCreated: true
      properties:
        status:
          type: string
        disabledTime:
          format: date-time
          type: string
        enabled:
          type: boolean
        alertManagerConfigured:
          type: boolean
        graphInstanceCreated:
          type: boolean
        sanityCheckResults:
          items:
            $ref: '#/components/schemas/MetricSanityCheckResult'
          type: array
        version:
          format: int32
          type: integer
        useGrafanaManagedAlerts:
          type: boolean
        processAlertsInEnrichment:
          type: boolean
    StackEnableDto:
      example:
        groups:
        - envLabelValues:
          - envLabelValues
          - envLabelValues
          siteLabelValues:
          - siteLabelValues
          - siteLabelValues
          envName: envName
          envLabel: envLabel
          filters:
          - values:
            - values
            - values
            name: name
            operator: operator
          - values:
            - values
            - values
            name: name
            operator: operator
          siteLabel: siteLabel
        - envLabelValues:
          - envLabelValues
          - envLabelValues
          siteLabelValues:
          - siteLabelValues
          - siteLabelValues
          envName: envName
          envLabel: envLabel
          filters:
          - values:
            - values
            - values
            name: name
            operator: operator
          - values:
            - values
            - values
            name: name
            operator: operator
          siteLabel: siteLabel
        vendors:
        - vendors
        - vendors
      properties:
        vendors:
          items:
            type: string
          type: array
          uniqueItems: true
        groups:
          items:
            $ref: '#/components/schemas/StackFilterGroupDto'
          type: array
    StackInfoDto:
      example:
        orgSlug: orgSlug
        alertManagerConfigured: true
        stackId: 0
        useGrafanaManagedAlerts: true
        processAlertsInEnrichment: true
        orgId: 6
        enabled: true
        dormant: true
        gcomToken: gcomToken
        slug: slug
        mimirToken: mimirToken
        assertionDetectorToken: assertionDetectorToken
        graphInstanceCreated: true
      properties:
        stackId:
          format: int32
          type: integer
        slug:
          type: string
        orgId:
          format: int32
          type: integer
        orgSlug:
          type: string
        gcomToken:
          type: string
        mimirToken:
          type: string
        assertionDetectorToken:
          type: string
        enabled:
          type: boolean
        dormant:
          type: boolean
        alertManagerConfigured:
          type: boolean
        graphInstanceCreated:
          type: boolean
        useGrafanaManagedAlerts:
          type: boolean
        processAlertsInEnrichment:
          type: boolean
    ScopeCriteriaDto:
      example:
        scopeCriteriaMap:
          key:
          - scopeCriteriaMap
          - scopeCriteriaMap
        nameAndValues:
          key:
          - nameAndValues
          - nameAndValues
      properties:
        nameAndValues:
          additionalProperties:
            items:
              type: string
        scopeCriteriaMap:
          additionalProperties:
            items:
              type: string
            uniqueItems: true
    SloListRequestDto:
      example:
        sloSource: sloSource
        endTime: 0
        scopeCriteria:
          scopeCriteriaMap:
            key:
            - scopeCriteriaMap
            - scopeCriteriaMap
          nameAndValues:
            key:
            - nameAndValues
            - nameAndValues
      properties:
        scopeCriteria:
          $ref: '#/components/schemas/ScopeCriteriaDto'
        endTime:
          format: int64
          type: integer
        sloSource:
          type: string
    ComplianceWindowDto:
      example:
        numDays: 5
        type: type
      properties:
        type:
          type: string
        numDays:
          format: int32
          type: integer
    SloDto:
      example:
        badEventQuery: badEventQuery
        measurementQuery: measurementQuery
        scope:
          key: ""
        name: name
        action: action
        sloTargetDtos:
        - fastBurnViolatingSince: 5
          oneHourErrorBudget: 4.145608029883936
          incidentCount: 3
          actualSli: 6.027456183070403
          incidentTriggerDescription: incidentTriggerDescription
          description: description
          threshold: 1.4658129805029452
          totalCount: 1.0246457001441578
          complianceWindowDto:
            numDays: 5
            type: type
          slowBurnViolatingSince: 2
          badCount: 7.386281948385884
          sixHourBurnRate: 7.457744773683766
          fastBurnThreshold: 7.061401241503109
          oneHourBurnRate: 6.84685269835264
          name: name
          targetSli: 0.8008281904610115
          slowBurnThreshold: 9.301444243932576
          errorBudget: 2.027123023002322
          errorBudgetBalance: 1.2315135367772556
          recentBurnRate: 1.4894159098541704
          status: status
        - fastBurnViolatingSince: 5
          oneHourErrorBudget: 4.145608029883936
          incidentCount: 3
          actualSli: 6.027456183070403
          incidentTriggerDescription: incidentTriggerDescription
          description: description
          threshold: 1.4658129805029452
          totalCount: 1.0246457001441578
          complianceWindowDto:
            numDays: 5
            type: type
          slowBurnViolatingSince: 2
          badCount: 7.386281948385884
          sixHourBurnRate: 7.457744773683766
          fastBurnThreshold: 7.061401241503109
          oneHourBurnRate: 6.84685269835264
          name: name
          targetSli: 0.8008281904610115
          slowBurnThreshold: 9.301444243932576
          errorBudget: 2.027123023002322
          errorBudgetBalance: 1.2315135367772556
          recentBurnRate: 1.4894159098541704
          status: status
        noData: true
        totalEventQuery: totalEventQuery
        type: type
      properties:
        name:
          type: string
        scope:
          additionalProperties: {}
        type:
          type: string
        action:
          type: string
        badEventQuery:
          type: string
        totalEventQuery:
          type: string
        measurementQuery:
          type: string
        sloTargetDtos:
          items:
            $ref: '#/components/schemas/SloTargetDto'
          type: array
        noData:
          type: boolean
    SloListDto:
      example:
        slos:
        - badEventQuery: badEventQuery
          measurementQuery: measurementQuery
          scope:
            key: ""
          name: name
          action: action
          sloTargetDtos:
          - fastBurnViolatingSince: 5
            oneHourErrorBudget: 4.145608029883936
            incidentCount: 3
            actualSli: 6.027456183070403
            incidentTriggerDescription: incidentTriggerDescription
            description: description
            threshold: 1.4658129805029452
            totalCount: 1.0246457001441578
            complianceWindowDto:
              numDays: 5
              type: type
            slowBurnViolatingSince: 2
            badCount: 7.386281948385884
            sixHourBurnRate: 7.457744773683766
            fastBurnThreshold: 7.061401241503109
            oneHourBurnRate: 6.84685269835264
            name: name
            targetSli: 0.8008281904610115
            slowBurnThreshold: 9.301444243932576
            errorBudget: 2.027123023002322
            errorBudgetBalance: 1.2315135367772556
            recentBurnRate: 1.4894159098541704
            status: status
          - fastBurnViolatingSince: 5
            oneHourErrorBudget: 4.145608029883936
            incidentCount: 3
            actualSli: 6.027456183070403
            incidentTriggerDescription: incidentTriggerDescription
            description: description
            threshold: 1.4658129805029452
            totalCount: 1.0246457001441578
            complianceWindowDto:
              numDays: 5
              type: type
            slowBurnViolatingSince: 2
            badCount: 7.386281948385884
            sixHourBurnRate: 7.457744773683766
            fastBurnThreshold: 7.061401241503109
            oneHourBurnRate: 6.84685269835264
            name: name
            targetSli: 0.8008281904610115
            slowBurnThreshold: 9.301444243932576
            errorBudget: 2.027123023002322
            errorBudgetBalance: 1.2315135367772556
            recentBurnRate: 1.4894159098541704
            status: status
          noData: true
          totalEventQuery: totalEventQuery
          type: type
        - badEventQuery: badEventQuery
          measurementQuery: measurementQuery
          scope:
            key: ""
          name: name
          action: action
          sloTargetDtos:
          - fastBurnViolatingSince: 5
            oneHourErrorBudget: 4.145608029883936
            incidentCount: 3
            actualSli: 6.027456183070403
            incidentTriggerDescription: incidentTriggerDescription
            description: description
            threshold: 1.4658129805029452
            totalCount: 1.0246457001441578
            complianceWindowDto:
              numDays: 5
              type: type
            slowBurnViolatingSince: 2
            badCount: 7.386281948385884
            sixHourBurnRate: 7.457744773683766
            fastBurnThreshold: 7.061401241503109
            oneHourBurnRate: 6.84685269835264
            name: name
            targetSli: 0.8008281904610115
            slowBurnThreshold: 9.301444243932576
            errorBudget: 2.027123023002322
            errorBudgetBalance: 1.2315135367772556
            recentBurnRate: 1.4894159098541704
            status: status
          - fastBurnViolatingSince: 5
            oneHourErrorBudget: 4.145608029883936
            incidentCount: 3
            actualSli: 6.027456183070403
            incidentTriggerDescription: incidentTriggerDescription
            description: description
            threshold: 1.4658129805029452
            totalCount: 1.0246457001441578
            complianceWindowDto:
              numDays: 5
              type: type
            slowBurnViolatingSince: 2
            badCount: 7.386281948385884
            sixHourBurnRate: 7.457744773683766
            fastBurnThreshold: 7.061401241503109
            oneHourBurnRate: 6.84685269835264
            name: name
            targetSli: 0.8008281904610115
            slowBurnThreshold: 9.301444243932576
            errorBudget: 2.027123023002322
            errorBudgetBalance: 1.2315135367772556
            recentBurnRate: 1.4894159098541704
            status: status
          noData: true
          totalEventQuery: totalEventQuery
          type: type
        chartNames:
        - chartNames
        - chartNames
      properties:
        slos:
          items:
            $ref: '#/components/schemas/SloDto'
          type: array
        chartNames:
          items:
            type: string
          type: array
          uniqueItems: true
    SloTargetDto:
      example:
        fastBurnViolatingSince: 5
        oneHourErrorBudget: 4.145608029883936
        incidentCount: 3
        actualSli: 6.027456183070403
        incidentTriggerDescription: incidentTriggerDescription
        description: description
        threshold: 1.4658129805029452
        totalCount: 1.0246457001441578
        complianceWindowDto:
          numDays: 5
          type: type
        slowBurnViolatingSince: 2
        badCount: 7.386281948385884
        sixHourBurnRate: 7.457744773683766
        fastBurnThreshold: 7.061401241503109
        oneHourBurnRate: 6.84685269835264
        name: name
        targetSli: 0.8008281904610115
        slowBurnThreshold: 9.301444243932576
        errorBudget: 2.027123023002322
        errorBudgetBalance: 1.2315135367772556
        recentBurnRate: 1.4894159098541704
        status: status
      properties:
        name:
          type: string
        description:
          type: string
        targetSli:
          format: double
          type: number
        actualSli:
          format: double
          type: number
        threshold:
          format: double
          type: number
        complianceWindowDto:
          $ref: '#/components/schemas/ComplianceWindowDto'
        status:
          type: string
        fastBurnViolatingSince:
          format: int64
          type: integer
        slowBurnViolatingSince:
          format: int64
          type: integer
        fastBurnThreshold:
          format: double
          type: number
        slowBurnThreshold:
          format: double
          type: number
        incidentCount:
          format: int32
          type: integer
        errorBudget:
          format: double
          type: number
        oneHourErrorBudget:
          format: double
          type: number
        badCount:
          format: double
          type: number
        errorBudgetBalance:
          format: double
          type: number
        totalCount:
          format: double
          type: number
        recentBurnRate:
          format: double
          type: number
        oneHourBurnRate:
          format: double
          type: number
        sixHourBurnRate:
          format: double
          type: number
        incidentTriggerDescription:
          type: string
    SloIncidentRequestDto:
      example:
        targetName: targetName
        sloSource: sloSource
        start: 0
        sloName: sloName
        end: 6
        scopeCriteria:
          scopeCriteriaMap:
            key:
            - scopeCriteriaMap
            - scopeCriteriaMap
          nameAndValues:
            key:
            - nameAndValues
            - nameAndValues
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
        sloName:
          type: string
        targetName:
          type: string
        scopeCriteria:
          $ref: '#/components/schemas/ScopeCriteriaDto'
        sloSource:
          type: string
    IncidentDto:
      example:
        severity: severity
        startTime: 0
        endTime: 6
      properties:
        startTime:
          format: int64
          type: integer
        endTime:
          format: int64
          type: integer
        severity:
          type: string
    SloIncidentListDto:
      example:
        incidents:
        - severity: severity
          startTime: 0
          endTime: 6
        - severity: severity
          startTime: 0
          endTime: 6
      properties:
        incidents:
          items:
            $ref: '#/components/schemas/IncidentDto'
          type: array
    SloChartRequestDto:
      example:
        targetName: targetName
        chartName: chartName
        sloSource: sloSource
        sloName: sloName
        start: 0
        end: 6
        scopeCriteria:
          scopeCriteriaMap:
            key:
            - scopeCriteriaMap
            - scopeCriteriaMap
          nameAndValues:
            key:
            - nameAndValues
            - nameAndValues
      properties:
        chartName:
          type: string
        sloName:
          type: string
        targetName:
          type: string
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
        scopeCriteria:
          $ref: '#/components/schemas/ScopeCriteriaDto'
        sloSource:
          type: string
    MetricDto:
      example:
        metric:
          key: metric
        query: query
        fillZeros: true
        values:
        - time: 0
          value: 6.027456183070403
        - time: 0
          value: 6.027456183070403
        name: name
      properties:
        query:
          type: string
        name:
          type: string
        fillZeros:
          type: boolean
        metric:
          additionalProperties:
            type: string
        values:
          items:
            $ref: '#/components/schemas/MetricValueDto'
          type: array
    MetricValueDto:
      example:
        time: 0
        value: 6.027456183070403
      properties:
        time:
          format: int64
          type: integer
        value:
          format: double
          type: number
    SloChartResponseDto:
      example:
        thresholds:
        - query: query
          values:
          - time: 0
            value: 6.027456183070403
          - time: 0
            value: 6.027456183070403
          fillZeros: true
          name: name
          type: type
          labels:
            key: labels
        - query: query
          values:
          - time: 0
            value: 6.027456183070403
          - time: 0
            value: 6.027456183070403
          fillZeros: true
          name: name
          type: type
          labels:
            key: labels
        badEventQuery: badEventQuery
        measurementQuery: measurementQuery
        startTimeMs: 1
        metrics:
        - metric:
            key: metric
          query: query
          fillZeros: true
          values:
          - time: 0
            value: 6.027456183070403
          - time: 0
            value: 6.027456183070403
          name: name
        - metric:
            key: metric
          query: query
          fillZeros: true
          values:
          - time: 0
            value: 6.027456183070403
          - time: 0
            value: 6.027456183070403
          name: name
        totalEventQuery: totalEventQuery
        title: title
        endTimeMs: 5
        stepMs: 5
      properties:
        title:
          type: string
        metrics:
          items:
            $ref: '#/components/schemas/MetricDto'
          type: array
        thresholds:
          items:
            $ref: '#/components/schemas/ThresholdSingleDto'
          type: array
        startTimeMs:
          format: int64
          type: integer
        endTimeMs:
          format: int64
          type: integer
        stepMs:
          format: int64
          type: integer
        badEventQuery:
          type: string
        totalEventQuery:
          type: string
        measurementQuery:
          type: string
    ThresholdSingleDto:
      allOf:
      - $ref: '#/components/schemas/ThresholdDto'
      - properties:
          query:
            type: string
          values:
            items:
              $ref: '#/components/schemas/ThresholdValueSingleDto'
            type: array
          fillZeros:
            type: boolean
      example:
        query: query
        values:
        - time: 0
          value: 6.027456183070403
        - time: 0
          value: 6.027456183070403
        fillZeros: true
        name: name
        type: type
        labels:
          key: labels
    ThresholdValueSingleDto:
      example:
        time: 0
        value: 6.027456183070403
      properties:
        time:
          format: int64
          type: integer
        value:
          format: double
          type: number
    SearchRequestDto:
      example:
        filterCriteria:
        - connectToEntityTypes:
          - connectToEntityTypes
          - connectToEntityTypes
          havingAssertion: true
          entityType: entityType
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
        - connectToEntityTypes:
          - connectToEntityTypes
          - connectToEntityTypes
          havingAssertion: true
          entityType: entityType
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
        bindings:
          key: bindings
        timeCriteria:
          start: 6
          end: 1
          instant: 0
        pageNum: 0
        scopeCriteria:
          scopeCriteriaMap:
            key:
            - scopeCriteriaMap
            - scopeCriteriaMap
          nameAndValues:
            key:
            - nameAndValues
            - nameAndValues
        definitionId: 0
      properties:
        definitionId:
          format: int32
          type: integer
        timeCriteria:
          $ref: '#/components/schemas/TimeCriteriaDto'
        scopeCriteria:
          $ref: '#/components/schemas/ScopeCriteriaDto'
        pageNum:
          format: int32
          minimum: 0
          type: integer
        bindings:
          additionalProperties:
            type: string
        filterCriteria:
          items:
            $ref: '#/components/schemas/EntityMatcherDto'
          type: array
    TimeCriteriaDto:
      example:
        start: 6
        end: 1
        instant: 0
      properties:
        instant:
          format: int64
          type: integer
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
    SearchResponseDto:
      example:
        data: ""
        stepDuration: stepDuration
        adjustedTimeCriteria: true
        timeCriteria:
          start: 6
          end: 1
          instant: 0
        type: timeseries
      properties:
        type:
          enum:
          - timeseries
          - graph
          type: string
        timeCriteria:
          $ref: '#/components/schemas/TimeCriteriaDto'
        stepDuration:
          type: string
        data: {}
        adjustedTimeCriteria:
          type: boolean
    AssertionSearchRequestDto:
      example:
        filterCriteria:
        - connectToEntityTypes:
          - connectToEntityTypes
          - connectToEntityTypes
          havingAssertion: true
          entityType: entityType
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
        - connectToEntityTypes:
          - connectToEntityTypes
          - connectToEntityTypes
          havingAssertion: true
          entityType: entityType
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
        currentWBEntityCount: 5
        hideAssertionsOlderThanNHours: 1
        alertCategories:
        - alertCategories
        - alertCategories
        bindings:
          key: bindings
        query: query
        timeCriteria:
          start: 6
          end: 1
          instant: 0
        pageNum: 0
        scopeCriteria:
          scopeCriteriaMap:
            key:
            - scopeCriteriaMap
            - scopeCriteriaMap
          nameAndValues:
            key:
            - nameAndValues
            - nameAndValues
        hideAssertionsPresentMoreThanPercentageOfTime: 5
        definitionId: 0
      properties:
        definitionId:
          format: int32
          type: integer
        timeCriteria:
          $ref: '#/components/schemas/TimeCriteriaDto'
        scopeCriteria:
          $ref: '#/components/schemas/ScopeCriteriaDto'
        pageNum:
          format: int32
          minimum: 0
          type: integer
        bindings:
          additionalProperties:
            type: string
        filterCriteria:
          items:
            $ref: '#/components/schemas/EntityMatcherDto'
          type: array
        hideAssertionsOlderThanNHours:
          format: int32
          type: integer
        alertCategories:
          items:
            type: string
          type: array
          uniqueItems: true
        query:
          type: string
        currentWBEntityCount:
          format: int32
          type: integer
        hideAssertionsPresentMoreThanPercentageOfTime:
          format: int32
          type: integer
    AssertionClusterDto:
      example:
        assertionSummaries:
        - summary: summary
          category: category
        - summary: summary
          category: category
        start: 9
        end: 3
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
        assertionSummaries:
          items:
            $ref: '#/components/schemas/AssertionSummaryDto'
          type: array
    AssertionStateDto:
      example:
        severity: severity
        assertionSummaries:
        - summary: summary
          category: category
        - summary: summary
          category: category
        start: 0
        end: 6
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
        severity:
          type: string
        assertionSummaries:
          items:
            $ref: '#/components/schemas/AssertionSummaryDto'
          type: array
    AssertionSummaryDto:
      example:
        summary: summary
        category: category
      properties:
        category:
          type: string
        summary:
          type: string
    EntityAssertionScoresDto:
      example:
        assertionClusters:
        - assertionSummaries:
          - summary: summary
            category: category
          - summary: summary
            category: category
          start: 9
          end: 3
        - assertionSummaries:
          - summary: summary
            category: category
          - summary: summary
            category: category
          start: 9
          end: 3
        severityWiseTotalScores:
          key: 7.061401241503109
        typeLabels:
          key: typeLabels
        scope:
          key: ""
        percentage: percentage
        name: name
        metrics:
        - metric:
            key: metric
          query: query
          fillZeros: true
          values:
          - time: 0
            value: 6.027456183070403
          - time: 0
            value: 6.027456183070403
          name: name
        - metric:
            key: metric
          query: query
          fillZeros: true
          values:
          - time: 0
            value: 6.027456183070403
          - time: 0
            value: 6.027456183070403
          name: name
        type: type
        inboundClientErrorBreached: true
        totalScore: 2.3021358869347655
      properties:
        type:
          type: string
        name:
          type: string
        typeLabels:
          additionalProperties:
            type: string
        scope:
          additionalProperties: {}
        metrics:
          items:
            $ref: '#/components/schemas/MetricDto'
          type: array
        totalScore:
          format: double
          type: number
        severityWiseTotalScores:
          additionalProperties:
            format: double
            type: number
        percentage:
          type: string
        assertionClusters:
          items:
            $ref: '#/components/schemas/AssertionClusterDto'
          type: array
        inboundClientErrorBreached:
          type: boolean
    EntityAssertionSummariesDto:
      example:
        timeWindow:
          start: 1
          end: 5
        assertionScores:
        - assertionClusters:
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          severityWiseTotalScores:
            key: 7.061401241503109
          typeLabels:
            key: typeLabels
          scope:
            key: ""
          percentage: percentage
          name: name
          metrics:
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          type: type
          inboundClientErrorBreached: true
          totalScore: 2.3021358869347655
        - assertionClusters:
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          severityWiseTotalScores:
            key: 7.061401241503109
          typeLabels:
            key: typeLabels
          scope:
            key: ""
          percentage: percentage
          name: name
          metrics:
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          type: type
          inboundClientErrorBreached: true
          totalScore: 2.3021358869347655
        aggregateAssertionScores:
          assertionClusters:
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          severityWiseTotalScores:
            key: 7.061401241503109
          typeLabels:
            key: typeLabels
          scope:
            key: ""
          percentage: percentage
          name: name
          metrics:
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          type: type
          inboundClientErrorBreached: true
          totalScore: 2.3021358869347655
        graphData: ""
        timeStepIntervalMs: 5
        summaries:
        - scope:
            key: ""
          name: name
          type: type
          timeLines:
          - alertName: alertName
            healthStates:
            - severity: severity
              assertionSummaries:
              - summary: summary
                category: category
              - summary: summary
                category: category
              start: 0
              end: 6
            - severity: severity
              assertionSummaries:
              - summary: summary
                category: category
              - summary: summary
                category: category
              start: 0
              end: 6
            assertionName: assertionName
            category: category
            labels:
            - key: labels
            - key: labels
          - alertName: alertName
            healthStates:
            - severity: severity
              assertionSummaries:
              - summary: summary
                category: category
              - summary: summary
                category: category
              start: 0
              end: 6
            - severity: severity
              assertionSummaries:
              - summary: summary
                category: category
              - summary: summary
                category: category
              start: 0
              end: 6
            assertionName: assertionName
            category: category
            labels:
            - key: labels
            - key: labels
        - scope:
            key: ""
          name: name
          type: type
          timeLines:
          - alertName: alertName
            healthStates:
            - severity: severity
              assertionSummaries:
              - summary: summary
                category: category
              - summary: summary
                category: category
              start: 0
              end: 6
            - severity: severity
              assertionSummaries:
              - summary: summary
                category: category
              - summary: summary
                category: category
              start: 0
              end: 6
            assertionName: assertionName
            category: category
            labels:
            - key: labels
            - key: labels
          - alertName: alertName
            healthStates:
            - severity: severity
              assertionSummaries:
              - summary: summary
                category: category
              - summary: summary
                category: category
              start: 0
              end: 6
            - severity: severity
              assertionSummaries:
              - summary: summary
                category: category
              - summary: summary
                category: category
              start: 0
              end: 6
            assertionName: assertionName
            category: category
            labels:
            - key: labels
            - key: labels
      properties:
        summaries:
          items:
            $ref: '#/components/schemas/EntityAssertionSummaryDto'
          type: array
        timeWindow:
          $ref: '#/components/schemas/TimeWindowDto'
        timeStepIntervalMs:
          format: int64
          type: integer
        aggregateAssertionScores:
          $ref: '#/components/schemas/EntityAssertionScoresDto'
        assertionScores:
          items:
            $ref: '#/components/schemas/EntityAssertionScoresDto'
          type: array
        graphData: {}
    EntityAssertionSummaryDto:
      example:
        scope:
          key: ""
        name: name
        type: type
        timeLines:
        - alertName: alertName
          healthStates:
          - severity: severity
            assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 0
            end: 6
          - severity: severity
            assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 0
            end: 6
          assertionName: assertionName
          category: category
          labels:
          - key: labels
          - key: labels
        - alertName: alertName
          healthStates:
          - severity: severity
            assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 0
            end: 6
          - severity: severity
            assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 0
            end: 6
          assertionName: assertionName
          category: category
          labels:
          - key: labels
          - key: labels
      properties:
        type:
          type: string
        name:
          type: string
        scope:
          additionalProperties: {}
        timeLines:
          items:
            $ref: '#/components/schemas/EntityAssertionSummaryTimeLineDto'
          type: array
    EntityAssertionSummaryTimeLineDto:
      example:
        alertName: alertName
        healthStates:
        - severity: severity
          assertionSummaries:
          - summary: summary
            category: category
          - summary: summary
            category: category
          start: 0
          end: 6
        - severity: severity
          assertionSummaries:
          - summary: summary
            category: category
          - summary: summary
            category: category
          start: 0
          end: 6
        assertionName: assertionName
        category: category
        labels:
        - key: labels
        - key: labels
      properties:
        assertionName:
          type: string
        category:
          type: string
        alertName:
          type: string
        healthStates:
          items:
            $ref: '#/components/schemas/AssertionStateDto'
          type: array
        labels:
          items:
            additionalProperties:
              type: string
          type: array
    TimeWindowDto:
      example:
        start: 1
        end: 5
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
    LlmRcaSummarySearchReqDto:
      example:
        filterCriteria:
        - connectToEntityTypes:
          - connectToEntityTypes
          - connectToEntityTypes
          havingAssertion: true
          entityType: entityType
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
        - connectToEntityTypes:
          - connectToEntityTypes
          - connectToEntityTypes
          havingAssertion: true
          entityType: entityType
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
        currentWBEntityCount: 5
        hideAssertionsOlderThanNHours: 1
        alertCategories:
        - alertCategories
        - alertCategories
        bindings:
          key: bindings
        query: query
        timeCriteria:
          start: 6
          end: 1
          instant: 0
        includeSuggestions: true
        pageNum: 0
        scopeCriteria:
          scopeCriteriaMap:
            key:
            - scopeCriteriaMap
            - scopeCriteriaMap
          nameAndValues:
            key:
            - nameAndValues
            - nameAndValues
        hideAssertionsPresentMoreThanPercentageOfTime: 5
        definitionId: 0
      properties:
        definitionId:
          format: int32
          type: integer
        timeCriteria:
          $ref: '#/components/schemas/TimeCriteriaDto'
        scopeCriteria:
          $ref: '#/components/schemas/ScopeCriteriaDto'
        pageNum:
          format: int32
          minimum: 0
          type: integer
        bindings:
          additionalProperties:
            type: string
        filterCriteria:
          items:
            $ref: '#/components/schemas/EntityMatcherDto'
          type: array
        hideAssertionsOlderThanNHours:
          format: int32
          type: integer
        alertCategories:
          items:
            type: string
          type: array
          uniqueItems: true
        query:
          type: string
        currentWBEntityCount:
          format: int32
          type: integer
        hideAssertionsPresentMoreThanPercentageOfTime:
          format: int32
          type: integer
        includeSuggestions:
          type: boolean
    LlmRcaAssertionStateDto:
      example:
        severity: severity
        start: 0
        end: 6
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
        severity:
          type: string
    LlmRcaAssertionSummaryDto:
      example:
        scope:
          key: ""
        name: name
        type: type
        timeLines:
        - alertName: alertName
          healthStates:
          - severity: severity
            start: 0
            end: 6
          - severity: severity
            start: 0
            end: 6
          assertionName: assertionName
          category: category
          labels:
          - key: labels
          - key: labels
        - alertName: alertName
          healthStates:
          - severity: severity
            start: 0
            end: 6
          - severity: severity
            start: 0
            end: 6
          assertionName: assertionName
          category: category
          labels:
          - key: labels
          - key: labels
      properties:
        type:
          type: string
        name:
          type: string
        scope:
          additionalProperties: {}
        timeLines:
          items:
            $ref: '#/components/schemas/LlmRcaAssertionTimelineItemDto'
          type: array
    LlmRcaAssertionTimelineItemDto:
      example:
        alertName: alertName
        healthStates:
        - severity: severity
          start: 0
          end: 6
        - severity: severity
          start: 0
          end: 6
        assertionName: assertionName
        category: category
        labels:
        - key: labels
        - key: labels
      properties:
        assertionName:
          type: string
        category:
          type: string
        alertName:
          type: string
        healthStates:
          items:
            $ref: '#/components/schemas/LlmRcaAssertionStateDto'
          type: array
        labels:
          items:
            additionalProperties:
              type: string
          type: array
    LlmRcaGraphEntityDto:
      example:
        scope:
          key: ""
        name: name
        id: 1
        type: type
        relations:
          key:
          - scope:
              key: ""
            name: name
            type: type
          - scope:
              key: ""
            name: name
            type: type
        properties:
          key: ""
      properties:
        id:
          format: int64
          type: integer
        type:
          type: string
        name:
          type: string
        scope:
          additionalProperties: {}
        properties:
          additionalProperties: {}
        relations:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntityKeyDto'
    LlmRcaSuggestionDto:
      example:
        reason: reason
        scope:
          key: ""
        name: name
        type: type
      properties:
        type:
          type: string
        name:
          type: string
        scope:
          additionalProperties: {}
        reason:
          type: string
    LlmRcaSummariesDto:
      example:
        suggestions:
        - reason: reason
          scope:
            key: ""
          name: name
          type: type
        - reason: reason
          scope:
            key: ""
          name: name
          type: type
        graphData:
        - scope:
            key: ""
          name: name
          id: 1
          type: type
          relations:
            key:
            - scope:
                key: ""
              name: name
              type: type
            - scope:
                key: ""
              name: name
              type: type
          properties:
            key: ""
        - scope:
            key: ""
          name: name
          id: 1
          type: type
          relations:
            key:
            - scope:
                key: ""
              name: name
              type: type
            - scope:
                key: ""
              name: name
              type: type
          properties:
            key: ""
        summaries:
        - scope:
            key: ""
          name: name
          type: type
          timeLines:
          - alertName: alertName
            healthStates:
            - severity: severity
              start: 0
              end: 6
            - severity: severity
              start: 0
              end: 6
            assertionName: assertionName
            category: category
            labels:
            - key: labels
            - key: labels
          - alertName: alertName
            healthStates:
            - severity: severity
              start: 0
              end: 6
            - severity: severity
              start: 0
              end: 6
            assertionName: assertionName
            category: category
            labels:
            - key: labels
            - key: labels
        - scope:
            key: ""
          name: name
          type: type
          timeLines:
          - alertName: alertName
            healthStates:
            - severity: severity
              start: 0
              end: 6
            - severity: severity
              start: 0
              end: 6
            assertionName: assertionName
            category: category
            labels:
            - key: labels
            - key: labels
          - alertName: alertName
            healthStates:
            - severity: severity
              start: 0
              end: 6
            - severity: severity
              start: 0
              end: 6
            assertionName: assertionName
            category: category
            labels:
            - key: labels
            - key: labels
      properties:
        summaries:
          items:
            $ref: '#/components/schemas/LlmRcaAssertionSummaryDto'
          type: array
        graphData:
          items:
            $ref: '#/components/schemas/LlmRcaGraphEntityDto'
          type: array
        suggestions:
          items:
            $ref: '#/components/schemas/LlmRcaSuggestionDto'
          type: array
    RcaPatternSearchRequestDto:
      example:
        site: site
        entityType: entityType
        entityName: entityName
        patterns:
        - patterns
        - patterns
        namespace: namespace
        start: 0
        end: 6
        env: env
      properties:
        entityType:
          type: string
        entityName:
          type: string
        env:
          type: string
        site:
          type: string
        namespace:
          type: string
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
        patterns:
          items:
            type: string
          type: array
    RcaPatternSearchResponseDto:
      example:
        entities:
        - scope:
            key: ""
          name: name
          type: type
        - scope:
            key: ""
          name: name
          type: type
      properties:
        entities:
          items:
            $ref: '#/components/schemas/EntityKeyDto'
          type: array
    RcaPatternListRequestDto:
      example:
        site: site
        entityType: entityType
        entityName: entityName
        namespace: namespace
        env: env
      properties:
        entityType:
          type: string
        entityName:
          type: string
        env:
          type: string
        site:
          type: string
        namespace:
          type: string
    MonitoringStatusRequestDto:
      example:
        entityKeys:
        - scope:
            key: ""
          name: name
          type: type
        - scope:
            key: ""
          name: name
          type: type
        scopeCriteriaDto:
          scopeCriteriaMap:
            key:
            - scopeCriteriaMap
            - scopeCriteriaMap
          nameAndValues:
            key:
            - nameAndValues
            - nameAndValues
        instantMs: 0
        reportOnlyMissing: true
      properties:
        entityKeys:
          items:
            $ref: '#/components/schemas/EntityKeyDto'
          type: array
          uniqueItems: true
        instantMs:
          format: int64
          type: integer
        reportOnlyMissing:
          type: boolean
        scopeCriteriaDto:
          $ref: '#/components/schemas/ScopeCriteriaDto'
    EntityMonitoringStatusDto:
      example:
        resource: true
        entityKey:
          scope:
            key: ""
          name: name
          type: type
        latency: true
        traffic: true
      properties:
        entityKey:
          $ref: '#/components/schemas/EntityKeyDto'
        resource:
          type: boolean
        traffic:
          type: boolean
        latency:
          type: boolean
    MonitoringStatusResponseDto:
      example:
        entityStatus:
        - resource: true
          entityKey:
            scope:
              key: ""
            name: name
            type: type
          latency: true
          traffic: true
        - resource: true
          entityKey:
            scope:
              key: ""
            name: name
            type: type
          latency: true
          traffic: true
      properties:
        entityStatus:
          items:
            $ref: '#/components/schemas/EntityMonitoringStatusDto'
          type: array
    ExternalLoggingRequestDto:
      example:
        start: 0
        end: 6
        properties:
          key: properties
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
      required:
      - end
      - start
    ExternalLoggingResponseDto:
      example:
        url: url
      properties:
        url:
          type: string
    KpiSummaryRequestDto:
      example:
        entityKeys:
        - scope:
            key: ""
          name: name
          type: type
        - scope:
            key: ""
          name: name
          type: type
        startMs: 0
        endMs: 6
      properties:
        entityKeys:
          items:
            $ref: '#/components/schemas/EntityKeyDto'
          type: array
          uniqueItems: true
        startMs:
          format: int64
          type: integer
        endMs:
          format: int64
          type: integer
    GraphAssertion:
      example:
        severity: severity
        entityType: entityType
        assertionName: assertionName
        category: category
      properties:
        assertionName:
          type: string
        severity:
          type: string
        category:
          type: string
        entityType:
          type: string
    GraphAssertionSummary:
      example:
        severity: severity
        amend: true
        assertions:
        - severity: severity
          entityType: entityType
          assertionName: assertionName
          category: category
        - severity: severity
          entityType: entityType
          assertionName: assertionName
          category: category
      properties:
        severity:
          type: string
        amend:
          type: boolean
        assertions:
          items:
            $ref: '#/components/schemas/GraphAssertion'
          type: array
    GraphEntityKpiValue:
      properties:
        kpiValue:
          format: double
          type: number
        assertionSummary:
          $ref: '#/components/schemas/GraphAssertionSummary'
    ThresholdValueMinMaxDto:
      example:
        values:
        - 5.962133916683182
        - 5.962133916683182
        time: 1
      properties:
        time:
          format: int64
          type: integer
        values:
          items:
            format: double
            type: number
          type: array
    TraceIntegrationRequestDto:
      example:
        thresholdBands:
        - values:
          - 5.962133916683182
          - 5.962133916683182
          time: 1
        - values:
          - 5.962133916683182
          - 5.962133916683182
          time: 1
        singleThreshold: 5.637376656633329
        values:
        - time: 0
          value: 6.027456183070403
        - time: 0
          value: 6.027456183070403
        start: 0
        end: 6
        properties:
          key: properties
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
        properties:
          additionalProperties:
            type: string
        values:
          items:
            $ref: '#/components/schemas/MetricValueDto'
          type: array
        thresholdBands:
          items:
            $ref: '#/components/schemas/ThresholdValueMinMaxDto'
          type: array
        singleThreshold:
          format: double
          type: number
      required:
      - end
      - start
    TraceIntegrationResponseDto:
      example:
        url: url
      properties:
        url:
          type: string
    IncidentRequestDto:
      example:
        search: search
        sloSource: sloSource
        start: 0
        end: 6
        scopeCriteria:
          scopeCriteriaMap:
            key:
            - scopeCriteriaMap
            - scopeCriteriaMap
          nameAndValues:
            key:
            - nameAndValues
            - nameAndValues
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
        search:
          type: string
        scopeCriteria:
          $ref: '#/components/schemas/ScopeCriteriaDto'
        sloSource:
          type: string
    IncidentGroupDetailDto:
      example:
        scope:
          key: ""
      properties:
        scope:
          additionalProperties: {}
    IncidentGroupDto:
      example:
        name: name
        incidents:
        - severity: severity
          startTime: 0
          endTime: 6
        - severity: severity
          startTime: 0
          endTime: 6
        detail:
          scope:
            key: ""
        type: assertion_alert
      properties:
        name:
          type: string
        type:
          enum:
          - assertion_alert
          - slo_alert
          type: string
        detail:
          $ref: '#/components/schemas/IncidentGroupDetailDto'
        incidents:
          items:
            $ref: '#/components/schemas/IncidentDto'
          type: array
    IncidentGroupListDto:
      example:
        chartName: chartName
        incidentGroups:
        - name: name
          incidents:
          - severity: severity
            startTime: 0
            endTime: 6
          - severity: severity
            startTime: 0
            endTime: 6
          detail:
            scope:
              key: ""
          type: assertion_alert
        - name: name
          incidents:
          - severity: severity
            startTime: 0
            endTime: 6
          - severity: severity
            startTime: 0
            endTime: 6
          detail:
            scope:
              key: ""
          type: assertion_alert
      properties:
        incidentGroups:
          items:
            $ref: '#/components/schemas/IncidentGroupDto'
          type: array
        chartName:
          type: string
    IncidentSummaryDto:
      example:
        scope:
          key: ""
        name: name
        incidents: 0
        type: assertion_alert
        status: true
      properties:
        name:
          type: string
        type:
          enum:
          - assertion_alert
          - slo_alert
          type: string
        scope:
          additionalProperties: {}
        incidents:
          format: int32
          type: integer
        status:
          type: boolean
    IncidentSummaryListDto:
      example:
        incidentSummaries:
        - scope:
            key: ""
          name: name
          incidents: 0
          type: assertion_alert
          status: true
        - scope:
            key: ""
          name: name
          incidents: 0
          type: assertion_alert
          status: true
      properties:
        incidentSummaries:
          items:
            $ref: '#/components/schemas/IncidentSummaryDto'
          type: array
    EntityCountRequestDto:
      example:
        propertyMatchers:
        - op: op
          uom: MB
          name: name
          value: ""
        - op: op
          uom: MB
          name: name
          value: ""
        timeCriteria:
          start: 6
          end: 1
          instant: 0
        scopeCriteria:
          scopeCriteriaMap:
            key:
            - scopeCriteriaMap
            - scopeCriteriaMap
          nameAndValues:
            key:
            - nameAndValues
            - nameAndValues
      properties:
        timeCriteria:
          $ref: '#/components/schemas/TimeCriteriaDto'
        scopeCriteria:
          $ref: '#/components/schemas/ScopeCriteriaDto'
        propertyMatchers:
          items:
            $ref: '#/components/schemas/PropertyMatcherDto'
          type: array
    EntityScopesRequestDto:
      example:
        start: 0
        end: 6
        conditions:
          key:
          - conditions
          - conditions
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
        conditions:
          additionalProperties:
            items:
              type: string
    EntityScopesResponseDto:
      example:
        scopeValues:
          key:
          - scopeValues
          - scopeValues
      properties:
        scopeValues:
          additionalProperties:
            items:
              type: string
    CustomerMetricRequestDto:
      example:
        metrics:
        - metrics
        - metrics
      properties:
        metrics:
          items:
            type: string
          type: array
          uniqueItems: true
    CustomerMetricResponseDto:
      example:
        client:
          metricNames:
          - metricNames
          - metricNames
          total: 0
          regexPatterns:
          - regexPatterns
          - regexPatterns
        hosted:
          metricNames:
          - metricNames
          - metricNames
          total: 0
          regexPatterns:
          - regexPatterns
          - regexPatterns
      properties:
        hosted:
          $ref: '#/components/schemas/MetricSetsDto'
        client:
          $ref: '#/components/schemas/MetricSetsDto'
    MetricSetsDto:
      example:
        metricNames:
        - metricNames
        - metricNames
        total: 0
        regexPatterns:
        - regexPatterns
        - regexPatterns
      properties:
        total:
          format: int32
          type: integer
        metricNames:
          items:
            type: string
          type: array
          uniqueItems: true
        regexPatterns:
          items:
            type: string
          type: array
          uniqueItems: true
    TraceConfigDto:
      example:
        ingestedByAgent: true
        awsRegion: awsRegion
        suffixServiceWithNamespace: true
        addOutboundContext: true
        tool: tool
        url: url
        labelToTagMapping:
          key: labelToTagMapping
        orgId: orgId
        operationLabel: operationLabel
        assertsCollector: true
        isElasticBackend: true
        projectName: projectName
        dataSource: dataSource
        serviceLabel: serviceLabel
      properties:
        tool:
          type: string
        url:
          type: string
        labelToTagMapping:
          additionalProperties:
            type: string
        serviceLabel:
          type: string
        operationLabel:
          type: string
        assertsCollector:
          type: boolean
        addOutboundContext:
          deprecated: true
          type: boolean
        suffixServiceWithNamespace:
          type: boolean
        isElasticBackend:
          type: boolean
        projectName:
          type: string
        ingestedByAgent:
          type: boolean
        awsRegion:
          type: string
        dataSource:
          type: string
        orgId:
          type: string
    TraceEnvConfigDto:
      example:
        envsForTrace:
        - envsForTrace
        - envsForTrace
        traceConfig:
          ingestedByAgent: true
          awsRegion: awsRegion
          suffixServiceWithNamespace: true
          addOutboundContext: true
          tool: tool
          url: url
          labelToTagMapping:
            key: labelToTagMapping
          orgId: orgId
          operationLabel: operationLabel
          assertsCollector: true
          isElasticBackend: true
          projectName: projectName
          dataSource: dataSource
          serviceLabel: serviceLabel
        defaultConfig: true
        name: name
        sitesForTrace:
        - sitesForTrace
        - sitesForTrace
      properties:
        name:
          type: string
        envsForTrace:
          items:
            type: string
          type: array
          uniqueItems: true
        sitesForTrace:
          items:
            type: string
          type: array
          uniqueItems: true
        traceConfig:
          $ref: '#/components/schemas/TraceConfigDto'
        defaultConfig:
          type: boolean
    OccurrenceSliConfigDto:
      allOf:
      - $ref: '#/components/schemas/SliConfigDto'
      - properties:
          measurement:
            type: string
          thresholdComparator:
            type: string
      example:
        thresholdComparator: thresholdComparator
        kind: kind
        name: name
        measurement: measurement
    RequestSliConfigDto:
      allOf:
      - $ref: '#/components/schemas/SliConfigDto'
      - properties:
          badEventCount:
            type: string
          totalEventCount:
            type: string
          gauge:
            type: boolean
    SliConfigDto:
      discriminator:
        propertyName: kind
      properties:
        name:
          type: string
        kind:
          type: string
      required:
      - kind
    SloCalendarWindowConfigDto:
      allOf:
      - $ref: '#/components/schemas/SloWindowConfigDto'
      example:
        kind: kind
        days: 1
    SloConfigDto:
      example:
        name: name
        window:
          kind: kind
          days: 1
        value: 6.027456183070403
        ratio: 0.8008281904610115
      properties:
        name:
          type: string
        ratio:
          format: double
          type: number
        value:
          format: double
          type: number
        window:
          $ref: '#/components/schemas/SloConfigDto_window'
    SloConfigRequestDto:
      example:
        indicator:
          thresholdComparator: thresholdComparator
          kind: kind
          name: name
          measurement: measurement
        apiVersion: apiVersion
        entitySearch: entitySearch
        name: name
        objectives:
        - name: name
          window:
            kind: kind
            days: 1
          value: 6.027456183070403
          ratio: 0.8008281904610115
        - name: name
          window:
            kind: kind
            days: 1
          value: 6.027456183070403
          ratio: 0.8008281904610115
      properties:
        apiVersion:
          type: string
        name:
          type: string
        entitySearch:
          type: string
        indicator:
          $ref: '#/components/schemas/SloConfigRequestDto_indicator'
        objectives:
          items:
            $ref: '#/components/schemas/SloConfigDto'
          type: array
    SloRollingWindowConfigDto:
      allOf:
      - $ref: '#/components/schemas/SloWindowConfigDto'
      example:
        kind: kind
        days: 1
    SloWindowConfigDto:
      discriminator:
        propertyName: kind
      properties:
        days:
          format: int32
          type: integer
        kind:
          type: string
      required:
      - kind
    ConfigValidationResponseDto:
      example:
        jobId: jobId
        state: success
        errors:
        - errors
        - errors
      properties:
        state:
          enum:
          - success
          - failure
          - processing
          - aborted
          - timeout
          type: string
        jobId:
          type: string
        errors:
          items:
            type: string
          type: array
    RuleCreationSpecDto:
      example:
        metricRegExp: metricRegExp
        rules:
        - ruleGroup: ruleGroup
          assertsRuleName: assertsRuleName
          labelsTemplate:
            key: labelsTemplate
          ruleExpr: ruleExpr
          generateDefaultRules: true
        - ruleGroup: ruleGroup
          assertsRuleName: assertsRuleName
          labelsTemplate:
            key: labelsTemplate
          ruleExpr: ruleExpr
          generateDefaultRules: true
      properties:
        metricRegExp:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/RuleDto'
          type: array
    RuleDto:
      example:
        ruleGroup: ruleGroup
        assertsRuleName: assertsRuleName
        labelsTemplate:
          key: labelsTemplate
        ruleExpr: ruleExpr
        generateDefaultRules: true
      properties:
        ruleGroup:
          type: string
        generateDefaultRules:
          type: boolean
        assertsRuleName:
          type: string
        ruleExpr:
          type: string
        labelsTemplate:
          additionalProperties:
            type: string
    RuleGenerationRequestDto:
      example:
        sourceMappings:
          key: sourceMappings
        ruleCreationSpecs:
        - metricRegExp: metricRegExp
          rules:
          - ruleGroup: ruleGroup
            assertsRuleName: assertsRuleName
            labelsTemplate:
              key: labelsTemplate
            ruleExpr: ruleExpr
            generateDefaultRules: true
          - ruleGroup: ruleGroup
            assertsRuleName: assertsRuleName
            labelsTemplate:
              key: labelsTemplate
            ruleExpr: ruleExpr
            generateDefaultRules: true
        - metricRegExp: metricRegExp
          rules:
          - ruleGroup: ruleGroup
            assertsRuleName: assertsRuleName
            labelsTemplate:
              key: labelsTemplate
            ruleExpr: ruleExpr
            generateDefaultRules: true
          - ruleGroup: ruleGroup
            assertsRuleName: assertsRuleName
            labelsTemplate:
              key: labelsTemplate
            ruleExpr: ruleExpr
            generateDefaultRules: true
        metricMatchConditions:
          key: metricMatchConditions
      properties:
        metricMatchConditions:
          additionalProperties:
            type: string
        sourceMappings:
          additionalProperties:
            type: string
        ruleCreationSpecs:
          items:
            $ref: '#/components/schemas/RuleCreationSpecDto'
          type: array
    PrometheusRule:
      example:
        alert: alert
        record: record
        disableInGroups:
        - disableInGroups
        - disableInGroups
        for: for
        annotations:
          empty: true
        expr: expr
        labels:
          empty: true
      properties:
        record:
          type: string
        alert:
          type: string
        expr:
          type: string
        annotations:
          $ref: '#/components/schemas/PrometheusRule_annotations'
        labels:
          $ref: '#/components/schemas/PrometheusRule_annotations'
        disableInGroups:
          items:
            type: string
          type: array
        for:
          type: string
    PrometheusRuleGroup:
      example:
        name: name
        interval: interval
        rules:
        - alert: alert
          record: record
          disableInGroups:
          - disableInGroups
          - disableInGroups
          for: for
          annotations:
            empty: true
          expr: expr
          labels:
            empty: true
        - alert: alert
          record: record
          disableInGroups:
          - disableInGroups
          - disableInGroups
          for: for
          annotations:
            empty: true
          expr: expr
          labels:
            empty: true
      properties:
        name:
          type: string
        interval:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/PrometheusRule'
          type: array
    PrometheusRules:
      example:
        groups:
        - name: name
          interval: interval
          rules:
          - alert: alert
            record: record
            disableInGroups:
            - disableInGroups
            - disableInGroups
            for: for
            annotations:
              empty: true
            expr: expr
            labels:
              empty: true
          - alert: alert
            record: record
            disableInGroups:
            - disableInGroups
            - disableInGroups
            for: for
            annotations:
              empty: true
            expr: expr
            labels:
              empty: true
        - name: name
          interval: interval
          rules:
          - alert: alert
            record: record
            disableInGroups:
            - disableInGroups
            - disableInGroups
            for: for
            annotations:
              empty: true
            expr: expr
            labels:
              empty: true
          - alert: alert
            record: record
            disableInGroups:
            - disableInGroups
            - disableInGroups
            for: for
            annotations:
              empty: true
            expr: expr
            labels:
              empty: true
      properties:
        groups:
          items:
            $ref: '#/components/schemas/PrometheusRuleGroup'
          type: array
    RuleGenerationResponseDto:
      properties:
        prometheusRules:
          $ref: '#/components/schemas/PrometheusRules'
        unmappedCpuMetrics:
          items:
            type: string
          type: array
          uniqueItems: true
        unmappedMemoryMetrics:
          items:
            type: string
          type: array
          uniqueItems: true
        unmappedBytesMetric:
          items:
            type: string
          type: array
          uniqueItems: true
        unmappedHistograms:
          items:
            type: string
          type: array
          uniqueItems: true
        unmappedSummaries:
          items:
            type: string
          type: array
          uniqueItems: true
        unmappedMetrics:
          items:
            type: string
          type: array
          uniqueItems: true
    CustomAttributeConfigDto:
      example:
        regex: regex
        span_kinds:
        - span_kinds
        - span_kinds
        value_expr: value_expr
        source_attributes:
        - source_attributes
        - source_attributes
      properties:
        span_kinds:
          items:
            type: string
          type: array
        source_attributes:
          items:
            type: string
          type: array
        regex:
          type: string
        value_expr:
          type: string
    OtelCollectorConfigDto:
      example:
        span_attributes:
        - attr_configs:
          - service: service
            namespace: namespace
            rules:
            - regex: regex
              span_kinds:
              - span_kinds
              - span_kinds
              value_expr: value_expr
              source_attributes:
              - source_attributes
              - source_attributes
            - regex: regex
              span_kinds:
              - span_kinds
              - span_kinds
              value_expr: value_expr
              source_attributes:
              - source_attributes
              - source_attributes
          - service: service
            namespace: namespace
            rules:
            - regex: regex
              span_kinds:
              - span_kinds
              - span_kinds
              value_expr: value_expr
              source_attributes:
              - source_attributes
              - source_attributes
            - regex: regex
              span_kinds:
              - span_kinds
              - span_kinds
              value_expr: value_expr
              source_attributes:
              - source_attributes
              - source_attributes
          attr_name: attr_name
        - attr_configs:
          - service: service
            namespace: namespace
            rules:
            - regex: regex
              span_kinds:
              - span_kinds
              - span_kinds
              value_expr: value_expr
              source_attributes:
              - source_attributes
              - source_attributes
            - regex: regex
              span_kinds:
              - span_kinds
              - span_kinds
              value_expr: value_expr
              source_attributes:
              - source_attributes
              - source_attributes
          - service: service
            namespace: namespace
            rules:
            - regex: regex
              span_kinds:
              - span_kinds
              - span_kinds
              value_expr: value_expr
              source_attributes:
              - source_attributes
              - source_attributes
            - regex: regex
              span_kinds:
              - span_kinds
              - span_kinds
              value_expr: value_expr
              source_attributes:
              - source_attributes
              - source_attributes
          attr_name: attr_name
        ignore_client_errors: true
        latency_histogram_buckets:
        - 6.027456183070403
        - 6.027456183070403
        sampling_latency_threshold_seconds: 0.8008281904610115
        attributes_as_metric_labels:
        - attributes_as_metric_labels
        - attributes_as_metric_labels
        capture_metrics: true
        custom_attributes:
          key:
            key:
            - regex: regex
              span_kinds:
              - span_kinds
              - span_kinds
              value_expr: value_expr
              source_attributes:
              - source_attributes
              - source_attributes
            - regex: regex
              span_kinds:
              - span_kinds
              - span_kinds
              value_expr: value_expr
              source_attributes:
              - source_attributes
              - source_attributes
      properties:
        capture_metrics:
          type: boolean
        custom_attributes:
          additionalProperties:
            additionalProperties:
              items:
                $ref: '#/components/schemas/CustomAttributeConfigDto'
        span_attributes:
          items:
            $ref: '#/components/schemas/SpanAttributeDto'
          type: array
        attributes_as_metric_labels:
          items:
            type: string
          type: array
        sampling_latency_threshold_seconds:
          format: double
          type: number
        latency_histogram_buckets:
          items:
            format: double
            type: number
          type: array
        ignore_client_errors:
          type: boolean
    SpanAttributeConfigDto:
      example:
        service: service
        namespace: namespace
        rules:
        - regex: regex
          span_kinds:
          - span_kinds
          - span_kinds
          value_expr: value_expr
          source_attributes:
          - source_attributes
          - source_attributes
        - regex: regex
          span_kinds:
          - span_kinds
          - span_kinds
          value_expr: value_expr
          source_attributes:
          - source_attributes
          - source_attributes
      properties:
        namespace:
          type: string
        service:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/CustomAttributeConfigDto'
          type: array
    SpanAttributeDto:
      example:
        attr_configs:
        - service: service
          namespace: namespace
          rules:
          - regex: regex
            span_kinds:
            - span_kinds
            - span_kinds
            value_expr: value_expr
            source_attributes:
            - source_attributes
            - source_attributes
          - regex: regex
            span_kinds:
            - span_kinds
            - span_kinds
            value_expr: value_expr
            source_attributes:
            - source_attributes
            - source_attributes
        - service: service
          namespace: namespace
          rules:
          - regex: regex
            span_kinds:
            - span_kinds
            - span_kinds
            value_expr: value_expr
            source_attributes:
            - source_attributes
            - source_attributes
          - regex: regex
            span_kinds:
            - span_kinds
            - span_kinds
            value_expr: value_expr
            source_attributes:
            - source_attributes
            - source_attributes
        attr_name: attr_name
      properties:
        attr_name:
          type: string
        attr_configs:
          items:
            $ref: '#/components/schemas/SpanAttributeConfigDto'
          type: array
    ConfigImportResultDto:
      example:
        failedConfigs:
          key:
          - failedConfigs
          - failedConfigs
      properties:
        failedConfigs:
          additionalProperties:
            items:
              type: string
    EnvironmentDto:
      example:
        logConfig:
          dateFormat: dateFormat
          labelToLogFieldMapping:
            key: labelToLogFieldMapping
          columns:
          - columns
          - columns
          query:
            key: query
          index: index
          filters:
          - key: ""
          - key: ""
          sort:
          - sort
          - sort
          httpResponseCodeField: httpResponseCodeField
          tool: tool
          url: url
          orgId: orgId
          indexMappings:
          - index: index
            labelMatchValues:
              key:
              - labelMatchValues
              - labelMatchValues
          - index: index
            labelMatchValues:
              key:
              - labelMatchValues
              - labelMatchValues
          correlationLabels: correlationLabels
          interval: interval
          defaultSearchText: defaultSearchText
          dataSource: dataSource
          errorFilter: errorFilter
        sitesForLog:
        - sitesForLog
        - sitesForLog
        defaultConfig: true
        name: name
        envsForLog:
        - envsForLog
        - envsForLog
      properties:
        name:
          type: string
        envsForLog:
          items:
            type: string
          type: array
          uniqueItems: true
        sitesForLog:
          items:
            type: string
          type: array
          uniqueItems: true
        logConfig:
          $ref: '#/components/schemas/LogConfigDto'
        defaultConfig:
          type: boolean
    IndexMappingDto:
      example:
        index: index
        labelMatchValues:
          key:
          - labelMatchValues
          - labelMatchValues
      properties:
        index:
          type: string
        labelMatchValues:
          additionalProperties:
            items:
              type: string
            uniqueItems: true
    LogConfigDto:
      example:
        dateFormat: dateFormat
        labelToLogFieldMapping:
          key: labelToLogFieldMapping
        columns:
        - columns
        - columns
        query:
          key: query
        index: index
        filters:
        - key: ""
        - key: ""
        sort:
        - sort
        - sort
        httpResponseCodeField: httpResponseCodeField
        tool: tool
        url: url
        orgId: orgId
        indexMappings:
        - index: index
          labelMatchValues:
            key:
            - labelMatchValues
            - labelMatchValues
        - index: index
          labelMatchValues:
            key:
            - labelMatchValues
            - labelMatchValues
        correlationLabels: correlationLabels
        interval: interval
        defaultSearchText: defaultSearchText
        dataSource: dataSource
        errorFilter: errorFilter
      properties:
        tool:
          type: string
        url:
          type: string
        dateFormat:
          type: string
        correlationLabels:
          type: string
        labelToLogFieldMapping:
          additionalProperties:
            type: string
        defaultSearchText:
          type: string
        errorFilter:
          type: string
        columns:
          items:
            type: string
          type: array
        filters:
          items:
            additionalProperties: {}
          type: array
        index:
          type: string
        indexMappings:
          items:
            $ref: '#/components/schemas/IndexMappingDto'
          type: array
        interval:
          type: string
        query:
          additionalProperties:
            type: string
        sort:
          items:
            type: string
          type: array
        httpResponseCodeField:
          type: string
        orgId:
          type: string
        dataSource:
          type: string
    KpiDisplayConfigDto:
      example:
        tracesView: true
        metricsView: true
        frontendO11yAppView: true
        runtimeDashboard: true
        logsView: true
        k8sAppView: true
        awsAppView: true
        frameworkDashboard: true
        defaultDashboard: true
        additionalDashboard: true
        propertiesView: true
        appO11yAppView: true
      properties:
        defaultDashboard:
          type: boolean
        additionalDashboard:
          type: boolean
        frameworkDashboard:
          type: boolean
        runtimeDashboard:
          type: boolean
        k8sAppView:
          type: boolean
        appO11yAppView:
          type: boolean
        frontendO11yAppView:
          type: boolean
        awsAppView:
          type: boolean
        logsView:
          type: boolean
        tracesView:
          type: boolean
        propertiesView:
          type: boolean
        metricsView:
          type: boolean
    EdgeDisplayConfigDto:
      example:
        color: color
      properties:
        color:
          type: string
    EntityDisplayConfigDto:
      example:
        color: color
        shape: shape
        icon: icon
      properties:
        color:
          type: string
        shape:
          type: string
        icon:
          type: string
    GraphDisplayConfigDto:
      example:
        entities:
          key:
            color: color
            shape: shape
            icon: icon
        edges:
          key:
            color: color
      properties:
        entities:
          additionalProperties:
            $ref: '#/components/schemas/EntityDisplayConfigDto'
        edges:
          additionalProperties:
            $ref: '#/components/schemas/EdgeDisplayConfigDto'
    DisabledAlertConfigDto:
      example:
        matchLabels:
          key: matchLabels
        name: name
      properties:
        name:
          type: string
        matchLabels:
          additionalProperties:
            type: string
    DisabledAlertConfigsDto:
      example:
        disabledAlertConfigs:
        - matchLabels:
            key: matchLabels
          name: name
        - matchLabels:
            key: matchLabels
          name: name
      properties:
        disabledAlertConfigs:
          items:
            $ref: '#/components/schemas/DisabledAlertConfigDto'
          type: array
    CustomDashConfigDto:
      example:
        dashboardUri: dashboardUri
        uid: uid
        dashParams:
          key: dashParams
        overrideEntityUri: true
        query: query
        dataSourceParam: dataSourceParam
        propertyMatchers:
        - op: op
          uom: MB
          name: name
          value: ""
        - op: op
          uom: MB
          name: name
          value: ""
        alertCategory:
        - alertCategory
        - alertCategory
      properties:
        dashboardUri:
          type: string
        uid:
          type: string
        query:
          type: string
        dashParams:
          additionalProperties:
            type: string
        dataSourceParam:
          type: string
        alertCategory:
          items:
            type: string
          type: array
        overrideEntityUri:
          type: boolean
        propertyMatchers:
          items:
            $ref: '#/components/schemas/PropertyMatcherDto'
          type: array
    AlertConfigDto:
      example:
        silenced: true
        matchLabels:
          key: matchLabels
        name: name
        for: for
        alertLabels:
          key: alertLabels
      properties:
        name:
          type: string
        matchLabels:
          additionalProperties:
            type: string
        alertLabels:
          additionalProperties:
            type: string
        silenced:
          type: boolean
        for:
          type: string
    AlertConfigsDto:
      example:
        alertConfigs:
        - silenced: true
          matchLabels:
            key: matchLabels
          name: name
          for: for
          alertLabels:
            key: alertLabels
        - silenced: true
          matchLabels:
            key: matchLabels
          name: name
          for: for
          alertLabels:
            key: alertLabels
      properties:
        alertConfigs:
          items:
            $ref: '#/components/schemas/AlertConfigDto'
          type: array
    AMReceiverEmail:
      example:
        headers:
          key: headers
        require_tls: true
        smarthost: smarthost
        auth_secret: auth_secret
        auth_password: auth_password
        auth_identity: auth_identity
        auth_username: auth_username
        from: from
        html: html
        tls_config:
          min_version: min_version
          server_name: server_name
          max_version: max_version
          ca_file: ca_file
          key_file: key_file
          cert_file: cert_file
          insecure_skip_verify: true
        to: to
        hello: hello
        text: text
        send_resolved: true
        auth_password_file: auth_password_file
      properties:
        to:
          type: string
        from:
          type: string
        smarthost:
          type: string
        hello:
          type: string
        html:
          type: string
        text:
          type: string
        headers:
          additionalProperties:
            type: string
        send_resolved:
          type: boolean
        auth_username:
          type: string
        auth_password:
          type: string
        auth_password_file:
          type: string
        auth_secret:
          type: string
        auth_identity:
          type: string
        require_tls:
          type: boolean
        tls_config:
          $ref: '#/components/schemas/AlertManagerTls'
    AMReceiverImage:
      example:
        alt: alt
        href: href
        source: source
      properties:
        href:
          type: string
        source:
          type: string
        alt:
          type: string
    AMReceiverLink:
      example:
        href: href
        text: text
      properties:
        href:
          type: string
        text:
          type: string
    AMReceiverOpsGenie:
      example:
        note: note
        api_url: api_url
        description: description
        source: source
        message: message
        priority: priority
        responders:
        - name: name
          id: id
          type: type
          username: username
        - name: name
          id: id
          type: type
          username: username
        tags: tags
        api_key: api_key
        update_alerts: true
        details:
          key: details
        send_resolved: true
        api_key_file: api_key_file
        http_config:
          authorization:
            credentials_file: credentials_file
            credentials: credentials
            type: type
          basic_auth:
            password: password
            password_file: password_file
            username: username
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          proxy_url: proxy_url
          follow_redirects: true
          oauth2:
            client_secret_file: client_secret_file
            endpoint_params:
              key: endpoint_params
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            scopes:
            - scopes
            - scopes
            client_secret: client_secret
            proxy_url: proxy_url
            token_url: token_url
            client_id: client_id
          enable_http2: true
        actions: actions
        entity: entity
      properties:
        message:
          type: string
        description:
          type: string
        source:
          type: string
        details:
          additionalProperties:
            type: string
        responders:
          items:
            $ref: '#/components/schemas/AlertManagerResponder'
          type: array
        tags:
          type: string
        note:
          type: string
        priority:
          type: string
        entity:
          type: string
        actions:
          type: string
        send_resolved:
          type: boolean
        api_key:
          type: string
        api_key_file:
          type: string
        api_url:
          type: string
        update_alerts:
          type: boolean
        http_config:
          $ref: '#/components/schemas/AlertManagerHttp'
    AMReceiverPagerDuty:
      example:
        severity: severity
        client_url: client_url
        service_key: service_key
        images:
        - alt: alt
          href: href
          source: source
        - alt: alt
          href: href
          source: source
        service_key_file: service_key_file
        description: description
        routing_key_file: routing_key_file
        source: source
        url: url
        component: component
        client: client
        details:
          key: details
        links:
        - href: href
          text: text
        - href: href
          text: text
        send_resolved: true
        routing_key: routing_key
        http_config:
          authorization:
            credentials_file: credentials_file
            credentials: credentials
            type: type
          basic_auth:
            password: password
            password_file: password_file
            username: username
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          proxy_url: proxy_url
          follow_redirects: true
          oauth2:
            client_secret_file: client_secret_file
            endpoint_params:
              key: endpoint_params
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            scopes:
            - scopes
            - scopes
            client_secret: client_secret
            proxy_url: proxy_url
            token_url: token_url
            client_id: client_id
          enable_http2: true
        class: class
        group: group
      properties:
        url:
          type: string
        client:
          type: string
        description:
          type: string
        severity:
          type: string
        source:
          type: string
        details:
          additionalProperties:
            type: string
        images:
          items:
            $ref: '#/components/schemas/AMReceiverImage'
          type: array
        links:
          items:
            $ref: '#/components/schemas/AMReceiverLink'
          type: array
        component:
          type: string
        group:
          type: string
        send_resolved:
          type: boolean
        routing_key:
          type: string
        routing_key_file:
          type: string
        service_key:
          type: string
        service_key_file:
          type: string
        client_url:
          type: string
        class:
          type: string
        http_config:
          $ref: '#/components/schemas/AlertManagerHttp'
    AMReceiverPushOver:
      example:
        expire: expire
        user_key: user_key
        send_resolved: true
        title: title
        message: message
        priority: priority
        http_config:
          authorization:
            credentials_file: credentials_file
            credentials: credentials
            type: type
          basic_auth:
            password: password
            password_file: password_file
            username: username
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          proxy_url: proxy_url
          follow_redirects: true
          oauth2:
            client_secret_file: client_secret_file
            endpoint_params:
              key: endpoint_params
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            scopes:
            - scopes
            - scopes
            client_secret: client_secret
            proxy_url: proxy_url
            token_url: token_url
            client_id: client_id
          enable_http2: true
        url: url
        retry: retry
        token: token
      properties:
        token:
          type: string
        title:
          type: string
        message:
          type: string
        url:
          type: string
        priority:
          type: string
        retry:
          type: string
        expire:
          type: string
        send_resolved:
          type: boolean
        user_key:
          type: string
        http_config:
          $ref: '#/components/schemas/AlertManagerHttp'
    AMReceiverSNS:
      example:
        api_url: api_url
        subject: subject
        topic_arn: topic_arn
        sigv4:
          secret_key: secret_key
          role_arn: role_arn
          profile: profile
          access_key: access_key
          region: region
        attributes:
          key: attributes
        phone_number: phone_number
        target_arn: target_arn
        send_resolved: true
        message: message
        http_config:
          authorization:
            credentials_file: credentials_file
            credentials: credentials
            type: type
          basic_auth:
            password: password
            password_file: password_file
            username: username
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          proxy_url: proxy_url
          follow_redirects: true
          oauth2:
            client_secret_file: client_secret_file
            endpoint_params:
              key: endpoint_params
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            scopes:
            - scopes
            - scopes
            client_secret: client_secret
            proxy_url: proxy_url
            token_url: token_url
            client_id: client_id
          enable_http2: true
      properties:
        sigv4:
          $ref: '#/components/schemas/AMReceiverSNSSigV4'
        subject:
          type: string
        message:
          type: string
        attributes:
          additionalProperties:
            type: string
        send_resolved:
          type: boolean
        api_url:
          type: string
        topic_arn:
          type: string
        phone_number:
          type: string
        target_arn:
          type: string
        http_config:
          $ref: '#/components/schemas/AlertManagerHttp'
    AMReceiverSNSSigV4:
      example:
        secret_key: secret_key
        role_arn: role_arn
        profile: profile
        access_key: access_key
        region: region
      properties:
        region:
          type: string
        profile:
          type: string
        access_key:
          type: string
        secret_key:
          type: string
        role_arn:
          type: string
    AMReceiverSlack:
      example:
        icon_url: icon_url
        thumb_url: thumb_url
        link_names: true
        color: color
        footer: footer
        api_url: api_url
        icon_emoji: icon_emoji
        callback_id: callback_id
        mrkdwn_in: mrkdwn_in
        image_url: image_url
        channel: channel
        title_link: title_link
        title: title
        httpConfig:
          authorization:
            credentials_file: credentials_file
            credentials: credentials
            type: type
          basic_auth:
            password: password
            password_file: password_file
            username: username
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          proxy_url: proxy_url
          follow_redirects: true
          oauth2:
            client_secret_file: client_secret_file
            endpoint_params:
              key: endpoint_params
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            scopes:
            - scopes
            - scopes
            client_secret: client_secret
            proxy_url: proxy_url
            token_url: token_url
            client_id: client_id
          enable_http2: true
        pretext: pretext
        api_url_file: api_url_file
        short_fields: short_fields
        text: text
        send_resolved: true
        fields:
        - short: true
          title: title
          value: value
        - short: true
          title: title
          value: value
        actions:
        - confirm:
            text: text
            dismiss_text: dismiss_text
            ok_text: ok_text
            title: title
          name: name
          style: style
          text: text
          type: type
          value: value
          url: url
        - confirm:
            text: text
            dismiss_text: dismiss_text
            ok_text: ok_text
            title: title
          name: name
          style: style
          text: text
          type: type
          value: value
          url: url
        fallback: fallback
        username: username
      properties:
        channel:
          type: string
        username:
          type: string
        actions:
          items:
            $ref: '#/components/schemas/AMReceiverSlackAction'
          type: array
        color:
          type: string
        fallback:
          type: string
        fields:
          items:
            $ref: '#/components/schemas/AMReceiverSlackField'
          type: array
        footer:
          type: string
        pretext:
          type: string
        text:
          type: string
        title:
          type: string
        httpConfig:
          $ref: '#/components/schemas/AlertManagerHttp'
        send_resolved:
          type: boolean
        api_url:
          type: string
        api_url_file:
          type: string
        icon_emoji:
          type: string
        icon_url:
          type: string
        link_names:
          type: boolean
        callback_id:
          type: string
        mrkdwn_in:
          type: string
        short_fields:
          type: string
        title_link:
          type: string
        image_url:
          type: string
        thumb_url:
          type: string
    AMReceiverSlackAction:
      example:
        confirm:
          text: text
          dismiss_text: dismiss_text
          ok_text: ok_text
          title: title
        name: name
        style: style
        text: text
        type: type
        value: value
        url: url
      properties:
        text:
          type: string
        type:
          type: string
        url:
          type: string
        name:
          type: string
        value:
          type: string
        confirm:
          $ref: '#/components/schemas/AMReceiverSlackActionConfirmField'
        style:
          type: string
    AMReceiverSlackActionConfirmField:
      example:
        text: text
        dismiss_text: dismiss_text
        ok_text: ok_text
        title: title
      properties:
        text:
          type: string
        title:
          type: string
        dismiss_text:
          type: string
        ok_text:
          type: string
    AMReceiverSlackField:
      example:
        short: true
        title: title
        value: value
      properties:
        title:
          type: string
        value:
          type: string
        short:
          type: boolean
    AMReceiverVictorOps:
      example:
        monitoring_tool: monitoring_tool
        api_key: api_key
        api_url: api_url
        message_type: message_type
        send_resolved: true
        api_key_file: api_key_file
        routing_key: routing_key
        entity_display_name: entity_display_name
        http_config:
          authorization:
            credentials_file: credentials_file
            credentials: credentials
            type: type
          basic_auth:
            password: password
            password_file: password_file
            username: username
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          proxy_url: proxy_url
          follow_redirects: true
          oauth2:
            client_secret_file: client_secret_file
            endpoint_params:
              key: endpoint_params
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            scopes:
            - scopes
            - scopes
            client_secret: client_secret
            proxy_url: proxy_url
            token_url: token_url
            client_id: client_id
          enable_http2: true
        state_message: state_message
      properties:
        send_resolved:
          type: boolean
        api_key:
          type: string
        api_key_file:
          type: string
        api_url:
          type: string
        routing_key:
          type: string
        message_type:
          type: string
        entity_display_name:
          type: string
        state_message:
          type: string
        monitoring_tool:
          type: string
        http_config:
          $ref: '#/components/schemas/AlertManagerHttp'
    AMReceiverWebhook:
      example:
        max_alerts: 0
        send_resolved: true
        http_config:
          authorization:
            credentials_file: credentials_file
            credentials: credentials
            type: type
          basic_auth:
            password: password
            password_file: password_file
            username: username
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          proxy_url: proxy_url
          follow_redirects: true
          oauth2:
            client_secret_file: client_secret_file
            endpoint_params:
              key: endpoint_params
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            scopes:
            - scopes
            - scopes
            client_secret: client_secret
            proxy_url: proxy_url
            token_url: token_url
            client_id: client_id
          enable_http2: true
        url: url
      properties:
        url:
          type: string
        send_resolved:
          type: boolean
        max_alerts:
          format: int32
          type: integer
        http_config:
          $ref: '#/components/schemas/AlertManagerHttp'
    AlertManagerAuthorization:
      example:
        credentials_file: credentials_file
        credentials: credentials
        type: type
      properties:
        type:
          type: string
        credentials:
          type: string
        credentials_file:
          type: string
    AlertManagerBasicAuth:
      example:
        password: password
        password_file: password_file
        username: username
      properties:
        username:
          type: string
        password:
          type: string
        password_file:
          type: string
    AlertManagerConfig:
      example:
        mute_time_intervals:
        - time_intervals:
          - times:
            - times
            - times
            months:
            - months
            - months
            weekdays:
            - weekdays
            - weekdays
            days_of_month:
            - days_of_month
            - days_of_month
            location: location
            years:
            - years
            - years
          - times:
            - times
            - times
            months:
            - months
            - months
            weekdays:
            - weekdays
            - weekdays
            days_of_month:
            - days_of_month
            - days_of_month
            location: location
            years:
            - years
            - years
          name: name
        - time_intervals:
          - times:
            - times
            - times
            months:
            - months
            - months
            weekdays:
            - weekdays
            - weekdays
            days_of_month:
            - days_of_month
            - days_of_month
            location: location
            years:
            - years
            - years
          - times:
            - times
            - times
            months:
            - months
            - months
            weekdays:
            - weekdays
            - weekdays
            days_of_month:
            - days_of_month
            - days_of_month
            location: location
            years:
            - years
            - years
          name: name
        route:
          mute_time_intervals:
          - mute_time_intervals
          - mute_time_intervals
          routes:
          - ""
          - ""
          group_interval: group_interval
          matchers:
          - matchers
          - matchers
          receiver: receiver
          continue: true
          group_wait: group_wait
          active_time_intervals:
          - active_time_intervals
          - active_time_intervals
          match:
            key: match
          group_by:
          - group_by
          - group_by
          repeat_interval: repeat_interval
          match_re:
            key: match_re
        time_intervals:
        - time_intervals:
          - times:
            - times
            - times
            months:
            - months
            - months
            weekdays:
            - weekdays
            - weekdays
            days_of_month:
            - days_of_month
            - days_of_month
            location: location
            years:
            - years
            - years
          - times:
            - times
            - times
            months:
            - months
            - months
            weekdays:
            - weekdays
            - weekdays
            days_of_month:
            - days_of_month
            - days_of_month
            location: location
            years:
            - years
            - years
          name: name
        - time_intervals:
          - times:
            - times
            - times
            months:
            - months
            - months
            weekdays:
            - weekdays
            - weekdays
            days_of_month:
            - days_of_month
            - days_of_month
            location: location
            years:
            - years
            - years
          - times:
            - times
            - times
            months:
            - months
            - months
            weekdays:
            - weekdays
            - weekdays
            days_of_month:
            - days_of_month
            - days_of_month
            location: location
            years:
            - years
            - years
          name: name
        receivers:
        - webex_configs:
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          sns_configs:
          - api_url: api_url
            subject: subject
            topic_arn: topic_arn
            sigv4:
              secret_key: secret_key
              role_arn: role_arn
              profile: profile
              access_key: access_key
              region: region
            attributes:
              key: attributes
            phone_number: phone_number
            target_arn: target_arn
            send_resolved: true
            message: message
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
          - api_url: api_url
            subject: subject
            topic_arn: topic_arn
            sigv4:
              secret_key: secret_key
              role_arn: role_arn
              profile: profile
              access_key: access_key
              region: region
            attributes:
              key: attributes
            phone_number: phone_number
            target_arn: target_arn
            send_resolved: true
            message: message
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
          victorops_configs:
          - monitoring_tool: monitoring_tool
            api_key: api_key
            api_url: api_url
            message_type: message_type
            send_resolved: true
            api_key_file: api_key_file
            routing_key: routing_key
            entity_display_name: entity_display_name
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            state_message: state_message
          - monitoring_tool: monitoring_tool
            api_key: api_key
            api_url: api_url
            message_type: message_type
            send_resolved: true
            api_key_file: api_key_file
            routing_key: routing_key
            entity_display_name: entity_display_name
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            state_message: state_message
          wechat_configs:
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          email_configs:
          - headers:
              key: headers
            require_tls: true
            smarthost: smarthost
            auth_secret: auth_secret
            auth_password: auth_password
            auth_identity: auth_identity
            auth_username: auth_username
            from: from
            html: html
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            to: to
            hello: hello
            text: text
            send_resolved: true
            auth_password_file: auth_password_file
          - headers:
              key: headers
            require_tls: true
            smarthost: smarthost
            auth_secret: auth_secret
            auth_password: auth_password
            auth_identity: auth_identity
            auth_username: auth_username
            from: from
            html: html
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            to: to
            hello: hello
            text: text
            send_resolved: true
            auth_password_file: auth_password_file
          slack_configs:
          - icon_url: icon_url
            thumb_url: thumb_url
            link_names: true
            color: color
            footer: footer
            api_url: api_url
            icon_emoji: icon_emoji
            callback_id: callback_id
            mrkdwn_in: mrkdwn_in
            image_url: image_url
            channel: channel
            title_link: title_link
            title: title
            httpConfig:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            pretext: pretext
            api_url_file: api_url_file
            short_fields: short_fields
            text: text
            send_resolved: true
            fields:
            - short: true
              title: title
              value: value
            - short: true
              title: title
              value: value
            actions:
            - confirm:
                text: text
                dismiss_text: dismiss_text
                ok_text: ok_text
                title: title
              name: name
              style: style
              text: text
              type: type
              value: value
              url: url
            - confirm:
                text: text
                dismiss_text: dismiss_text
                ok_text: ok_text
                title: title
              name: name
              style: style
              text: text
              type: type
              value: value
              url: url
            fallback: fallback
            username: username
          - icon_url: icon_url
            thumb_url: thumb_url
            link_names: true
            color: color
            footer: footer
            api_url: api_url
            icon_emoji: icon_emoji
            callback_id: callback_id
            mrkdwn_in: mrkdwn_in
            image_url: image_url
            channel: channel
            title_link: title_link
            title: title
            httpConfig:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            pretext: pretext
            api_url_file: api_url_file
            short_fields: short_fields
            text: text
            send_resolved: true
            fields:
            - short: true
              title: title
              value: value
            - short: true
              title: title
              value: value
            actions:
            - confirm:
                text: text
                dismiss_text: dismiss_text
                ok_text: ok_text
                title: title
              name: name
              style: style
              text: text
              type: type
              value: value
              url: url
            - confirm:
                text: text
                dismiss_text: dismiss_text
                ok_text: ok_text
                title: title
              name: name
              style: style
              text: text
              type: type
              value: value
              url: url
            fallback: fallback
            username: username
          webhook_configs:
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          telegram_configs:
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          name: name
          pushover_configs:
          - expire: expire
            user_key: user_key
            send_resolved: true
            title: title
            message: message
            priority: priority
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
            retry: retry
            token: token
          - expire: expire
            user_key: user_key
            send_resolved: true
            title: title
            message: message
            priority: priority
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
            retry: retry
            token: token
          pagerduty_configs:
          - severity: severity
            client_url: client_url
            service_key: service_key
            images:
            - alt: alt
              href: href
              source: source
            - alt: alt
              href: href
              source: source
            service_key_file: service_key_file
            description: description
            routing_key_file: routing_key_file
            source: source
            url: url
            component: component
            client: client
            details:
              key: details
            links:
            - href: href
              text: text
            - href: href
              text: text
            send_resolved: true
            routing_key: routing_key
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            class: class
            group: group
          - severity: severity
            client_url: client_url
            service_key: service_key
            images:
            - alt: alt
              href: href
              source: source
            - alt: alt
              href: href
              source: source
            service_key_file: service_key_file
            description: description
            routing_key_file: routing_key_file
            source: source
            url: url
            component: component
            client: client
            details:
              key: details
            links:
            - href: href
              text: text
            - href: href
              text: text
            send_resolved: true
            routing_key: routing_key
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            class: class
            group: group
          opsgenie_configs:
          - note: note
            api_url: api_url
            description: description
            source: source
            message: message
            priority: priority
            responders:
            - name: name
              id: id
              type: type
              username: username
            - name: name
              id: id
              type: type
              username: username
            tags: tags
            api_key: api_key
            update_alerts: true
            details:
              key: details
            send_resolved: true
            api_key_file: api_key_file
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            actions: actions
            entity: entity
          - note: note
            api_url: api_url
            description: description
            source: source
            message: message
            priority: priority
            responders:
            - name: name
              id: id
              type: type
              username: username
            - name: name
              id: id
              type: type
              username: username
            tags: tags
            api_key: api_key
            update_alerts: true
            details:
              key: details
            send_resolved: true
            api_key_file: api_key_file
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            actions: actions
            entity: entity
        - webex_configs:
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          sns_configs:
          - api_url: api_url
            subject: subject
            topic_arn: topic_arn
            sigv4:
              secret_key: secret_key
              role_arn: role_arn
              profile: profile
              access_key: access_key
              region: region
            attributes:
              key: attributes
            phone_number: phone_number
            target_arn: target_arn
            send_resolved: true
            message: message
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
          - api_url: api_url
            subject: subject
            topic_arn: topic_arn
            sigv4:
              secret_key: secret_key
              role_arn: role_arn
              profile: profile
              access_key: access_key
              region: region
            attributes:
              key: attributes
            phone_number: phone_number
            target_arn: target_arn
            send_resolved: true
            message: message
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
          victorops_configs:
          - monitoring_tool: monitoring_tool
            api_key: api_key
            api_url: api_url
            message_type: message_type
            send_resolved: true
            api_key_file: api_key_file
            routing_key: routing_key
            entity_display_name: entity_display_name
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            state_message: state_message
          - monitoring_tool: monitoring_tool
            api_key: api_key
            api_url: api_url
            message_type: message_type
            send_resolved: true
            api_key_file: api_key_file
            routing_key: routing_key
            entity_display_name: entity_display_name
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            state_message: state_message
          wechat_configs:
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          email_configs:
          - headers:
              key: headers
            require_tls: true
            smarthost: smarthost
            auth_secret: auth_secret
            auth_password: auth_password
            auth_identity: auth_identity
            auth_username: auth_username
            from: from
            html: html
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            to: to
            hello: hello
            text: text
            send_resolved: true
            auth_password_file: auth_password_file
          - headers:
              key: headers
            require_tls: true
            smarthost: smarthost
            auth_secret: auth_secret
            auth_password: auth_password
            auth_identity: auth_identity
            auth_username: auth_username
            from: from
            html: html
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            to: to
            hello: hello
            text: text
            send_resolved: true
            auth_password_file: auth_password_file
          slack_configs:
          - icon_url: icon_url
            thumb_url: thumb_url
            link_names: true
            color: color
            footer: footer
            api_url: api_url
            icon_emoji: icon_emoji
            callback_id: callback_id
            mrkdwn_in: mrkdwn_in
            image_url: image_url
            channel: channel
            title_link: title_link
            title: title
            httpConfig:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            pretext: pretext
            api_url_file: api_url_file
            short_fields: short_fields
            text: text
            send_resolved: true
            fields:
            - short: true
              title: title
              value: value
            - short: true
              title: title
              value: value
            actions:
            - confirm:
                text: text
                dismiss_text: dismiss_text
                ok_text: ok_text
                title: title
              name: name
              style: style
              text: text
              type: type
              value: value
              url: url
            - confirm:
                text: text
                dismiss_text: dismiss_text
                ok_text: ok_text
                title: title
              name: name
              style: style
              text: text
              type: type
              value: value
              url: url
            fallback: fallback
            username: username
          - icon_url: icon_url
            thumb_url: thumb_url
            link_names: true
            color: color
            footer: footer
            api_url: api_url
            icon_emoji: icon_emoji
            callback_id: callback_id
            mrkdwn_in: mrkdwn_in
            image_url: image_url
            channel: channel
            title_link: title_link
            title: title
            httpConfig:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            pretext: pretext
            api_url_file: api_url_file
            short_fields: short_fields
            text: text
            send_resolved: true
            fields:
            - short: true
              title: title
              value: value
            - short: true
              title: title
              value: value
            actions:
            - confirm:
                text: text
                dismiss_text: dismiss_text
                ok_text: ok_text
                title: title
              name: name
              style: style
              text: text
              type: type
              value: value
              url: url
            - confirm:
                text: text
                dismiss_text: dismiss_text
                ok_text: ok_text
                title: title
              name: name
              style: style
              text: text
              type: type
              value: value
              url: url
            fallback: fallback
            username: username
          webhook_configs:
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          telegram_configs:
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          - max_alerts: 0
            send_resolved: true
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
          name: name
          pushover_configs:
          - expire: expire
            user_key: user_key
            send_resolved: true
            title: title
            message: message
            priority: priority
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
            retry: retry
            token: token
          - expire: expire
            user_key: user_key
            send_resolved: true
            title: title
            message: message
            priority: priority
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            url: url
            retry: retry
            token: token
          pagerduty_configs:
          - severity: severity
            client_url: client_url
            service_key: service_key
            images:
            - alt: alt
              href: href
              source: source
            - alt: alt
              href: href
              source: source
            service_key_file: service_key_file
            description: description
            routing_key_file: routing_key_file
            source: source
            url: url
            component: component
            client: client
            details:
              key: details
            links:
            - href: href
              text: text
            - href: href
              text: text
            send_resolved: true
            routing_key: routing_key
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            class: class
            group: group
          - severity: severity
            client_url: client_url
            service_key: service_key
            images:
            - alt: alt
              href: href
              source: source
            - alt: alt
              href: href
              source: source
            service_key_file: service_key_file
            description: description
            routing_key_file: routing_key_file
            source: source
            url: url
            component: component
            client: client
            details:
              key: details
            links:
            - href: href
              text: text
            - href: href
              text: text
            send_resolved: true
            routing_key: routing_key
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            class: class
            group: group
          opsgenie_configs:
          - note: note
            api_url: api_url
            description: description
            source: source
            message: message
            priority: priority
            responders:
            - name: name
              id: id
              type: type
              username: username
            - name: name
              id: id
              type: type
              username: username
            tags: tags
            api_key: api_key
            update_alerts: true
            details:
              key: details
            send_resolved: true
            api_key_file: api_key_file
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            actions: actions
            entity: entity
          - note: note
            api_url: api_url
            description: description
            source: source
            message: message
            priority: priority
            responders:
            - name: name
              id: id
              type: type
              username: username
            - name: name
              id: id
              type: type
              username: username
            tags: tags
            api_key: api_key
            update_alerts: true
            details:
              key: details
            send_resolved: true
            api_key_file: api_key_file
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
            actions: actions
            entity: entity
        templates:
        - templates
        - templates
        global:
          smtp_hello: smtp_hello
          opsgenie_api_key: opsgenie_api_key
          smtp_from: smtp_from
          victorops_api_key: victorops_api_key
          slack_api_url_file: slack_api_url_file
          slack_api_url: slack_api_url
          smtp_auth_password: smtp_auth_password
          smtp_auth_identity: smtp_auth_identity
          pagerduty_url: pagerduty_url
          victorops_api_url: victorops_api_url
          victorops_api_key_file: victorops_api_key_file
          wechat_api_corp_id: wechat_api_corp_id
          telegram_api_url: telegram_api_url
          opsgenie_api_key_file: opsgenie_api_key_file
          resolve_timeout: resolve_timeout
          webex_api_url: webex_api_url
          smtp_smarthost: smtp_smarthost
          wechat_api_url: wechat_api_url
          wechat_api_secret: wechat_api_secret
          smtp_require_tls: true
          smtp_auth_secret: smtp_auth_secret
          smtp_auth_password_file: smtp_auth_password_file
          opsgenie_api_url: opsgenie_api_url
          smtp_auth_username: smtp_auth_username
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
        inhibit_rules:
        - equal:
          - equal
          - equal
          target_match:
            key: target_match
          source_match:
            key: source_match
          target_match_re:
            key: target_match_re
          source_match_re:
            key: source_match_re
          target_matchers:
          - target_matchers
          - target_matchers
          source_matchers:
          - source_matchers
          - source_matchers
        - equal:
          - equal
          - equal
          target_match:
            key: target_match
          source_match:
            key: source_match
          target_match_re:
            key: target_match_re
          source_match_re:
            key: source_match_re
          target_matchers:
          - target_matchers
          - target_matchers
          source_matchers:
          - source_matchers
          - source_matchers
      properties:
        global:
          $ref: '#/components/schemas/AlertManagerGlobal'
        templates:
          items:
            type: string
          type: array
        route:
          $ref: '#/components/schemas/AlertManagerRoute'
        receivers:
          items:
            $ref: '#/components/schemas/AlertManagerReceiver'
          type: array
        inhibit_rules:
          items:
            $ref: '#/components/schemas/AlertManagerInhibitRule'
          type: array
        mute_time_intervals:
          items:
            $ref: '#/components/schemas/AlertManagerNamedTimeInterval'
          type: array
        time_intervals:
          items:
            $ref: '#/components/schemas/AlertManagerNamedTimeInterval'
          type: array
    AlertManagerGlobal:
      example:
        smtp_hello: smtp_hello
        opsgenie_api_key: opsgenie_api_key
        smtp_from: smtp_from
        victorops_api_key: victorops_api_key
        slack_api_url_file: slack_api_url_file
        slack_api_url: slack_api_url
        smtp_auth_password: smtp_auth_password
        smtp_auth_identity: smtp_auth_identity
        pagerduty_url: pagerduty_url
        victorops_api_url: victorops_api_url
        victorops_api_key_file: victorops_api_key_file
        wechat_api_corp_id: wechat_api_corp_id
        telegram_api_url: telegram_api_url
        opsgenie_api_key_file: opsgenie_api_key_file
        resolve_timeout: resolve_timeout
        webex_api_url: webex_api_url
        smtp_smarthost: smtp_smarthost
        wechat_api_url: wechat_api_url
        wechat_api_secret: wechat_api_secret
        smtp_require_tls: true
        smtp_auth_secret: smtp_auth_secret
        smtp_auth_password_file: smtp_auth_password_file
        opsgenie_api_url: opsgenie_api_url
        smtp_auth_username: smtp_auth_username
        http_config:
          authorization:
            credentials_file: credentials_file
            credentials: credentials
            type: type
          basic_auth:
            password: password
            password_file: password_file
            username: username
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          proxy_url: proxy_url
          follow_redirects: true
          oauth2:
            client_secret_file: client_secret_file
            endpoint_params:
              key: endpoint_params
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            scopes:
            - scopes
            - scopes
            client_secret: client_secret
            proxy_url: proxy_url
            token_url: token_url
            client_id: client_id
          enable_http2: true
      properties:
        smtp_smarthost:
          type: string
        smtp_from:
          type: string
        smtp_hello:
          type: string
        smtp_auth_username:
          type: string
        smtp_auth_password:
          type: string
        smtp_auth_password_file:
          type: string
        smtp_auth_identity:
          type: string
        smtp_auth_secret:
          type: string
        smtp_require_tls:
          type: boolean
        slack_api_url:
          type: string
        slack_api_url_file:
          type: string
        victorops_api_key:
          type: string
        victorops_api_key_file:
          type: string
        victorops_api_url:
          type: string
        pagerduty_url:
          type: string
        opsgenie_api_key:
          type: string
        opsgenie_api_key_file:
          type: string
        opsgenie_api_url:
          type: string
        wechat_api_url:
          type: string
        wechat_api_secret:
          type: string
        wechat_api_corp_id:
          type: string
        telegram_api_url:
          type: string
        webex_api_url:
          type: string
        http_config:
          $ref: '#/components/schemas/AlertManagerHttp'
        resolve_timeout:
          type: string
    AlertManagerHttp:
      example:
        authorization:
          credentials_file: credentials_file
          credentials: credentials
          type: type
        basic_auth:
          password: password
          password_file: password_file
          username: username
        tls_config:
          min_version: min_version
          server_name: server_name
          max_version: max_version
          ca_file: ca_file
          key_file: key_file
          cert_file: cert_file
          insecure_skip_verify: true
        proxy_url: proxy_url
        follow_redirects: true
        oauth2:
          client_secret_file: client_secret_file
          endpoint_params:
            key: endpoint_params
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          scopes:
          - scopes
          - scopes
          client_secret: client_secret
          proxy_url: proxy_url
          token_url: token_url
          client_id: client_id
        enable_http2: true
      properties:
        authorization:
          $ref: '#/components/schemas/AlertManagerAuthorization'
        oauth2:
          $ref: '#/components/schemas/AlertManagerOAuth2'
        basic_auth:
          $ref: '#/components/schemas/AlertManagerBasicAuth'
        enable_http2:
          type: boolean
        proxy_url:
          type: string
        follow_redirects:
          type: boolean
        tls_config:
          $ref: '#/components/schemas/AlertManagerTls'
    AlertManagerInhibitRule:
      example:
        equal:
        - equal
        - equal
        target_match:
          key: target_match
        source_match:
          key: source_match
        target_match_re:
          key: target_match_re
        source_match_re:
          key: source_match_re
        target_matchers:
        - target_matchers
        - target_matchers
        source_matchers:
        - source_matchers
        - source_matchers
      properties:
        equal:
          items:
            type: string
          type: array
        target_match:
          additionalProperties:
            deprecated: true
            type: string
          deprecated: true
        target_match_re:
          additionalProperties:
            deprecated: true
            type: string
          deprecated: true
        target_matchers:
          items:
            type: string
          type: array
        source_match:
          additionalProperties:
            deprecated: true
            type: string
          deprecated: true
        source_match_re:
          additionalProperties:
            deprecated: true
            type: string
          deprecated: true
        source_matchers:
          items:
            type: string
          type: array
    AlertManagerNamedTimeInterval:
      example:
        time_intervals:
        - times:
          - times
          - times
          months:
          - months
          - months
          weekdays:
          - weekdays
          - weekdays
          days_of_month:
          - days_of_month
          - days_of_month
          location: location
          years:
          - years
          - years
        - times:
          - times
          - times
          months:
          - months
          - months
          weekdays:
          - weekdays
          - weekdays
          days_of_month:
          - days_of_month
          - days_of_month
          location: location
          years:
          - years
          - years
        name: name
      properties:
        name:
          type: string
        time_intervals:
          items:
            $ref: '#/components/schemas/AlertManagerTimeInterval'
          type: array
    AlertManagerOAuth2:
      example:
        client_secret_file: client_secret_file
        endpoint_params:
          key: endpoint_params
        tls_config:
          min_version: min_version
          server_name: server_name
          max_version: max_version
          ca_file: ca_file
          key_file: key_file
          cert_file: cert_file
          insecure_skip_verify: true
        scopes:
        - scopes
        - scopes
        client_secret: client_secret
        proxy_url: proxy_url
        token_url: token_url
        client_id: client_id
      properties:
        scopes:
          items:
            type: string
          type: array
        client_id:
          type: string
        client_secret:
          type: string
        client_secret_file:
          type: string
        token_url:
          type: string
        endpoint_params:
          additionalProperties:
            type: string
        tls_config:
          $ref: '#/components/schemas/AlertManagerTls'
        proxy_url:
          type: string
    AlertManagerReceiver:
      example:
        webex_configs:
        - max_alerts: 0
          send_resolved: true
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          url: url
        - max_alerts: 0
          send_resolved: true
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          url: url
        sns_configs:
        - api_url: api_url
          subject: subject
          topic_arn: topic_arn
          sigv4:
            secret_key: secret_key
            role_arn: role_arn
            profile: profile
            access_key: access_key
            region: region
          attributes:
            key: attributes
          phone_number: phone_number
          target_arn: target_arn
          send_resolved: true
          message: message
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
        - api_url: api_url
          subject: subject
          topic_arn: topic_arn
          sigv4:
            secret_key: secret_key
            role_arn: role_arn
            profile: profile
            access_key: access_key
            region: region
          attributes:
            key: attributes
          phone_number: phone_number
          target_arn: target_arn
          send_resolved: true
          message: message
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
        victorops_configs:
        - monitoring_tool: monitoring_tool
          api_key: api_key
          api_url: api_url
          message_type: message_type
          send_resolved: true
          api_key_file: api_key_file
          routing_key: routing_key
          entity_display_name: entity_display_name
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          state_message: state_message
        - monitoring_tool: monitoring_tool
          api_key: api_key
          api_url: api_url
          message_type: message_type
          send_resolved: true
          api_key_file: api_key_file
          routing_key: routing_key
          entity_display_name: entity_display_name
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          state_message: state_message
        wechat_configs:
        - max_alerts: 0
          send_resolved: true
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          url: url
        - max_alerts: 0
          send_resolved: true
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          url: url
        email_configs:
        - headers:
            key: headers
          require_tls: true
          smarthost: smarthost
          auth_secret: auth_secret
          auth_password: auth_password
          auth_identity: auth_identity
          auth_username: auth_username
          from: from
          html: html
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          to: to
          hello: hello
          text: text
          send_resolved: true
          auth_password_file: auth_password_file
        - headers:
            key: headers
          require_tls: true
          smarthost: smarthost
          auth_secret: auth_secret
          auth_password: auth_password
          auth_identity: auth_identity
          auth_username: auth_username
          from: from
          html: html
          tls_config:
            min_version: min_version
            server_name: server_name
            max_version: max_version
            ca_file: ca_file
            key_file: key_file
            cert_file: cert_file
            insecure_skip_verify: true
          to: to
          hello: hello
          text: text
          send_resolved: true
          auth_password_file: auth_password_file
        slack_configs:
        - icon_url: icon_url
          thumb_url: thumb_url
          link_names: true
          color: color
          footer: footer
          api_url: api_url
          icon_emoji: icon_emoji
          callback_id: callback_id
          mrkdwn_in: mrkdwn_in
          image_url: image_url
          channel: channel
          title_link: title_link
          title: title
          httpConfig:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          pretext: pretext
          api_url_file: api_url_file
          short_fields: short_fields
          text: text
          send_resolved: true
          fields:
          - short: true
            title: title
            value: value
          - short: true
            title: title
            value: value
          actions:
          - confirm:
              text: text
              dismiss_text: dismiss_text
              ok_text: ok_text
              title: title
            name: name
            style: style
            text: text
            type: type
            value: value
            url: url
          - confirm:
              text: text
              dismiss_text: dismiss_text
              ok_text: ok_text
              title: title
            name: name
            style: style
            text: text
            type: type
            value: value
            url: url
          fallback: fallback
          username: username
        - icon_url: icon_url
          thumb_url: thumb_url
          link_names: true
          color: color
          footer: footer
          api_url: api_url
          icon_emoji: icon_emoji
          callback_id: callback_id
          mrkdwn_in: mrkdwn_in
          image_url: image_url
          channel: channel
          title_link: title_link
          title: title
          httpConfig:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          pretext: pretext
          api_url_file: api_url_file
          short_fields: short_fields
          text: text
          send_resolved: true
          fields:
          - short: true
            title: title
            value: value
          - short: true
            title: title
            value: value
          actions:
          - confirm:
              text: text
              dismiss_text: dismiss_text
              ok_text: ok_text
              title: title
            name: name
            style: style
            text: text
            type: type
            value: value
            url: url
          - confirm:
              text: text
              dismiss_text: dismiss_text
              ok_text: ok_text
              title: title
            name: name
            style: style
            text: text
            type: type
            value: value
            url: url
          fallback: fallback
          username: username
        webhook_configs:
        - max_alerts: 0
          send_resolved: true
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          url: url
        - max_alerts: 0
          send_resolved: true
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          url: url
        telegram_configs:
        - max_alerts: 0
          send_resolved: true
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          url: url
        - max_alerts: 0
          send_resolved: true
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          url: url
        name: name
        pushover_configs:
        - expire: expire
          user_key: user_key
          send_resolved: true
          title: title
          message: message
          priority: priority
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          url: url
          retry: retry
          token: token
        - expire: expire
          user_key: user_key
          send_resolved: true
          title: title
          message: message
          priority: priority
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          url: url
          retry: retry
          token: token
        pagerduty_configs:
        - severity: severity
          client_url: client_url
          service_key: service_key
          images:
          - alt: alt
            href: href
            source: source
          - alt: alt
            href: href
            source: source
          service_key_file: service_key_file
          description: description
          routing_key_file: routing_key_file
          source: source
          url: url
          component: component
          client: client
          details:
            key: details
          links:
          - href: href
            text: text
          - href: href
            text: text
          send_resolved: true
          routing_key: routing_key
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          class: class
          group: group
        - severity: severity
          client_url: client_url
          service_key: service_key
          images:
          - alt: alt
            href: href
            source: source
          - alt: alt
            href: href
            source: source
          service_key_file: service_key_file
          description: description
          routing_key_file: routing_key_file
          source: source
          url: url
          component: component
          client: client
          details:
            key: details
          links:
          - href: href
            text: text
          - href: href
            text: text
          send_resolved: true
          routing_key: routing_key
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          class: class
          group: group
        opsgenie_configs:
        - note: note
          api_url: api_url
          description: description
          source: source
          message: message
          priority: priority
          responders:
          - name: name
            id: id
            type: type
            username: username
          - name: name
            id: id
            type: type
            username: username
          tags: tags
          api_key: api_key
          update_alerts: true
          details:
            key: details
          send_resolved: true
          api_key_file: api_key_file
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          actions: actions
          entity: entity
        - note: note
          api_url: api_url
          description: description
          source: source
          message: message
          priority: priority
          responders:
          - name: name
            id: id
            type: type
            username: username
          - name: name
            id: id
            type: type
            username: username
          tags: tags
          api_key: api_key
          update_alerts: true
          details:
            key: details
          send_resolved: true
          api_key_file: api_key_file
          http_config:
            authorization:
              credentials_file: credentials_file
              credentials: credentials
              type: type
            basic_auth:
              password: password
              password_file: password_file
              username: username
            tls_config:
              min_version: min_version
              server_name: server_name
              max_version: max_version
              ca_file: ca_file
              key_file: key_file
              cert_file: cert_file
              insecure_skip_verify: true
            proxy_url: proxy_url
            follow_redirects: true
            oauth2:
              client_secret_file: client_secret_file
              endpoint_params:
                key: endpoint_params
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              scopes:
              - scopes
              - scopes
              client_secret: client_secret
              proxy_url: proxy_url
              token_url: token_url
              client_id: client_id
            enable_http2: true
          actions: actions
          entity: entity
      properties:
        name:
          type: string
        email_configs:
          items:
            $ref: '#/components/schemas/AMReceiverEmail'
          type: array
        opsgenie_configs:
          items:
            $ref: '#/components/schemas/AMReceiverOpsGenie'
          type: array
        pagerduty_configs:
          items:
            $ref: '#/components/schemas/AMReceiverPagerDuty'
          type: array
        pushover_configs:
          items:
            $ref: '#/components/schemas/AMReceiverPushOver'
          type: array
        slack_configs:
          items:
            $ref: '#/components/schemas/AMReceiverSlack'
          type: array
        sns_configs:
          items:
            $ref: '#/components/schemas/AMReceiverSNS'
          type: array
        victorops_configs:
          items:
            $ref: '#/components/schemas/AMReceiverVictorOps'
          type: array
        webhook_configs:
          items:
            $ref: '#/components/schemas/AMReceiverWebhook'
          type: array
        wechat_configs:
          items:
            $ref: '#/components/schemas/AMReceiverWebhook'
          type: array
        telegram_configs:
          items:
            $ref: '#/components/schemas/AMReceiverWebhook'
          type: array
        webex_configs:
          items:
            $ref: '#/components/schemas/AMReceiverWebhook'
          type: array
    AlertManagerResponder:
      example:
        name: name
        id: id
        type: type
        username: username
      properties:
        id:
          type: string
        name:
          type: string
        username:
          type: string
        type:
          type: string
    AlertManagerRoute:
      example:
        mute_time_intervals:
        - mute_time_intervals
        - mute_time_intervals
        routes:
        - ""
        - ""
        group_interval: group_interval
        matchers:
        - matchers
        - matchers
        receiver: receiver
        continue: true
        group_wait: group_wait
        active_time_intervals:
        - active_time_intervals
        - active_time_intervals
        match:
          key: match
        group_by:
        - group_by
        - group_by
        repeat_interval: repeat_interval
        match_re:
          key: match_re
      properties:
        receiver:
          type: string
        match:
          additionalProperties:
            deprecated: true
            type: string
          deprecated: true
        matchers:
          items:
            type: string
          type: array
        routes:
          items: {}
          type: array
        group_by:
          items:
            type: string
          type: array
        continue:
          type: boolean
        match_re:
          additionalProperties:
            type: string
        group_wait:
          type: string
        group_interval:
          type: string
        repeat_interval:
          type: string
        mute_time_intervals:
          items:
            type: string
          type: array
        active_time_intervals:
          items:
            type: string
          type: array
    AlertManagerTimeInterval:
      example:
        times:
        - times
        - times
        months:
        - months
        - months
        weekdays:
        - weekdays
        - weekdays
        days_of_month:
        - days_of_month
        - days_of_month
        location: location
        years:
        - years
        - years
      properties:
        times:
          items:
            type: string
          type: array
        weekdays:
          items:
            type: string
          type: array
        months:
          items:
            type: string
          type: array
        years:
          items:
            type: string
          type: array
        location:
          type: string
        days_of_month:
          items:
            type: string
          type: array
    AlertManagerTls:
      example:
        min_version: min_version
        server_name: server_name
        max_version: max_version
        ca_file: ca_file
        key_file: key_file
        cert_file: cert_file
        insecure_skip_verify: true
      properties:
        ca_file:
          type: string
        cert_file:
          type: string
        key_file:
          type: string
        server_name:
          type: string
        insecure_skip_verify:
          type: boolean
        min_version:
          type: string
        max_version:
          type: string
    AssertionsRequestDto:
      example:
        entityKeys:
        - scope:
            key: ""
          name: name
          type: type
        - scope:
            key: ""
          name: name
          type: type
        includeConnectedAssertions: true
        hideAssertionsOlderThanNHours: 1
        alertCategories:
        - alertCategories
        - alertCategories
        startTime: 0
        endTime: 6
        hideAssertionsPresentMoreThanPercentageOfTime: 5
        severities:
        - severities
        - severities
      properties:
        startTime:
          format: int64
          type: integer
        endTime:
          format: int64
          type: integer
        entityKeys:
          items:
            $ref: '#/components/schemas/EntityKeyDto'
          type: array
          uniqueItems: true
        includeConnectedAssertions:
          type: boolean
        alertCategories:
          items:
            type: string
          type: array
          uniqueItems: true
        severities:
          items:
            type: string
          type: array
          uniqueItems: true
        hideAssertionsOlderThanNHours:
          format: int32
          type: integer
        hideAssertionsPresentMoreThanPercentageOfTime:
          format: int32
          type: integer
    LlmRcaSummaryReqDto:
      example:
        entityKeys:
        - scope:
            key: ""
          name: name
          type: type
        - scope:
            key: ""
          name: name
          type: type
        suggestionSrcEntities:
        - scope:
            key: ""
          name: name
          type: type
        - scope:
            key: ""
          name: name
          type: type
        hideAssertionsOlderThanNHours: 1
        alertCategories:
        - alertCategories
        - alertCategories
        startTime: 0
        includeSuggestions: true
        endTime: 6
        hideAssertionsPresentMoreThanPercentageOfTime: 5
      properties:
        startTime:
          format: int64
          type: integer
        endTime:
          format: int64
          type: integer
        entityKeys:
          items:
            $ref: '#/components/schemas/EntityKeyDto'
          minItems: 1
          type: array
          uniqueItems: true
        suggestionSrcEntities:
          items:
            $ref: '#/components/schemas/EntityKeyDto'
          type: array
          uniqueItems: true
        alertCategories:
          items:
            type: string
          type: array
          uniqueItems: true
        hideAssertionsOlderThanNHours:
          format: int32
          type: integer
        hideAssertionsPresentMoreThanPercentageOfTime:
          format: int32
          type: integer
        includeSuggestions:
          type: boolean
      required:
      - entityKeys
    EntityAssertionsGraphDto:
      example:
        data: ""
        timeCriteria:
          start: 1
          end: 5
        type: type
      properties:
        type:
          type: string
        timeCriteria:
          $ref: '#/components/schemas/TimeWindowDto'
        data: {}
    EntityAssertionMetricRequestDto:
      example:
        referenceForThreshold: true
        startTime: 0
        endTime: 6
        labels:
          key: labels
      properties:
        startTime:
          format: int64
          type: integer
        endTime:
          format: int64
          type: integer
        labels:
          additionalProperties:
            type: string
        referenceForThreshold:
          type: boolean
    EntityAssertionDetailsDto:
      example:
        timeWindow:
          start: 1
          end: 5
        thresholds:
        - values:
          - values:
            - 5.962133916683182
            - 5.962133916683182
            time: 1
          - values:
            - 5.962133916683182
            - 5.962133916683182
            time: 1
          fillZeros: true
          name: name
          type: type
          labels:
            key: labels
          lowerBoundQuery: lowerBoundQuery
          upperBoundQuery: upperBoundQuery
        - values:
          - values:
            - 5.962133916683182
            - 5.962133916683182
            time: 1
          - values:
            - 5.962133916683182
            - 5.962133916683182
            time: 1
          fillZeros: true
          name: name
          type: type
          labels:
            key: labels
          lowerBoundQuery: lowerBoundQuery
          upperBoundQuery: upperBoundQuery
        metrics:
        - metric:
            key: metric
          query: query
          fillZeros: true
          values:
          - time: 0
            value: 6.027456183070403
          - time: 0
            value: 6.027456183070403
          name: name
        - metric:
            key: metric
          query: query
          fillZeros: true
          values:
          - time: 0
            value: 6.027456183070403
          - time: 0
            value: 6.027456183070403
          name: name
        timeStepIntervalMs: 0
        notificationRuleName: notificationRuleName
      properties:
        timeWindow:
          $ref: '#/components/schemas/TimeWindowDto'
        timeStepIntervalMs:
          format: int64
          type: integer
        thresholds:
          items:
            $ref: '#/components/schemas/EntityAssertionDetailsDto_thresholds_inner'
          type: array
        metrics:
          items:
            $ref: '#/components/schemas/MetricDto'
          type: array
        notificationRuleName:
          type: string
    ThresholdDto:
      discriminator:
        propertyName: type
      properties:
        name:
          type: string
        labels:
          additionalProperties:
            type: string
        type:
          type: string
      required:
      - type
    ThresholdMinMaxDto:
      allOf:
      - $ref: '#/components/schemas/ThresholdDto'
      - properties:
          lowerBoundQuery:
            type: string
          upperBoundQuery:
            type: string
          values:
            items:
              $ref: '#/components/schemas/ThresholdValueMinMaxDto'
            type: array
          fillZeros:
            type: boolean
      example:
        values:
        - values:
          - 5.962133916683182
          - 5.962133916683182
          time: 1
        - values:
          - 5.962133916683182
          - 5.962133916683182
          time: 1
        fillZeros: true
        name: name
        type: type
        labels:
          key: labels
        lowerBoundQuery: lowerBoundQuery
        upperBoundQuery: upperBoundQuery
    AssertionScoreRequestDto:
      example:
        hideAssertionsOlderThanNHours: 1
        startMs: 0
        endMs: 6
        alertCategories:
        - alertCategories
        - alertCategories
        scopeCriteria:
          scopeCriteriaMap:
            key:
            - scopeCriteriaMap
            - scopeCriteriaMap
          nameAndValues:
            key:
            - nameAndValues
            - nameAndValues
        hideAssertionsPresentMoreThanPercentageOfTime: 5
      properties:
        startMs:
          format: int64
          type: integer
        endMs:
          format: int64
          type: integer
        hideAssertionsOlderThanNHours:
          format: int32
          type: integer
        alertCategories:
          items:
            type: string
          type: array
          uniqueItems: true
        scopeCriteria:
          $ref: '#/components/schemas/ScopeCriteriaDto'
        hideAssertionsPresentMoreThanPercentageOfTime:
          format: int32
          type: integer
    AssertionRollupDto:
      example:
        assertionCount: 6
        timelineIds:
        - 2
        - 2
        timelineHashes:
        - timelineHashes
        - timelineHashes
        scope:
          key: ""
        name: name
        pathsToLinkedGroups:
        - - 7
          - 7
        - - 7
          - 7
        pathHashesToLinkedGroups:
        - - pathHashesToLinkedGroups
          - pathHashesToLinkedGroups
        - - pathHashesToLinkedGroups
          - pathHashesToLinkedGroups
        warningCount: 1
        type: type
        criticalCount: 5
        infoCount: 5
        labels:
          key: labels
      properties:
        name:
          type: string
        type:
          type: string
        scope:
          additionalProperties: {}
        labels:
          additionalProperties:
            type: string
        assertionCount:
          format: int32
          type: integer
        warningCount:
          format: int32
          type: integer
        criticalCount:
          format: int32
          type: integer
        infoCount:
          format: int32
          type: integer
        timelineIds:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        timelineHashes:
          items:
            type: string
          type: array
          uniqueItems: true
        pathsToLinkedGroups:
          items:
            items:
              format: int64
              type: integer
            type: array
          type: array
          uniqueItems: true
        pathHashesToLinkedGroups:
          items:
            items:
              type: string
            type: array
          type: array
          uniqueItems: true
    AssertionScoresDto:
      example:
        timeWindow:
          start: 1
          end: 5
        assertionRollupDto:
        - assertionCount: 6
          timelineIds:
          - 2
          - 2
          timelineHashes:
          - timelineHashes
          - timelineHashes
          scope:
            key: ""
          name: name
          pathsToLinkedGroups:
          - - 7
            - 7
          - - 7
            - 7
          pathHashesToLinkedGroups:
          - - pathHashesToLinkedGroups
            - pathHashesToLinkedGroups
          - - pathHashesToLinkedGroups
            - pathHashesToLinkedGroups
          warningCount: 1
          type: type
          criticalCount: 5
          infoCount: 5
          labels:
            key: labels
        - assertionCount: 6
          timelineIds:
          - 2
          - 2
          timelineHashes:
          - timelineHashes
          - timelineHashes
          scope:
            key: ""
          name: name
          pathsToLinkedGroups:
          - - 7
            - 7
          - - 7
            - 7
          pathHashesToLinkedGroups:
          - - pathHashesToLinkedGroups
            - pathHashesToLinkedGroups
          - - pathHashesToLinkedGroups
            - pathHashesToLinkedGroups
          warningCount: 1
          type: type
          criticalCount: 5
          infoCount: 5
          labels:
            key: labels
        assertionScoresForTopNEntities:
        - assertionClusters:
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          severityWiseTotalScores:
            key: 7.061401241503109
          typeLabels:
            key: typeLabels
          scope:
            key: ""
          percentage: percentage
          name: name
          metrics:
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          type: type
          inboundClientErrorBreached: true
          totalScore: 2.3021358869347655
        - assertionClusters:
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          severityWiseTotalScores:
            key: 7.061401241503109
          typeLabels:
            key: typeLabels
          scope:
            key: ""
          percentage: percentage
          name: name
          metrics:
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          type: type
          inboundClientErrorBreached: true
          totalScore: 2.3021358869347655
        assertionScoresForRootEntity:
          assertionClusters:
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          - assertionSummaries:
            - summary: summary
              category: category
            - summary: summary
              category: category
            start: 9
            end: 3
          severityWiseTotalScores:
            key: 7.061401241503109
          typeLabels:
            key: typeLabels
          scope:
            key: ""
          percentage: percentage
          name: name
          metrics:
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          - metric:
              key: metric
            query: query
            fillZeros: true
            values:
            - time: 0
              value: 6.027456183070403
            - time: 0
              value: 6.027456183070403
            name: name
          type: type
          inboundClientErrorBreached: true
          totalScore: 2.3021358869347655
        graphData: ""
        timeStepIntervalMs: 0
      properties:
        timeWindow:
          $ref: '#/components/schemas/TimeWindowDto'
        timeStepIntervalMs:
          format: int64
          type: integer
        assertionScoresForRootEntity:
          $ref: '#/components/schemas/EntityAssertionScoresDto'
        assertionScoresForTopNEntities:
          items:
            $ref: '#/components/schemas/EntityAssertionScoresDto'
          type: array
        assertionRollupDto:
          items:
            $ref: '#/components/schemas/AssertionRollupDto'
          type: array
        graphData: {}
    AssertionInfoRequestDto:
      example:
        assertionName: assertionName
        labels:
          key: labels
      properties:
        assertionName:
          type: string
        labels:
          additionalProperties:
            type: string
    AssertionInfoDto:
      example:
        expression: expression
        name: name
        description: description
        interval: interval
        metrics:
        - help: help
          unit: unit
          name: name
          type: type
        - help: help
          unit: unit
          name: name
          type: type
        group: group
        labels:
          key: labels
      properties:
        name:
          type: string
        description:
          type: string
        group:
          type: string
        expression:
          type: string
        interval:
          type: string
        labels:
          additionalProperties:
            type: string
        metrics:
          items:
            $ref: '#/components/schemas/AssertionMetricDetailDto'
          type: array
    AssertionMetricDetailDto:
      example:
        help: help
        unit: unit
        name: name
        type: type
      properties:
        name:
          type: string
        type:
          type: string
        help:
          type: string
        unit:
          type: string
    AffectedEntityNamesDto:
      example:
        entityNames:
        - entityNames
        - entityNames
        totalCount: 0
      properties:
        entityNames:
          items:
            type: string
          type: array
        totalCount:
          format: int32
          type: integer
    AffectedEntityDetailDto:
      example:
        name: name
        extraLabels:
          key: extraLabels
      properties:
        name:
          type: string
        extraLabels:
          additionalProperties:
            type: string
    AffectedEntityDetailsDto:
      example:
        entities:
        - name: name
          extraLabels:
            key: extraLabels
        - name: name
          extraLabels:
            key: extraLabels
        totalCount: 0
      properties:
        entities:
          items:
            $ref: '#/components/schemas/AffectedEntityDetailDto'
          type: array
        totalCount:
          format: int32
          type: integer
    AllRulesDto:
      example:
        all:
          rules:
          - groups:
            - name: name
              interval: interval
              rules:
              - alert: alert
                record: record
                disableInGroups:
                - disableInGroups
                - disableInGroups
                for: for
                annotations:
                  empty: true
                expr: expr
                labels:
                  empty: true
              - alert: alert
                record: record
                disableInGroups:
                - disableInGroups
                - disableInGroups
                for: for
                annotations:
                  empty: true
                expr: expr
                labels:
                  empty: true
            - name: name
              interval: interval
              rules:
              - alert: alert
                record: record
                disableInGroups:
                - disableInGroups
                - disableInGroups
                for: for
                annotations:
                  empty: true
                expr: expr
                labels:
                  empty: true
              - alert: alert
                record: record
                disableInGroups:
                - disableInGroups
                - disableInGroups
                for: for
                annotations:
                  empty: true
                expr: expr
                labels:
                  empty: true
          - groups:
            - name: name
              interval: interval
              rules:
              - alert: alert
                record: record
                disableInGroups:
                - disableInGroups
                - disableInGroups
                for: for
                annotations:
                  empty: true
                expr: expr
                labels:
                  empty: true
              - alert: alert
                record: record
                disableInGroups:
                - disableInGroups
                - disableInGroups
                for: for
                annotations:
                  empty: true
                expr: expr
                labels:
                  empty: true
            - name: name
              interval: interval
              rules:
              - alert: alert
                record: record
                disableInGroups:
                - disableInGroups
                - disableInGroups
                for: for
                annotations:
                  empty: true
                expr: expr
                labels:
                  empty: true
              - alert: alert
                record: record
                disableInGroups:
                - disableInGroups
                - disableInGroups
                for: for
                annotations:
                  empty: true
                expr: expr
                labels:
                  empty: true
          version: version
        relabel:
          generated:
            ruleGroup:
              name: name
              vendor_lookup_query: vendor_lookup_query
              selector: selector
              rules:
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              dataset: dataset
              metric_regex:
              - metric_regex
              - metric_regex
              sanity_metric_regex:
              - sanity_metric_regex
              - sanity_metric_regex
              order: 0
            version: version
          epilogue:
            ruleGroup:
              name: name
              vendor_lookup_query: vendor_lookup_query
              selector: selector
              rules:
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              dataset: dataset
              metric_regex:
              - metric_regex
              - metric_regex
              sanity_metric_regex:
              - sanity_metric_regex
              - sanity_metric_regex
              order: 0
            version: version
          vendor:
          - ruleGroup:
              name: name
              vendor_lookup_query: vendor_lookup_query
              selector: selector
              rules:
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              dataset: dataset
              metric_regex:
              - metric_regex
              - metric_regex
              sanity_metric_regex:
              - sanity_metric_regex
              - sanity_metric_regex
              order: 0
            version: version
          - ruleGroup:
              name: name
              vendor_lookup_query: vendor_lookup_query
              selector: selector
              rules:
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              dataset: dataset
              metric_regex:
              - metric_regex
              - metric_regex
              sanity_metric_regex:
              - sanity_metric_regex
              - sanity_metric_regex
              order: 0
            version: version
          modelMapped:
          - ruleGroup:
              name: name
              vendor_lookup_query: vendor_lookup_query
              selector: selector
              rules:
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              dataset: dataset
              metric_regex:
              - metric_regex
              - metric_regex
              sanity_metric_regex:
              - sanity_metric_regex
              - sanity_metric_regex
              order: 0
            version: version
          - ruleGroup:
              name: name
              vendor_lookup_query: vendor_lookup_query
              selector: selector
              rules:
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              dataset: dataset
              metric_regex:
              - metric_regex
              - metric_regex
              sanity_metric_regex:
              - sanity_metric_regex
              - sanity_metric_regex
              order: 0
            version: version
          prologue:
            ruleGroup:
              name: name
              vendor_lookup_query: vendor_lookup_query
              selector: selector
              rules:
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              dataset: dataset
              metric_regex:
              - metric_regex
              - metric_regex
              sanity_metric_regex:
              - sanity_metric_regex
              - sanity_metric_regex
              order: 0
            version: version
          base:
          - ruleGroup:
              name: name
              vendor_lookup_query: vendor_lookup_query
              selector: selector
              rules:
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              dataset: dataset
              metric_regex:
              - metric_regex
              - metric_regex
              sanity_metric_regex:
              - sanity_metric_regex
              - sanity_metric_regex
              order: 0
            version: version
          - ruleGroup:
              name: name
              vendor_lookup_query: vendor_lookup_query
              selector: selector
              rules:
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              - drop: true
                join_separator: join_separator
                ranked_choice:
                - ranked_choice
                - ranked_choice
                join_labels:
                - join_labels
                - join_labels
                selector: selector
                transform_arg: transform_arg
                replacement: replacement
                transform_label: transform_label
                transform_operation: transform_operation
                target_label: target_label
              dataset: dataset
              metric_regex:
              - metric_regex
              - metric_regex
              sanity_metric_regex:
              - sanity_metric_regex
              - sanity_metric_regex
              order: 0
            version: version
          baseGroups:
          - baseGroups
          - baseGroups
      properties:
        all:
          $ref: '#/components/schemas/VersionedRulesPayload'
        relabel:
          $ref: '#/components/schemas/VersionedMimirRelabelRulesPayload'
    MimirRelabelRule:
      example:
        drop: true
        join_separator: join_separator
        ranked_choice:
        - ranked_choice
        - ranked_choice
        join_labels:
        - join_labels
        - join_labels
        selector: selector
        transform_arg: transform_arg
        replacement: replacement
        transform_label: transform_label
        transform_operation: transform_operation
        target_label: target_label
      properties:
        selector:
          type: string
        replacement:
          type: string
        drop:
          type: boolean
        join_labels:
          items:
            type: string
          type: array
        join_separator:
          type: string
        ranked_choice:
          items:
            type: string
          type: array
        transform_label:
          type: string
        transform_operation:
          type: string
        transform_arg:
          type: string
        target_label:
          type: string
    MimirRelabelRuleGroup:
      example:
        name: name
        vendor_lookup_query: vendor_lookup_query
        selector: selector
        rules:
        - drop: true
          join_separator: join_separator
          ranked_choice:
          - ranked_choice
          - ranked_choice
          join_labels:
          - join_labels
          - join_labels
          selector: selector
          transform_arg: transform_arg
          replacement: replacement
          transform_label: transform_label
          transform_operation: transform_operation
          target_label: target_label
        - drop: true
          join_separator: join_separator
          ranked_choice:
          - ranked_choice
          - ranked_choice
          join_labels:
          - join_labels
          - join_labels
          selector: selector
          transform_arg: transform_arg
          replacement: replacement
          transform_label: transform_label
          transform_operation: transform_operation
          target_label: target_label
        dataset: dataset
        metric_regex:
        - metric_regex
        - metric_regex
        sanity_metric_regex:
        - sanity_metric_regex
        - sanity_metric_regex
        order: 0
      properties:
        name:
          type: string
        order:
          format: int32
          type: integer
        selector:
          type: string
        dataset:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/MimirRelabelRule'
          type: array
        vendor_lookup_query:
          type: string
        metric_regex:
          items:
            type: string
          type: array
        sanity_metric_regex:
          items:
            type: string
          type: array
    VersionedMimirRelabelRuleGroup:
      example:
        ruleGroup:
          name: name
          vendor_lookup_query: vendor_lookup_query
          selector: selector
          rules:
          - drop: true
            join_separator: join_separator
            ranked_choice:
            - ranked_choice
            - ranked_choice
            join_labels:
            - join_labels
            - join_labels
            selector: selector
            transform_arg: transform_arg
            replacement: replacement
            transform_label: transform_label
            transform_operation: transform_operation
            target_label: target_label
          - drop: true
            join_separator: join_separator
            ranked_choice:
            - ranked_choice
            - ranked_choice
            join_labels:
            - join_labels
            - join_labels
            selector: selector
            transform_arg: transform_arg
            replacement: replacement
            transform_label: transform_label
            transform_operation: transform_operation
            target_label: target_label
          dataset: dataset
          metric_regex:
          - metric_regex
          - metric_regex
          sanity_metric_regex:
          - sanity_metric_regex
          - sanity_metric_regex
          order: 0
        version: version
      properties:
        version:
          type: string
        ruleGroup:
          $ref: '#/components/schemas/MimirRelabelRuleGroup'
    VersionedMimirRelabelRulesPayload:
      example:
        generated:
          ruleGroup:
            name: name
            vendor_lookup_query: vendor_lookup_query
            selector: selector
            rules:
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            dataset: dataset
            metric_regex:
            - metric_regex
            - metric_regex
            sanity_metric_regex:
            - sanity_metric_regex
            - sanity_metric_regex
            order: 0
          version: version
        epilogue:
          ruleGroup:
            name: name
            vendor_lookup_query: vendor_lookup_query
            selector: selector
            rules:
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            dataset: dataset
            metric_regex:
            - metric_regex
            - metric_regex
            sanity_metric_regex:
            - sanity_metric_regex
            - sanity_metric_regex
            order: 0
          version: version
        vendor:
        - ruleGroup:
            name: name
            vendor_lookup_query: vendor_lookup_query
            selector: selector
            rules:
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            dataset: dataset
            metric_regex:
            - metric_regex
            - metric_regex
            sanity_metric_regex:
            - sanity_metric_regex
            - sanity_metric_regex
            order: 0
          version: version
        - ruleGroup:
            name: name
            vendor_lookup_query: vendor_lookup_query
            selector: selector
            rules:
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            dataset: dataset
            metric_regex:
            - metric_regex
            - metric_regex
            sanity_metric_regex:
            - sanity_metric_regex
            - sanity_metric_regex
            order: 0
          version: version
        modelMapped:
        - ruleGroup:
            name: name
            vendor_lookup_query: vendor_lookup_query
            selector: selector
            rules:
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            dataset: dataset
            metric_regex:
            - metric_regex
            - metric_regex
            sanity_metric_regex:
            - sanity_metric_regex
            - sanity_metric_regex
            order: 0
          version: version
        - ruleGroup:
            name: name
            vendor_lookup_query: vendor_lookup_query
            selector: selector
            rules:
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            dataset: dataset
            metric_regex:
            - metric_regex
            - metric_regex
            sanity_metric_regex:
            - sanity_metric_regex
            - sanity_metric_regex
            order: 0
          version: version
        prologue:
          ruleGroup:
            name: name
            vendor_lookup_query: vendor_lookup_query
            selector: selector
            rules:
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            dataset: dataset
            metric_regex:
            - metric_regex
            - metric_regex
            sanity_metric_regex:
            - sanity_metric_regex
            - sanity_metric_regex
            order: 0
          version: version
        base:
        - ruleGroup:
            name: name
            vendor_lookup_query: vendor_lookup_query
            selector: selector
            rules:
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            dataset: dataset
            metric_regex:
            - metric_regex
            - metric_regex
            sanity_metric_regex:
            - sanity_metric_regex
            - sanity_metric_regex
            order: 0
          version: version
        - ruleGroup:
            name: name
            vendor_lookup_query: vendor_lookup_query
            selector: selector
            rules:
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            - drop: true
              join_separator: join_separator
              ranked_choice:
              - ranked_choice
              - ranked_choice
              join_labels:
              - join_labels
              - join_labels
              selector: selector
              transform_arg: transform_arg
              replacement: replacement
              transform_label: transform_label
              transform_operation: transform_operation
              target_label: target_label
            dataset: dataset
            metric_regex:
            - metric_regex
            - metric_regex
            sanity_metric_regex:
            - sanity_metric_regex
            - sanity_metric_regex
            order: 0
          version: version
        baseGroups:
        - baseGroups
        - baseGroups
      properties:
        generated:
          $ref: '#/components/schemas/VersionedMimirRelabelRuleGroup'
        prologue:
          $ref: '#/components/schemas/VersionedMimirRelabelRuleGroup'
        vendor:
          items:
            $ref: '#/components/schemas/VersionedMimirRelabelRuleGroup'
          type: array
        base:
          items:
            $ref: '#/components/schemas/VersionedMimirRelabelRuleGroup'
          type: array
        epilogue:
          $ref: '#/components/schemas/VersionedMimirRelabelRuleGroup'
        modelMapped:
          items:
            $ref: '#/components/schemas/VersionedMimirRelabelRuleGroup'
          type: array
        baseGroups:
          items:
            type: string
          type: array
          uniqueItems: true
    VersionedRulesPayload:
      example:
        rules:
        - groups:
          - name: name
            interval: interval
            rules:
            - alert: alert
              record: record
              disableInGroups:
              - disableInGroups
              - disableInGroups
              for: for
              annotations:
                empty: true
              expr: expr
              labels:
                empty: true
            - alert: alert
              record: record
              disableInGroups:
              - disableInGroups
              - disableInGroups
              for: for
              annotations:
                empty: true
              expr: expr
              labels:
                empty: true
          - name: name
            interval: interval
            rules:
            - alert: alert
              record: record
              disableInGroups:
              - disableInGroups
              - disableInGroups
              for: for
              annotations:
                empty: true
              expr: expr
              labels:
                empty: true
            - alert: alert
              record: record
              disableInGroups:
              - disableInGroups
              - disableInGroups
              for: for
              annotations:
                empty: true
              expr: expr
              labels:
                empty: true
        - groups:
          - name: name
            interval: interval
            rules:
            - alert: alert
              record: record
              disableInGroups:
              - disableInGroups
              - disableInGroups
              for: for
              annotations:
                empty: true
              expr: expr
              labels:
                empty: true
            - alert: alert
              record: record
              disableInGroups:
              - disableInGroups
              - disableInGroups
              for: for
              annotations:
                empty: true
              expr: expr
              labels:
                empty: true
          - name: name
            interval: interval
            rules:
            - alert: alert
              record: record
              disableInGroups:
              - disableInGroups
              - disableInGroups
              for: for
              annotations:
                empty: true
              expr: expr
              labels:
                empty: true
            - alert: alert
              record: record
              disableInGroups:
              - disableInGroups
              - disableInGroups
              for: for
              annotations:
                empty: true
              expr: expr
              labels:
                empty: true
        version: version
      properties:
        version:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/PrometheusRules'
          type: array
    DatasetSummaryDto:
      example:
        configured: true
        name: name
        detected: true
        enabled: true
      properties:
        name:
          type: string
        detected:
          type: boolean
        enabled:
          type: boolean
        configured:
          type: boolean
    DatasetsDto:
      example:
        items:
        - configured: true
          name: name
          detected: true
          enabled: true
        - configured: true
          name: name
          detected: true
          enabled: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/DatasetSummaryDto'
          type: array
    DatasetVendorDto:
      example:
        name: name
        detected: true
        enabled: true
      properties:
        detected:
          type: boolean
        enabled:
          type: boolean
        name:
          type: string
    DatasetVendorsDto:
      example:
        items:
        - name: name
          detected: true
          enabled: true
        - name: name
          detected: true
          enabled: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/DatasetVendorDto'
          type: array
    TenantLogConfigResponseDto:
      example:
        logDrilldownConfigs:
        - dataSourceUid: dataSourceUid
          filterByTraceId: true
          defaultConfig: true
          name: name
          match:
          - op: EQUALS
            values:
            - values
            - values
            property: property
          - op: EQUALS
            values:
            - values
            - values
            property: property
          entityPropertyToLogLabelMapping:
            key: entityPropertyToLogLabelMapping
          errorLabel: errorLabel
          filterBySpanId: true
        - dataSourceUid: dataSourceUid
          filterByTraceId: true
          defaultConfig: true
          name: name
          match:
          - op: EQUALS
            values:
            - values
            - values
            property: property
          - op: EQUALS
            values:
            - values
            - values
            property: property
          entityPropertyToLogLabelMapping:
            key: entityPropertyToLogLabelMapping
          errorLabel: errorLabel
          filterBySpanId: true
      properties:
        logDrilldownConfigs:
          items:
            $ref: '#/components/schemas/LogDrilldownConfigDto'
          type: array
    VersionDto:
      example:
        version: version
      properties:
        version:
          type: string
    VendorNamesDto:
      example:
        vendorNames:
        - vendorNames
        - vendorNames
      properties:
        vendorNames:
          items:
            type: string
          type: array
    StackDetailDto:
      example:
        orgSlug: orgSlug
        alertManagerConfigured: true
        stackId: 0
        useGrafanaManagedAlerts: true
        processAlertsInEnrichment: true
        version: 1
        orgId: 6
        enabled: true
        grafanaToken: grafanaToken
        gcomToken: gcomToken
        disabledTime: 2000-01-23T04:56:07.000+00:00
        slug: slug
        mimirToken: mimirToken
        assertionDetectorToken: assertionDetectorToken
        graphInstanceCreated: true
        status: status
      properties:
        stackId:
          format: int32
          type: integer
        slug:
          type: string
        orgId:
          format: int32
          type: integer
        orgSlug:
          type: string
        gcomToken:
          type: string
        mimirToken:
          type: string
        assertionDetectorToken:
          type: string
        grafanaToken:
          type: string
        enabled:
          type: boolean
        alertManagerConfigured:
          type: boolean
        graphInstanceCreated:
          type: boolean
        useGrafanaManagedAlerts:
          type: boolean
        processAlertsInEnrichment:
          type: boolean
        status:
          type: string
        disabledTime:
          format: date-time
          type: string
        version:
          format: int32
          type: integer
    VendorIntegrationDto:
      example:
        name: name
        enabled: true
        assertified: true
      properties:
        name:
          type: string
        enabled:
          type: boolean
        assertified:
          type: boolean
    VendorIntegrationsDto:
      example:
        items:
        - name: name
          enabled: true
          assertified: true
        - name: name
          enabled: true
          assertified: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/VendorIntegrationDto'
          type: array
    StackUpdateBucketDto:
      example:
        bucket: 0
        zoneOffset: zoneOffset
        startDay: startDay
        startTime: startTime
        durationFromStart: durationFromStart
        timestamp: timestamp
      properties:
        bucket:
          format: int32
          type: integer
        startDay:
          type: string
        durationFromStart:
          type: string
        startTime:
          type: string
        zoneOffset:
          type: string
        timestamp:
          type: string
    MetricSanityCheckDto:
      example:
        failedSanityCheckSteps:
        - stepResults:
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          checkName: checkName
          dataPresent: true
        - stepResults:
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          - troubleshoot: troubleshoot
            warnings:
            - warnings
            - warnings
            name: name
            blockers:
            - blockers
            - blockers
          checkName: checkName
          dataPresent: true
      properties:
        failedSanityCheckSteps:
          items:
            $ref: '#/components/schemas/MetricSanityCheckResult'
          type: array
    StackInfosDto:
      example:
        items:
        - orgSlug: orgSlug
          alertManagerConfigured: true
          stackId: 0
          useGrafanaManagedAlerts: true
          processAlertsInEnrichment: true
          orgId: 6
          enabled: true
          dormant: true
          gcomToken: gcomToken
          slug: slug
          mimirToken: mimirToken
          assertionDetectorToken: assertionDetectorToken
          graphInstanceCreated: true
        - orgSlug: orgSlug
          alertManagerConfigured: true
          stackId: 0
          useGrafanaManagedAlerts: true
          processAlertsInEnrichment: true
          orgId: 6
          enabled: true
          dormant: true
          gcomToken: gcomToken
          slug: slug
          mimirToken: mimirToken
          assertionDetectorToken: assertionDetectorToken
          graphInstanceCreated: true
      properties:
        items:
          items:
            $ref: '#/components/schemas/StackInfoDto'
          type: array
    SearchDefinitionItemDto:
      example:
        score: 5.637376656633329
        filterCriteria:
        - connectToEntityTypes:
          - connectToEntityTypes
          - connectToEntityTypes
          havingAssertion: true
          entityType: entityType
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
        - connectToEntityTypes:
          - connectToEntityTypes
          - connectToEntityTypes
          havingAssertion: true
          entityType: entityType
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
        bindings:
          key: ""
        boundDescription: boundDescription
        description: description
        id: id
        definitionId: 2
      properties:
        id:
          type: string
        score:
          format: double
          type: number
        definitionId:
          format: int32
          type: integer
        boundDescription:
          type: string
        description:
          type: string
        bindings:
          additionalProperties: {}
        filterCriteria:
          items:
            $ref: '#/components/schemas/EntityMatcherDto'
          type: array
    SearchDefinitionResponseDto:
      example:
        totalResults: 0
        pageResults: 6
        offset: 5
        maxResults: 1
        items:
        - score: 5.637376656633329
          filterCriteria:
          - connectToEntityTypes:
            - connectToEntityTypes
            - connectToEntityTypes
            havingAssertion: true
            entityType: entityType
            propertyMatchers:
            - op: op
              uom: MB
              name: name
              value: ""
            - op: op
              uom: MB
              name: name
              value: ""
          - connectToEntityTypes:
            - connectToEntityTypes
            - connectToEntityTypes
            havingAssertion: true
            entityType: entityType
            propertyMatchers:
            - op: op
              uom: MB
              name: name
              value: ""
            - op: op
              uom: MB
              name: name
              value: ""
          bindings:
            key: ""
          boundDescription: boundDescription
          description: description
          id: id
          definitionId: 2
        - score: 5.637376656633329
          filterCriteria:
          - connectToEntityTypes:
            - connectToEntityTypes
            - connectToEntityTypes
            havingAssertion: true
            entityType: entityType
            propertyMatchers:
            - op: op
              uom: MB
              name: name
              value: ""
            - op: op
              uom: MB
              name: name
              value: ""
          - connectToEntityTypes:
            - connectToEntityTypes
            - connectToEntityTypes
            havingAssertion: true
            entityType: entityType
            propertyMatchers:
            - op: op
              uom: MB
              name: name
              value: ""
            - op: op
              uom: MB
              name: name
              value: ""
          bindings:
            key: ""
          boundDescription: boundDescription
          description: description
          id: id
          definitionId: 2
      properties:
        totalResults:
          format: int64
          type: integer
        pageResults:
          format: int64
          type: integer
        maxResults:
          format: int64
          type: integer
        offset:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/SearchDefinitionItemDto'
          type: array
    AutoCompleteItemDto:
      example:
        string: string
        payload: payload
      properties:
        string:
          type: string
        payload:
          type: string
    AutoCompleteResponseDto:
      example:
        maxResults: 0
        index: index
        items:
        - string: string
          payload: payload
        - string: string
          payload: payload
        fuzzy: true
      properties:
        index:
          type: string
        maxResults:
          format: int32
          type: integer
        fuzzy:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/AutoCompleteItemDto'
          type: array
    VersionedAlertManagerPayload:
      example:
        version: version
        config:
          mute_time_intervals:
          - time_intervals:
            - times:
              - times
              - times
              months:
              - months
              - months
              weekdays:
              - weekdays
              - weekdays
              days_of_month:
              - days_of_month
              - days_of_month
              location: location
              years:
              - years
              - years
            - times:
              - times
              - times
              months:
              - months
              - months
              weekdays:
              - weekdays
              - weekdays
              days_of_month:
              - days_of_month
              - days_of_month
              location: location
              years:
              - years
              - years
            name: name
          - time_intervals:
            - times:
              - times
              - times
              months:
              - months
              - months
              weekdays:
              - weekdays
              - weekdays
              days_of_month:
              - days_of_month
              - days_of_month
              location: location
              years:
              - years
              - years
            - times:
              - times
              - times
              months:
              - months
              - months
              weekdays:
              - weekdays
              - weekdays
              days_of_month:
              - days_of_month
              - days_of_month
              location: location
              years:
              - years
              - years
            name: name
          route:
            mute_time_intervals:
            - mute_time_intervals
            - mute_time_intervals
            routes:
            - ""
            - ""
            group_interval: group_interval
            matchers:
            - matchers
            - matchers
            receiver: receiver
            continue: true
            group_wait: group_wait
            active_time_intervals:
            - active_time_intervals
            - active_time_intervals
            match:
              key: match
            group_by:
            - group_by
            - group_by
            repeat_interval: repeat_interval
            match_re:
              key: match_re
          time_intervals:
          - time_intervals:
            - times:
              - times
              - times
              months:
              - months
              - months
              weekdays:
              - weekdays
              - weekdays
              days_of_month:
              - days_of_month
              - days_of_month
              location: location
              years:
              - years
              - years
            - times:
              - times
              - times
              months:
              - months
              - months
              weekdays:
              - weekdays
              - weekdays
              days_of_month:
              - days_of_month
              - days_of_month
              location: location
              years:
              - years
              - years
            name: name
          - time_intervals:
            - times:
              - times
              - times
              months:
              - months
              - months
              weekdays:
              - weekdays
              - weekdays
              days_of_month:
              - days_of_month
              - days_of_month
              location: location
              years:
              - years
              - years
            - times:
              - times
              - times
              months:
              - months
              - months
              weekdays:
              - weekdays
              - weekdays
              days_of_month:
              - days_of_month
              - days_of_month
              location: location
              years:
              - years
              - years
            name: name
          receivers:
          - webex_configs:
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            sns_configs:
            - api_url: api_url
              subject: subject
              topic_arn: topic_arn
              sigv4:
                secret_key: secret_key
                role_arn: role_arn
                profile: profile
                access_key: access_key
                region: region
              attributes:
                key: attributes
              phone_number: phone_number
              target_arn: target_arn
              send_resolved: true
              message: message
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
            - api_url: api_url
              subject: subject
              topic_arn: topic_arn
              sigv4:
                secret_key: secret_key
                role_arn: role_arn
                profile: profile
                access_key: access_key
                region: region
              attributes:
                key: attributes
              phone_number: phone_number
              target_arn: target_arn
              send_resolved: true
              message: message
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
            victorops_configs:
            - monitoring_tool: monitoring_tool
              api_key: api_key
              api_url: api_url
              message_type: message_type
              send_resolved: true
              api_key_file: api_key_file
              routing_key: routing_key
              entity_display_name: entity_display_name
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              state_message: state_message
            - monitoring_tool: monitoring_tool
              api_key: api_key
              api_url: api_url
              message_type: message_type
              send_resolved: true
              api_key_file: api_key_file
              routing_key: routing_key
              entity_display_name: entity_display_name
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              state_message: state_message
            wechat_configs:
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            email_configs:
            - headers:
                key: headers
              require_tls: true
              smarthost: smarthost
              auth_secret: auth_secret
              auth_password: auth_password
              auth_identity: auth_identity
              auth_username: auth_username
              from: from
              html: html
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              to: to
              hello: hello
              text: text
              send_resolved: true
              auth_password_file: auth_password_file
            - headers:
                key: headers
              require_tls: true
              smarthost: smarthost
              auth_secret: auth_secret
              auth_password: auth_password
              auth_identity: auth_identity
              auth_username: auth_username
              from: from
              html: html
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              to: to
              hello: hello
              text: text
              send_resolved: true
              auth_password_file: auth_password_file
            slack_configs:
            - icon_url: icon_url
              thumb_url: thumb_url
              link_names: true
              color: color
              footer: footer
              api_url: api_url
              icon_emoji: icon_emoji
              callback_id: callback_id
              mrkdwn_in: mrkdwn_in
              image_url: image_url
              channel: channel
              title_link: title_link
              title: title
              httpConfig:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              pretext: pretext
              api_url_file: api_url_file
              short_fields: short_fields
              text: text
              send_resolved: true
              fields:
              - short: true
                title: title
                value: value
              - short: true
                title: title
                value: value
              actions:
              - confirm:
                  text: text
                  dismiss_text: dismiss_text
                  ok_text: ok_text
                  title: title
                name: name
                style: style
                text: text
                type: type
                value: value
                url: url
              - confirm:
                  text: text
                  dismiss_text: dismiss_text
                  ok_text: ok_text
                  title: title
                name: name
                style: style
                text: text
                type: type
                value: value
                url: url
              fallback: fallback
              username: username
            - icon_url: icon_url
              thumb_url: thumb_url
              link_names: true
              color: color
              footer: footer
              api_url: api_url
              icon_emoji: icon_emoji
              callback_id: callback_id
              mrkdwn_in: mrkdwn_in
              image_url: image_url
              channel: channel
              title_link: title_link
              title: title
              httpConfig:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              pretext: pretext
              api_url_file: api_url_file
              short_fields: short_fields
              text: text
              send_resolved: true
              fields:
              - short: true
                title: title
                value: value
              - short: true
                title: title
                value: value
              actions:
              - confirm:
                  text: text
                  dismiss_text: dismiss_text
                  ok_text: ok_text
                  title: title
                name: name
                style: style
                text: text
                type: type
                value: value
                url: url
              - confirm:
                  text: text
                  dismiss_text: dismiss_text
                  ok_text: ok_text
                  title: title
                name: name
                style: style
                text: text
                type: type
                value: value
                url: url
              fallback: fallback
              username: username
            webhook_configs:
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            telegram_configs:
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            name: name
            pushover_configs:
            - expire: expire
              user_key: user_key
              send_resolved: true
              title: title
              message: message
              priority: priority
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
              retry: retry
              token: token
            - expire: expire
              user_key: user_key
              send_resolved: true
              title: title
              message: message
              priority: priority
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
              retry: retry
              token: token
            pagerduty_configs:
            - severity: severity
              client_url: client_url
              service_key: service_key
              images:
              - alt: alt
                href: href
                source: source
              - alt: alt
                href: href
                source: source
              service_key_file: service_key_file
              description: description
              routing_key_file: routing_key_file
              source: source
              url: url
              component: component
              client: client
              details:
                key: details
              links:
              - href: href
                text: text
              - href: href
                text: text
              send_resolved: true
              routing_key: routing_key
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              class: class
              group: group
            - severity: severity
              client_url: client_url
              service_key: service_key
              images:
              - alt: alt
                href: href
                source: source
              - alt: alt
                href: href
                source: source
              service_key_file: service_key_file
              description: description
              routing_key_file: routing_key_file
              source: source
              url: url
              component: component
              client: client
              details:
                key: details
              links:
              - href: href
                text: text
              - href: href
                text: text
              send_resolved: true
              routing_key: routing_key
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              class: class
              group: group
            opsgenie_configs:
            - note: note
              api_url: api_url
              description: description
              source: source
              message: message
              priority: priority
              responders:
              - name: name
                id: id
                type: type
                username: username
              - name: name
                id: id
                type: type
                username: username
              tags: tags
              api_key: api_key
              update_alerts: true
              details:
                key: details
              send_resolved: true
              api_key_file: api_key_file
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              actions: actions
              entity: entity
            - note: note
              api_url: api_url
              description: description
              source: source
              message: message
              priority: priority
              responders:
              - name: name
                id: id
                type: type
                username: username
              - name: name
                id: id
                type: type
                username: username
              tags: tags
              api_key: api_key
              update_alerts: true
              details:
                key: details
              send_resolved: true
              api_key_file: api_key_file
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              actions: actions
              entity: entity
          - webex_configs:
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            sns_configs:
            - api_url: api_url
              subject: subject
              topic_arn: topic_arn
              sigv4:
                secret_key: secret_key
                role_arn: role_arn
                profile: profile
                access_key: access_key
                region: region
              attributes:
                key: attributes
              phone_number: phone_number
              target_arn: target_arn
              send_resolved: true
              message: message
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
            - api_url: api_url
              subject: subject
              topic_arn: topic_arn
              sigv4:
                secret_key: secret_key
                role_arn: role_arn
                profile: profile
                access_key: access_key
                region: region
              attributes:
                key: attributes
              phone_number: phone_number
              target_arn: target_arn
              send_resolved: true
              message: message
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
            victorops_configs:
            - monitoring_tool: monitoring_tool
              api_key: api_key
              api_url: api_url
              message_type: message_type
              send_resolved: true
              api_key_file: api_key_file
              routing_key: routing_key
              entity_display_name: entity_display_name
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              state_message: state_message
            - monitoring_tool: monitoring_tool
              api_key: api_key
              api_url: api_url
              message_type: message_type
              send_resolved: true
              api_key_file: api_key_file
              routing_key: routing_key
              entity_display_name: entity_display_name
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              state_message: state_message
            wechat_configs:
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            email_configs:
            - headers:
                key: headers
              require_tls: true
              smarthost: smarthost
              auth_secret: auth_secret
              auth_password: auth_password
              auth_identity: auth_identity
              auth_username: auth_username
              from: from
              html: html
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              to: to
              hello: hello
              text: text
              send_resolved: true
              auth_password_file: auth_password_file
            - headers:
                key: headers
              require_tls: true
              smarthost: smarthost
              auth_secret: auth_secret
              auth_password: auth_password
              auth_identity: auth_identity
              auth_username: auth_username
              from: from
              html: html
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              to: to
              hello: hello
              text: text
              send_resolved: true
              auth_password_file: auth_password_file
            slack_configs:
            - icon_url: icon_url
              thumb_url: thumb_url
              link_names: true
              color: color
              footer: footer
              api_url: api_url
              icon_emoji: icon_emoji
              callback_id: callback_id
              mrkdwn_in: mrkdwn_in
              image_url: image_url
              channel: channel
              title_link: title_link
              title: title
              httpConfig:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              pretext: pretext
              api_url_file: api_url_file
              short_fields: short_fields
              text: text
              send_resolved: true
              fields:
              - short: true
                title: title
                value: value
              - short: true
                title: title
                value: value
              actions:
              - confirm:
                  text: text
                  dismiss_text: dismiss_text
                  ok_text: ok_text
                  title: title
                name: name
                style: style
                text: text
                type: type
                value: value
                url: url
              - confirm:
                  text: text
                  dismiss_text: dismiss_text
                  ok_text: ok_text
                  title: title
                name: name
                style: style
                text: text
                type: type
                value: value
                url: url
              fallback: fallback
              username: username
            - icon_url: icon_url
              thumb_url: thumb_url
              link_names: true
              color: color
              footer: footer
              api_url: api_url
              icon_emoji: icon_emoji
              callback_id: callback_id
              mrkdwn_in: mrkdwn_in
              image_url: image_url
              channel: channel
              title_link: title_link
              title: title
              httpConfig:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              pretext: pretext
              api_url_file: api_url_file
              short_fields: short_fields
              text: text
              send_resolved: true
              fields:
              - short: true
                title: title
                value: value
              - short: true
                title: title
                value: value
              actions:
              - confirm:
                  text: text
                  dismiss_text: dismiss_text
                  ok_text: ok_text
                  title: title
                name: name
                style: style
                text: text
                type: type
                value: value
                url: url
              - confirm:
                  text: text
                  dismiss_text: dismiss_text
                  ok_text: ok_text
                  title: title
                name: name
                style: style
                text: text
                type: type
                value: value
                url: url
              fallback: fallback
              username: username
            webhook_configs:
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            telegram_configs:
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            - max_alerts: 0
              send_resolved: true
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
            name: name
            pushover_configs:
            - expire: expire
              user_key: user_key
              send_resolved: true
              title: title
              message: message
              priority: priority
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
              retry: retry
              token: token
            - expire: expire
              user_key: user_key
              send_resolved: true
              title: title
              message: message
              priority: priority
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              url: url
              retry: retry
              token: token
            pagerduty_configs:
            - severity: severity
              client_url: client_url
              service_key: service_key
              images:
              - alt: alt
                href: href
                source: source
              - alt: alt
                href: href
                source: source
              service_key_file: service_key_file
              description: description
              routing_key_file: routing_key_file
              source: source
              url: url
              component: component
              client: client
              details:
                key: details
              links:
              - href: href
                text: text
              - href: href
                text: text
              send_resolved: true
              routing_key: routing_key
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              class: class
              group: group
            - severity: severity
              client_url: client_url
              service_key: service_key
              images:
              - alt: alt
                href: href
                source: source
              - alt: alt
                href: href
                source: source
              service_key_file: service_key_file
              description: description
              routing_key_file: routing_key_file
              source: source
              url: url
              component: component
              client: client
              details:
                key: details
              links:
              - href: href
                text: text
              - href: href
                text: text
              send_resolved: true
              routing_key: routing_key
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              class: class
              group: group
            opsgenie_configs:
            - note: note
              api_url: api_url
              description: description
              source: source
              message: message
              priority: priority
              responders:
              - name: name
                id: id
                type: type
                username: username
              - name: name
                id: id
                type: type
                username: username
              tags: tags
              api_key: api_key
              update_alerts: true
              details:
                key: details
              send_resolved: true
              api_key_file: api_key_file
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              actions: actions
              entity: entity
            - note: note
              api_url: api_url
              description: description
              source: source
              message: message
              priority: priority
              responders:
              - name: name
                id: id
                type: type
                username: username
              - name: name
                id: id
                type: type
                username: username
              tags: tags
              api_key: api_key
              update_alerts: true
              details:
                key: details
              send_resolved: true
              api_key_file: api_key_file
              http_config:
                authorization:
                  credentials_file: credentials_file
                  credentials: credentials
                  type: type
                basic_auth:
                  password: password
                  password_file: password_file
                  username: username
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                proxy_url: proxy_url
                follow_redirects: true
                oauth2:
                  client_secret_file: client_secret_file
                  endpoint_params:
                    key: endpoint_params
                  tls_config:
                    min_version: min_version
                    server_name: server_name
                    max_version: max_version
                    ca_file: ca_file
                    key_file: key_file
                    cert_file: cert_file
                    insecure_skip_verify: true
                  scopes:
                  - scopes
                  - scopes
                  client_secret: client_secret
                  proxy_url: proxy_url
                  token_url: token_url
                  client_id: client_id
                enable_http2: true
              actions: actions
              entity: entity
          templates:
          - templates
          - templates
          global:
            smtp_hello: smtp_hello
            opsgenie_api_key: opsgenie_api_key
            smtp_from: smtp_from
            victorops_api_key: victorops_api_key
            slack_api_url_file: slack_api_url_file
            slack_api_url: slack_api_url
            smtp_auth_password: smtp_auth_password
            smtp_auth_identity: smtp_auth_identity
            pagerduty_url: pagerduty_url
            victorops_api_url: victorops_api_url
            victorops_api_key_file: victorops_api_key_file
            wechat_api_corp_id: wechat_api_corp_id
            telegram_api_url: telegram_api_url
            opsgenie_api_key_file: opsgenie_api_key_file
            resolve_timeout: resolve_timeout
            webex_api_url: webex_api_url
            smtp_smarthost: smtp_smarthost
            wechat_api_url: wechat_api_url
            wechat_api_secret: wechat_api_secret
            smtp_require_tls: true
            smtp_auth_secret: smtp_auth_secret
            smtp_auth_password_file: smtp_auth_password_file
            opsgenie_api_url: opsgenie_api_url
            smtp_auth_username: smtp_auth_username
            http_config:
              authorization:
                credentials_file: credentials_file
                credentials: credentials
                type: type
              basic_auth:
                password: password
                password_file: password_file
                username: username
              tls_config:
                min_version: min_version
                server_name: server_name
                max_version: max_version
                ca_file: ca_file
                key_file: key_file
                cert_file: cert_file
                insecure_skip_verify: true
              proxy_url: proxy_url
              follow_redirects: true
              oauth2:
                client_secret_file: client_secret_file
                endpoint_params:
                  key: endpoint_params
                tls_config:
                  min_version: min_version
                  server_name: server_name
                  max_version: max_version
                  ca_file: ca_file
                  key_file: key_file
                  cert_file: cert_file
                  insecure_skip_verify: true
                scopes:
                - scopes
                - scopes
                client_secret: client_secret
                proxy_url: proxy_url
                token_url: token_url
                client_id: client_id
              enable_http2: true
          inhibit_rules:
          - equal:
            - equal
            - equal
            target_match:
              key: target_match
            source_match:
              key: source_match
            target_match_re:
              key: target_match_re
            source_match_re:
              key: source_match_re
            target_matchers:
            - target_matchers
            - target_matchers
            source_matchers:
            - source_matchers
            - source_matchers
          - equal:
            - equal
            - equal
            target_match:
              key: target_match
            source_match:
              key: source_match
            target_match_re:
              key: target_match_re
            source_match_re:
              key: source_match_re
            target_matchers:
            - target_matchers
            - target_matchers
            source_matchers:
            - source_matchers
            - source_matchers
      properties:
        version:
          type: string
        config:
          $ref: '#/components/schemas/AlertManagerConfig'
    EntityKpiScopeDto:
      example:
        type: type
        kpis:
        - kpis
        - kpis
      properties:
        type:
          type: string
        kpis:
          items:
            type: string
          type: array
    KpiGroupDto:
      example:
        name: name
        kpis:
        - unit: unit
          displayName: displayName
          name: name
        - unit: unit
          displayName: displayName
          name: name
      properties:
        name:
          type: string
        kpis:
          items:
            $ref: '#/components/schemas/KpiNameDto'
          type: array
    KpiListDto:
      example:
        kpiGroups:
        - name: name
          kpis:
          - unit: unit
            displayName: displayName
            name: name
          - unit: unit
            displayName: displayName
            name: name
        - name: name
          kpis:
          - unit: unit
            displayName: displayName
            name: name
          - unit: unit
            displayName: displayName
            name: name
        kpisByEntityType:
        - type: type
          kpis:
          - kpis
          - kpis
        - type: type
          kpis:
          - kpis
          - kpis
      properties:
        kpiGroups:
          items:
            $ref: '#/components/schemas/KpiGroupDto'
          type: array
        kpisByEntityType:
          items:
            $ref: '#/components/schemas/EntityKpiScopeDto'
          type: array
    KpiNameDto:
      example:
        unit: unit
        displayName: displayName
        name: name
      properties:
        name:
          type: string
        displayName:
          type: string
        unit:
          type: string
    EntityPropertyDto:
      example:
        uom: MB
        name: name
        type: type
      properties:
        name:
          type: string
        type:
          type: string
        uom:
          enum:
          - MB
          - GB
          - '%'
          type: string
    EntityTypeDto:
      example:
        lookup:
          key: lookup
        entityType: entityType
        created: 0
        name: name
        connectedEntityTypes:
        - connectedEntityTypes
        - connectedEntityTypes
        active: true
        updated: 6
        properties:
        - uom: MB
          name: name
          type: type
        - uom: MB
          name: name
          type: type
      properties:
        entityType:
          type: string
        name:
          type: string
        lookup:
          additionalProperties:
            type: string
        properties:
          items:
            $ref: '#/components/schemas/EntityPropertyDto'
          type: array
        created:
          format: int64
          type: integer
        updated:
          format: int64
          type: integer
        active:
          type: boolean
        connectedEntityTypes:
          items:
            type: string
          type: array
    EntityTypesDto:
      example:
        entities:
        - lookup:
            key: lookup
          entityType: entityType
          created: 0
          name: name
          connectedEntityTypes:
          - connectedEntityTypes
          - connectedEntityTypes
          active: true
          updated: 6
          properties:
          - uom: MB
            name: name
            type: type
          - uom: MB
            name: name
            type: type
        - lookup:
            key: lookup
          entityType: entityType
          created: 0
          name: name
          connectedEntityTypes:
          - connectedEntityTypes
          - connectedEntityTypes
          active: true
          updated: 6
          properties:
          - uom: MB
            name: name
            type: type
          - uom: MB
            name: name
            type: type
      properties:
        entities:
          items:
            $ref: '#/components/schemas/EntityTypeDto'
          type: array
    GraphEntity:
      example:
        assertionCount: 1
        active: true
        type: type
        scopeNames:
          key: ""
        scope:
          empty: true
        name: name
        connectedEntityTypes:
          key: 6
        assertion:
          severity: severity
          amend: true
          assertions:
          - severity: severity
            entityType: entityType
            assertionName: assertionName
            category: category
          - severity: severity
            entityType: entityType
            assertionName: assertionName
            category: category
        id: 0
        propertyMatcher:
          key: ""
        properties:
          key: ""
        key:
          kgScope:
            scopeNames:
              key: ""
            scope:
              empty: true
            propertyMatcher:
              key: ""
          name: name
          type: type
        connectedAssertion:
          severity: severity
          amend: true
          assertions:
          - severity: severity
            entityType: entityType
            assertionName: assertionName
            category: category
          - severity: severity
            entityType: entityType
            assertionName: assertionName
            category: category
      properties:
        id:
          format: int64
          type: integer
        type:
          type: string
        name:
          type: string
        active:
          type: boolean
        connectedEntityTypes:
          additionalProperties:
            format: int32
            type: integer
        properties:
          additionalProperties: {}
        propertyMatcher:
          additionalProperties: {}
        scopeNames:
          additionalProperties: {}
        scope:
          $ref: '#/components/schemas/GraphEntity_scope'
        assertion:
          $ref: '#/components/schemas/GraphAssertionSummary'
        connectedAssertion:
          $ref: '#/components/schemas/GraphAssertionSummary'
        assertionCount:
          format: int32
          type: integer
        key:
          $ref: '#/components/schemas/KGEntityKey'
    KGEntityKey:
      example:
        kgScope:
          scopeNames:
            key: ""
          scope:
            empty: true
          propertyMatcher:
            key: ""
        name: name
        type: type
      properties:
        type:
          type: string
        name:
          type: string
        kgScope:
          $ref: '#/components/schemas/KGScope'
    KGScope:
      example:
        scopeNames:
          key: ""
        scope:
          empty: true
        propertyMatcher:
          key: ""
      properties:
        propertyMatcher:
          additionalProperties: {}
        scopeNames:
          additionalProperties: {}
        scope:
          $ref: '#/components/schemas/GraphEntity_scope'
    TraceEnvConfigResponseDto:
      example:
        supportedTraceTools:
        - supportedTraceTools
        - supportedTraceTools
        traceEnvConfigDtos:
        - envsForTrace:
          - envsForTrace
          - envsForTrace
          traceConfig:
            ingestedByAgent: true
            awsRegion: awsRegion
            suffixServiceWithNamespace: true
            addOutboundContext: true
            tool: tool
            url: url
            labelToTagMapping:
              key: labelToTagMapping
            orgId: orgId
            operationLabel: operationLabel
            assertsCollector: true
            isElasticBackend: true
            projectName: projectName
            dataSource: dataSource
            serviceLabel: serviceLabel
          defaultConfig: true
          name: name
          sitesForTrace:
          - sitesForTrace
          - sitesForTrace
        - envsForTrace:
          - envsForTrace
          - envsForTrace
          traceConfig:
            ingestedByAgent: true
            awsRegion: awsRegion
            suffixServiceWithNamespace: true
            addOutboundContext: true
            tool: tool
            url: url
            labelToTagMapping:
              key: labelToTagMapping
            orgId: orgId
            operationLabel: operationLabel
            assertsCollector: true
            isElasticBackend: true
            projectName: projectName
            dataSource: dataSource
            serviceLabel: serviceLabel
          defaultConfig: true
          name: name
          sitesForTrace:
          - sitesForTrace
          - sitesForTrace
      properties:
        traceEnvConfigDtos:
          items:
            $ref: '#/components/schemas/TraceEnvConfigDto'
          type: array
        supportedTraceTools:
          items:
            type: string
          type: array
    ThresholdRulesDto:
      example:
        globalThresholds:
        - alert: alert
          record: record
          disableInGroups:
          - disableInGroups
          - disableInGroups
          for: for
          active: true
          annotations:
            key: annotations
          expr: expr
          labels:
            key: labels
        - alert: alert
          record: record
          disableInGroups:
          - disableInGroups
          - disableInGroups
          for: for
          active: true
          annotations:
            key: annotations
          expr: expr
          labels:
            key: labels
        customThresholds:
        - alert: alert
          record: record
          disableInGroups:
          - disableInGroups
          - disableInGroups
          for: for
          active: true
          annotations:
            key: annotations
          expr: expr
          labels:
            key: labels
        - alert: alert
          record: record
          disableInGroups:
          - disableInGroups
          - disableInGroups
          for: for
          active: true
          annotations:
            key: annotations
          expr: expr
          labels:
            key: labels
      properties:
        globalThresholds:
          items:
            $ref: '#/components/schemas/PrometheusRuleDto'
          type: array
        customThresholds:
          items:
            $ref: '#/components/schemas/PrometheusRuleDto'
          type: array
    SloConfigResponseDto:
      example:
        indicator:
          thresholdComparator: thresholdComparator
          kind: kind
          name: name
          measurement: measurement
        entitySearch: entitySearch
        name: name
        active: true
        objectives:
        - name: name
          window:
            kind: kind
            days: 1
          value: 6.027456183070403
          ratio: 0.8008281904610115
        - name: name
          window:
            kind: kind
            days: 1
          value: 6.027456183070403
          ratio: 0.8008281904610115
        status: status
      properties:
        active:
          type: boolean
        name:
          type: string
        status:
          type: string
        indicator:
          $ref: '#/components/schemas/SloConfigRequestDto_indicator'
        objectives:
          items:
            $ref: '#/components/schemas/SloConfigDto'
          type: array
        entitySearch:
          type: string
    RuleNamesDto:
      example:
        ruleNames:
        - ruleNames
        - ruleNames
      properties:
        ruleNames:
          items:
            type: string
          type: array
    DisabledRulesDto:
      example:
        disabled:
        - disabled
        - disabled
      properties:
        disabled:
          items:
            type: string
          type: array
          uniqueItems: true
    ModelRuleNamesDto:
      example:
        ruleNames:
        - ruleNames
        - ruleNames
      properties:
        ruleNames:
          items:
            type: string
          type: array
    TenantEnvConfigResponseDto:
      example:
        supportedLogTools:
        - supportedLogTools
        - supportedLogTools
        environments:
        - logConfig:
            dateFormat: dateFormat
            labelToLogFieldMapping:
              key: labelToLogFieldMapping
            columns:
            - columns
            - columns
            query:
              key: query
            index: index
            filters:
            - key: ""
            - key: ""
            sort:
            - sort
            - sort
            httpResponseCodeField: httpResponseCodeField
            tool: tool
            url: url
            orgId: orgId
            indexMappings:
            - index: index
              labelMatchValues:
                key:
                - labelMatchValues
                - labelMatchValues
            - index: index
              labelMatchValues:
                key:
                - labelMatchValues
                - labelMatchValues
            correlationLabels: correlationLabels
            interval: interval
            defaultSearchText: defaultSearchText
            dataSource: dataSource
            errorFilter: errorFilter
          sitesForLog:
          - sitesForLog
          - sitesForLog
          defaultConfig: true
          name: name
          envsForLog:
          - envsForLog
          - envsForLog
        - logConfig:
            dateFormat: dateFormat
            labelToLogFieldMapping:
              key: labelToLogFieldMapping
            columns:
            - columns
            - columns
            query:
              key: query
            index: index
            filters:
            - key: ""
            - key: ""
            sort:
            - sort
            - sort
            httpResponseCodeField: httpResponseCodeField
            tool: tool
            url: url
            orgId: orgId
            indexMappings:
            - index: index
              labelMatchValues:
                key:
                - labelMatchValues
                - labelMatchValues
            - index: index
              labelMatchValues:
                key:
                - labelMatchValues
                - labelMatchValues
            correlationLabels: correlationLabels
            interval: interval
            defaultSearchText: defaultSearchText
            dataSource: dataSource
            errorFilter: errorFilter
          sitesForLog:
          - sitesForLog
          - sitesForLog
          defaultConfig: true
          name: name
          envsForLog:
          - envsForLog
          - envsForLog
      properties:
        environments:
          items:
            $ref: '#/components/schemas/EnvironmentDto'
          type: array
        supportedLogTools:
          items:
            type: string
          type: array
    DataSourcePromDto:
      example:
        promDatasourceName: promDatasourceName
      properties:
        promDatasourceName:
          type: string
    CustomDashConfigsDto:
      example:
        dashConfigDto:
        - dashboardUri: dashboardUri
          uid: uid
          dashParams:
            key: dashParams
          overrideEntityUri: true
          query: query
          dataSourceParam: dataSourceParam
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
          alertCategory:
          - alertCategory
          - alertCategory
        - dashboardUri: dashboardUri
          uid: uid
          dashParams:
            key: dashParams
          overrideEntityUri: true
          query: query
          dataSourceParam: dataSourceParam
          propertyMatchers:
          - op: op
            uom: MB
            name: name
            value: ""
          - op: op
            uom: MB
            name: name
            value: ""
          alertCategory:
          - alertCategory
          - alertCategory
        entityType: entityType
      properties:
        entityType:
          type: string
        dashConfigDto:
          items:
            $ref: '#/components/schemas/CustomDashConfigDto'
          type: array
    CustomKpiDashConfigDto:
      example:
        kpiDashConfigs:
        - dashConfigDto:
          - dashboardUri: dashboardUri
            uid: uid
            dashParams:
              key: dashParams
            overrideEntityUri: true
            query: query
            dataSourceParam: dataSourceParam
            propertyMatchers:
            - op: op
              uom: MB
              name: name
              value: ""
            - op: op
              uom: MB
              name: name
              value: ""
            alertCategory:
            - alertCategory
            - alertCategory
          - dashboardUri: dashboardUri
            uid: uid
            dashParams:
              key: dashParams
            overrideEntityUri: true
            query: query
            dataSourceParam: dataSourceParam
            propertyMatchers:
            - op: op
              uom: MB
              name: name
              value: ""
            - op: op
              uom: MB
              name: name
              value: ""
            alertCategory:
            - alertCategory
            - alertCategory
          entityType: entityType
        - dashConfigDto:
          - dashboardUri: dashboardUri
            uid: uid
            dashParams:
              key: dashParams
            overrideEntityUri: true
            query: query
            dataSourceParam: dataSourceParam
            propertyMatchers:
            - op: op
              uom: MB
              name: name
              value: ""
            - op: op
              uom: MB
              name: name
              value: ""
            alertCategory:
            - alertCategory
            - alertCategory
          - dashboardUri: dashboardUri
            uid: uid
            dashParams:
              key: dashParams
            overrideEntityUri: true
            query: query
            dataSourceParam: dataSourceParam
            propertyMatchers:
            - op: op
              uom: MB
              name: name
              value: ""
            - op: op
              uom: MB
              name: name
              value: ""
            alertCategory:
            - alertCategory
            - alertCategory
          entityType: entityType
      properties:
        kpiDashConfigs:
          items:
            $ref: '#/components/schemas/CustomDashConfigsDto'
          type: array
    ApiError_status:
      oneOf:
      - $ref: '#/components/schemas/DefaultHttpStatusCode'
      - $ref: '#/components/schemas/HttpStatus'
    ApiError_subErrors_inner:
      oneOf:
      - $ref: '#/components/schemas/ApiSubError'
      - $ref: '#/components/schemas/ApiValidationError'
    RelationRuleDto_definedBy:
      oneOf:
      - $ref: '#/components/schemas/DefinedByMetricsDto'
      - $ref: '#/components/schemas/DefinedByPropertyMatchDto'
    ModelMappingEntityDto_signals_inner:
      oneOf:
      - $ref: '#/components/schemas/ModelMappingHistogramDto'
      - $ref: '#/components/schemas/ModelMappingLatencyAverageDto'
      - $ref: '#/components/schemas/ModelMappingLatencyQuantileDto'
      - $ref: '#/components/schemas/ModelMappingRequestErrorDto'
      - $ref: '#/components/schemas/ModelMappingRequestRateDto'
    SloConfigDto_window:
      oneOf:
      - $ref: '#/components/schemas/SloCalendarWindowConfigDto'
      - $ref: '#/components/schemas/SloRollingWindowConfigDto'
    SloConfigRequestDto_indicator:
      oneOf:
      - $ref: '#/components/schemas/OccurrenceSliConfigDto'
      - $ref: '#/components/schemas/RequestSliConfigDto'
    PrometheusRule_annotations:
      additionalProperties:
        type: string
      example:
        empty: true
      properties:
        empty: {}
    EntityAssertionDetailsDto_thresholds_inner:
      oneOf:
      - $ref: '#/components/schemas/ThresholdMinMaxDto'
      - $ref: '#/components/schemas/ThresholdSingleDto'
    GraphEntity_scope:
      additionalProperties: {}
      example:
        empty: true
      properties:
        empty: {}
