/*
Asserts, Inc

Asserts Public API

API version: 2025.08.25-143403
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the GraphDisplayConfigDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphDisplayConfigDto{}

// GraphDisplayConfigDto struct for GraphDisplayConfigDto
type GraphDisplayConfigDto struct {
	Entities             map[string]EntityDisplayConfigDto `json:"entities,omitempty"`
	Edges                map[string]EdgeDisplayConfigDto   `json:"edges,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GraphDisplayConfigDto GraphDisplayConfigDto

// NewGraphDisplayConfigDto instantiates a new GraphDisplayConfigDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphDisplayConfigDto() *GraphDisplayConfigDto {
	this := GraphDisplayConfigDto{}
	return &this
}

// NewGraphDisplayConfigDtoWithDefaults instantiates a new GraphDisplayConfigDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphDisplayConfigDtoWithDefaults() *GraphDisplayConfigDto {
	this := GraphDisplayConfigDto{}
	return &this
}

// GetEntities returns the Entities field value if set, zero value otherwise.
func (o *GraphDisplayConfigDto) GetEntities() map[string]EntityDisplayConfigDto {
	if o == nil || IsNil(o.Entities) {
		var ret map[string]EntityDisplayConfigDto
		return ret
	}
	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphDisplayConfigDto) GetEntitiesOk() (map[string]EntityDisplayConfigDto, bool) {
	if o == nil || IsNil(o.Entities) {
		return map[string]EntityDisplayConfigDto{}, false
	}
	return o.Entities, true
}

// HasEntities returns a boolean if a field has been set.
func (o *GraphDisplayConfigDto) HasEntities() bool {
	if o != nil && !IsNil(o.Entities) {
		return true
	}

	return false
}

// SetEntities gets a reference to the given map[string]EntityDisplayConfigDto and assigns it to the Entities field.
func (o *GraphDisplayConfigDto) SetEntities(v map[string]EntityDisplayConfigDto) {
	o.Entities = v
}

// GetEdges returns the Edges field value if set, zero value otherwise.
func (o *GraphDisplayConfigDto) GetEdges() map[string]EdgeDisplayConfigDto {
	if o == nil || IsNil(o.Edges) {
		var ret map[string]EdgeDisplayConfigDto
		return ret
	}
	return o.Edges
}

// GetEdgesOk returns a tuple with the Edges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphDisplayConfigDto) GetEdgesOk() (map[string]EdgeDisplayConfigDto, bool) {
	if o == nil || IsNil(o.Edges) {
		return map[string]EdgeDisplayConfigDto{}, false
	}
	return o.Edges, true
}

// HasEdges returns a boolean if a field has been set.
func (o *GraphDisplayConfigDto) HasEdges() bool {
	if o != nil && !IsNil(o.Edges) {
		return true
	}

	return false
}

// SetEdges gets a reference to the given map[string]EdgeDisplayConfigDto and assigns it to the Edges field.
func (o *GraphDisplayConfigDto) SetEdges(v map[string]EdgeDisplayConfigDto) {
	o.Edges = v
}

func (o GraphDisplayConfigDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphDisplayConfigDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entities) {
		toSerialize["entities"] = o.Entities
	}
	if !IsNil(o.Edges) {
		toSerialize["edges"] = o.Edges
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GraphDisplayConfigDto) UnmarshalJSON(data []byte) (err error) {
	varGraphDisplayConfigDto := _GraphDisplayConfigDto{}

	err = json.Unmarshal(data, &varGraphDisplayConfigDto)

	if err != nil {
		return err
	}

	*o = GraphDisplayConfigDto(varGraphDisplayConfigDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entities")
		delete(additionalProperties, "edges")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGraphDisplayConfigDto struct {
	value *GraphDisplayConfigDto
	isSet bool
}

func (v NullableGraphDisplayConfigDto) Get() *GraphDisplayConfigDto {
	return v.value
}

func (v *NullableGraphDisplayConfigDto) Set(val *GraphDisplayConfigDto) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphDisplayConfigDto) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphDisplayConfigDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphDisplayConfigDto(val *GraphDisplayConfigDto) *NullableGraphDisplayConfigDto {
	return &NullableGraphDisplayConfigDto{value: val, isSet: true}
}

func (v NullableGraphDisplayConfigDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphDisplayConfigDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
