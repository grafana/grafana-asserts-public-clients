/*
Asserts, Inc

Asserts Public API

API version: 1.0.0
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the MonitoringStatusResponseDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitoringStatusResponseDto{}

// MonitoringStatusResponseDto struct for MonitoringStatusResponseDto
type MonitoringStatusResponseDto struct {
	EntityStatus         []EntityMonitoringStatusDto `json:"entityStatus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MonitoringStatusResponseDto MonitoringStatusResponseDto

// NewMonitoringStatusResponseDto instantiates a new MonitoringStatusResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringStatusResponseDto() *MonitoringStatusResponseDto {
	this := MonitoringStatusResponseDto{}
	return &this
}

// NewMonitoringStatusResponseDtoWithDefaults instantiates a new MonitoringStatusResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringStatusResponseDtoWithDefaults() *MonitoringStatusResponseDto {
	this := MonitoringStatusResponseDto{}
	return &this
}

// GetEntityStatus returns the EntityStatus field value if set, zero value otherwise.
func (o *MonitoringStatusResponseDto) GetEntityStatus() []EntityMonitoringStatusDto {
	if o == nil || IsNil(o.EntityStatus) {
		var ret []EntityMonitoringStatusDto
		return ret
	}
	return o.EntityStatus
}

// GetEntityStatusOk returns a tuple with the EntityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringStatusResponseDto) GetEntityStatusOk() ([]EntityMonitoringStatusDto, bool) {
	if o == nil || IsNil(o.EntityStatus) {
		return nil, false
	}
	return o.EntityStatus, true
}

// HasEntityStatus returns a boolean if a field has been set.
func (o *MonitoringStatusResponseDto) HasEntityStatus() bool {
	if o != nil && !IsNil(o.EntityStatus) {
		return true
	}

	return false
}

// SetEntityStatus gets a reference to the given []EntityMonitoringStatusDto and assigns it to the EntityStatus field.
func (o *MonitoringStatusResponseDto) SetEntityStatus(v []EntityMonitoringStatusDto) {
	o.EntityStatus = v
}

func (o MonitoringStatusResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitoringStatusResponseDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntityStatus) {
		toSerialize["entityStatus"] = o.EntityStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MonitoringStatusResponseDto) UnmarshalJSON(data []byte) (err error) {
	varMonitoringStatusResponseDto := _MonitoringStatusResponseDto{}

	err = json.Unmarshal(data, &varMonitoringStatusResponseDto)

	if err != nil {
		return err
	}

	*o = MonitoringStatusResponseDto(varMonitoringStatusResponseDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entityStatus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMonitoringStatusResponseDto struct {
	value *MonitoringStatusResponseDto
	isSet bool
}

func (v NullableMonitoringStatusResponseDto) Get() *MonitoringStatusResponseDto {
	return v.value
}

func (v *NullableMonitoringStatusResponseDto) Set(val *MonitoringStatusResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringStatusResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringStatusResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringStatusResponseDto(val *MonitoringStatusResponseDto) *NullableMonitoringStatusResponseDto {
	return &NullableMonitoringStatusResponseDto{value: val, isSet: true}
}

func (v NullableMonitoringStatusResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringStatusResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
