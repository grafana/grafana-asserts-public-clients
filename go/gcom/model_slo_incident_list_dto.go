/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-161538
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the SloIncidentListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloIncidentListDto{}

// SloIncidentListDto struct for SloIncidentListDto
type SloIncidentListDto struct {
	Incidents            []IncidentDto `json:"incidents,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SloIncidentListDto SloIncidentListDto

// NewSloIncidentListDto instantiates a new SloIncidentListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloIncidentListDto() *SloIncidentListDto {
	this := SloIncidentListDto{}
	return &this
}

// NewSloIncidentListDtoWithDefaults instantiates a new SloIncidentListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloIncidentListDtoWithDefaults() *SloIncidentListDto {
	this := SloIncidentListDto{}
	return &this
}

// GetIncidents returns the Incidents field value if set, zero value otherwise.
func (o *SloIncidentListDto) GetIncidents() []IncidentDto {
	if o == nil || IsNil(o.Incidents) {
		var ret []IncidentDto
		return ret
	}
	return o.Incidents
}

// GetIncidentsOk returns a tuple with the Incidents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloIncidentListDto) GetIncidentsOk() ([]IncidentDto, bool) {
	if o == nil || IsNil(o.Incidents) {
		return nil, false
	}
	return o.Incidents, true
}

// HasIncidents returns a boolean if a field has been set.
func (o *SloIncidentListDto) HasIncidents() bool {
	if o != nil && !IsNil(o.Incidents) {
		return true
	}

	return false
}

// SetIncidents gets a reference to the given []IncidentDto and assigns it to the Incidents field.
func (o *SloIncidentListDto) SetIncidents(v []IncidentDto) {
	o.Incidents = v
}

func (o SloIncidentListDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloIncidentListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Incidents) {
		toSerialize["incidents"] = o.Incidents
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SloIncidentListDto) UnmarshalJSON(data []byte) (err error) {
	varSloIncidentListDto := _SloIncidentListDto{}

	err = json.Unmarshal(data, &varSloIncidentListDto)

	if err != nil {
		return err
	}

	*o = SloIncidentListDto(varSloIncidentListDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "incidents")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSloIncidentListDto struct {
	value *SloIncidentListDto
	isSet bool
}

func (v NullableSloIncidentListDto) Get() *SloIncidentListDto {
	return v.value
}

func (v *NullableSloIncidentListDto) Set(val *SloIncidentListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSloIncidentListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSloIncidentListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloIncidentListDto(val *SloIncidentListDto) *NullableSloIncidentListDto {
	return &NullableSloIncidentListDto{value: val, isSet: true}
}

func (v NullableSloIncidentListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloIncidentListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
