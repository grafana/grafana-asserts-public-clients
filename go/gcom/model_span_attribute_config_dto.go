/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-112305
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the SpanAttributeConfigDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpanAttributeConfigDto{}

// SpanAttributeConfigDto struct for SpanAttributeConfigDto
type SpanAttributeConfigDto struct {
	Namespace            *string                    `json:"namespace,omitempty"`
	Service              *string                    `json:"service,omitempty"`
	Rules                []CustomAttributeConfigDto `json:"rules,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SpanAttributeConfigDto SpanAttributeConfigDto

// NewSpanAttributeConfigDto instantiates a new SpanAttributeConfigDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpanAttributeConfigDto() *SpanAttributeConfigDto {
	this := SpanAttributeConfigDto{}
	return &this
}

// NewSpanAttributeConfigDtoWithDefaults instantiates a new SpanAttributeConfigDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpanAttributeConfigDtoWithDefaults() *SpanAttributeConfigDto {
	this := SpanAttributeConfigDto{}
	return &this
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *SpanAttributeConfigDto) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanAttributeConfigDto) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *SpanAttributeConfigDto) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *SpanAttributeConfigDto) SetNamespace(v string) {
	o.Namespace = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *SpanAttributeConfigDto) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanAttributeConfigDto) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *SpanAttributeConfigDto) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *SpanAttributeConfigDto) SetService(v string) {
	o.Service = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *SpanAttributeConfigDto) GetRules() []CustomAttributeConfigDto {
	if o == nil || IsNil(o.Rules) {
		var ret []CustomAttributeConfigDto
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpanAttributeConfigDto) GetRulesOk() ([]CustomAttributeConfigDto, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *SpanAttributeConfigDto) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []CustomAttributeConfigDto and assigns it to the Rules field.
func (o *SpanAttributeConfigDto) SetRules(v []CustomAttributeConfigDto) {
	o.Rules = v
}

func (o SpanAttributeConfigDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpanAttributeConfigDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpanAttributeConfigDto) UnmarshalJSON(data []byte) (err error) {
	varSpanAttributeConfigDto := _SpanAttributeConfigDto{}

	err = json.Unmarshal(data, &varSpanAttributeConfigDto)

	if err != nil {
		return err
	}

	*o = SpanAttributeConfigDto(varSpanAttributeConfigDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "namespace")
		delete(additionalProperties, "service")
		delete(additionalProperties, "rules")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpanAttributeConfigDto struct {
	value *SpanAttributeConfigDto
	isSet bool
}

func (v NullableSpanAttributeConfigDto) Get() *SpanAttributeConfigDto {
	return v.value
}

func (v *NullableSpanAttributeConfigDto) Set(val *SpanAttributeConfigDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSpanAttributeConfigDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSpanAttributeConfigDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpanAttributeConfigDto(val *SpanAttributeConfigDto) *NullableSpanAttributeConfigDto {
	return &NullableSpanAttributeConfigDto{value: val, isSet: true}
}

func (v NullableSpanAttributeConfigDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpanAttributeConfigDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
