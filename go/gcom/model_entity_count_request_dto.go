/*
Asserts, Inc

Asserts Public API

API version: 2025.09.11-132913
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the EntityCountRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntityCountRequestDto{}

// EntityCountRequestDto struct for EntityCountRequestDto
type EntityCountRequestDto struct {
	TimeCriteria         *TimeCriteriaDto     `json:"timeCriteria,omitempty"`
	ScopeCriteria        *ScopeCriteriaDto    `json:"scopeCriteria,omitempty"`
	PropertyMatchers     []PropertyMatcherDto `json:"propertyMatchers,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EntityCountRequestDto EntityCountRequestDto

// NewEntityCountRequestDto instantiates a new EntityCountRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityCountRequestDto() *EntityCountRequestDto {
	this := EntityCountRequestDto{}
	return &this
}

// NewEntityCountRequestDtoWithDefaults instantiates a new EntityCountRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityCountRequestDtoWithDefaults() *EntityCountRequestDto {
	this := EntityCountRequestDto{}
	return &this
}

// GetTimeCriteria returns the TimeCriteria field value if set, zero value otherwise.
func (o *EntityCountRequestDto) GetTimeCriteria() TimeCriteriaDto {
	if o == nil || IsNil(o.TimeCriteria) {
		var ret TimeCriteriaDto
		return ret
	}
	return *o.TimeCriteria
}

// GetTimeCriteriaOk returns a tuple with the TimeCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityCountRequestDto) GetTimeCriteriaOk() (*TimeCriteriaDto, bool) {
	if o == nil || IsNil(o.TimeCriteria) {
		return nil, false
	}
	return o.TimeCriteria, true
}

// HasTimeCriteria returns a boolean if a field has been set.
func (o *EntityCountRequestDto) HasTimeCriteria() bool {
	if o != nil && !IsNil(o.TimeCriteria) {
		return true
	}

	return false
}

// SetTimeCriteria gets a reference to the given TimeCriteriaDto and assigns it to the TimeCriteria field.
func (o *EntityCountRequestDto) SetTimeCriteria(v TimeCriteriaDto) {
	o.TimeCriteria = &v
}

// GetScopeCriteria returns the ScopeCriteria field value if set, zero value otherwise.
func (o *EntityCountRequestDto) GetScopeCriteria() ScopeCriteriaDto {
	if o == nil || IsNil(o.ScopeCriteria) {
		var ret ScopeCriteriaDto
		return ret
	}
	return *o.ScopeCriteria
}

// GetScopeCriteriaOk returns a tuple with the ScopeCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityCountRequestDto) GetScopeCriteriaOk() (*ScopeCriteriaDto, bool) {
	if o == nil || IsNil(o.ScopeCriteria) {
		return nil, false
	}
	return o.ScopeCriteria, true
}

// HasScopeCriteria returns a boolean if a field has been set.
func (o *EntityCountRequestDto) HasScopeCriteria() bool {
	if o != nil && !IsNil(o.ScopeCriteria) {
		return true
	}

	return false
}

// SetScopeCriteria gets a reference to the given ScopeCriteriaDto and assigns it to the ScopeCriteria field.
func (o *EntityCountRequestDto) SetScopeCriteria(v ScopeCriteriaDto) {
	o.ScopeCriteria = &v
}

// GetPropertyMatchers returns the PropertyMatchers field value if set, zero value otherwise.
func (o *EntityCountRequestDto) GetPropertyMatchers() []PropertyMatcherDto {
	if o == nil || IsNil(o.PropertyMatchers) {
		var ret []PropertyMatcherDto
		return ret
	}
	return o.PropertyMatchers
}

// GetPropertyMatchersOk returns a tuple with the PropertyMatchers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityCountRequestDto) GetPropertyMatchersOk() ([]PropertyMatcherDto, bool) {
	if o == nil || IsNil(o.PropertyMatchers) {
		return nil, false
	}
	return o.PropertyMatchers, true
}

// HasPropertyMatchers returns a boolean if a field has been set.
func (o *EntityCountRequestDto) HasPropertyMatchers() bool {
	if o != nil && !IsNil(o.PropertyMatchers) {
		return true
	}

	return false
}

// SetPropertyMatchers gets a reference to the given []PropertyMatcherDto and assigns it to the PropertyMatchers field.
func (o *EntityCountRequestDto) SetPropertyMatchers(v []PropertyMatcherDto) {
	o.PropertyMatchers = v
}

func (o EntityCountRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntityCountRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeCriteria) {
		toSerialize["timeCriteria"] = o.TimeCriteria
	}
	if !IsNil(o.ScopeCriteria) {
		toSerialize["scopeCriteria"] = o.ScopeCriteria
	}
	if !IsNil(o.PropertyMatchers) {
		toSerialize["propertyMatchers"] = o.PropertyMatchers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EntityCountRequestDto) UnmarshalJSON(data []byte) (err error) {
	varEntityCountRequestDto := _EntityCountRequestDto{}

	err = json.Unmarshal(data, &varEntityCountRequestDto)

	if err != nil {
		return err
	}

	*o = EntityCountRequestDto(varEntityCountRequestDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "timeCriteria")
		delete(additionalProperties, "scopeCriteria")
		delete(additionalProperties, "propertyMatchers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEntityCountRequestDto struct {
	value *EntityCountRequestDto
	isSet bool
}

func (v NullableEntityCountRequestDto) Get() *EntityCountRequestDto {
	return v.value
}

func (v *NullableEntityCountRequestDto) Set(val *EntityCountRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityCountRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityCountRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityCountRequestDto(val *EntityCountRequestDto) *NullableEntityCountRequestDto {
	return &NullableEntityCountRequestDto{value: val, isSet: true}
}

func (v NullableEntityCountRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityCountRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
