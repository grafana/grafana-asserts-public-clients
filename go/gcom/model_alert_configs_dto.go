/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-112305
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AlertConfigsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertConfigsDto{}

// AlertConfigsDto struct for AlertConfigsDto
type AlertConfigsDto struct {
	AlertConfigs         []AlertConfigDto `json:"alertConfigs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AlertConfigsDto AlertConfigsDto

// NewAlertConfigsDto instantiates a new AlertConfigsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertConfigsDto() *AlertConfigsDto {
	this := AlertConfigsDto{}
	return &this
}

// NewAlertConfigsDtoWithDefaults instantiates a new AlertConfigsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertConfigsDtoWithDefaults() *AlertConfigsDto {
	this := AlertConfigsDto{}
	return &this
}

// GetAlertConfigs returns the AlertConfigs field value if set, zero value otherwise.
func (o *AlertConfigsDto) GetAlertConfigs() []AlertConfigDto {
	if o == nil || IsNil(o.AlertConfigs) {
		var ret []AlertConfigDto
		return ret
	}
	return o.AlertConfigs
}

// GetAlertConfigsOk returns a tuple with the AlertConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConfigsDto) GetAlertConfigsOk() ([]AlertConfigDto, bool) {
	if o == nil || IsNil(o.AlertConfigs) {
		return nil, false
	}
	return o.AlertConfigs, true
}

// HasAlertConfigs returns a boolean if a field has been set.
func (o *AlertConfigsDto) HasAlertConfigs() bool {
	if o != nil && !IsNil(o.AlertConfigs) {
		return true
	}

	return false
}

// SetAlertConfigs gets a reference to the given []AlertConfigDto and assigns it to the AlertConfigs field.
func (o *AlertConfigsDto) SetAlertConfigs(v []AlertConfigDto) {
	o.AlertConfigs = v
}

func (o AlertConfigsDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertConfigsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertConfigs) {
		toSerialize["alertConfigs"] = o.AlertConfigs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AlertConfigsDto) UnmarshalJSON(data []byte) (err error) {
	varAlertConfigsDto := _AlertConfigsDto{}

	err = json.Unmarshal(data, &varAlertConfigsDto)

	if err != nil {
		return err
	}

	*o = AlertConfigsDto(varAlertConfigsDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "alertConfigs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAlertConfigsDto struct {
	value *AlertConfigsDto
	isSet bool
}

func (v NullableAlertConfigsDto) Get() *AlertConfigsDto {
	return v.value
}

func (v *NullableAlertConfigsDto) Set(val *AlertConfigsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertConfigsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertConfigsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertConfigsDto(val *AlertConfigsDto) *NullableAlertConfigsDto {
	return &NullableAlertConfigsDto{value: val, isSet: true}
}

func (v NullableAlertConfigsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertConfigsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
