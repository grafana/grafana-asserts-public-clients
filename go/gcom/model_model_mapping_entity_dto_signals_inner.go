/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-112305
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
	"fmt"

	"gopkg.in/validator.v2"
)

// ModelMappingEntityDtoSignalsInner - struct for ModelMappingEntityDtoSignalsInner
type ModelMappingEntityDtoSignalsInner struct {
	ModelMappingHistogramDto       *ModelMappingHistogramDto
	ModelMappingLatencyAverageDto  *ModelMappingLatencyAverageDto
	ModelMappingLatencyQuantileDto *ModelMappingLatencyQuantileDto
	ModelMappingRequestErrorDto    *ModelMappingRequestErrorDto
	ModelMappingRequestRateDto     *ModelMappingRequestRateDto
}

// ModelMappingHistogramDtoAsModelMappingEntityDtoSignalsInner is a convenience function that returns ModelMappingHistogramDto wrapped in ModelMappingEntityDtoSignalsInner
func ModelMappingHistogramDtoAsModelMappingEntityDtoSignalsInner(v *ModelMappingHistogramDto) ModelMappingEntityDtoSignalsInner {
	return ModelMappingEntityDtoSignalsInner{
		ModelMappingHistogramDto: v,
	}
}

// ModelMappingLatencyAverageDtoAsModelMappingEntityDtoSignalsInner is a convenience function that returns ModelMappingLatencyAverageDto wrapped in ModelMappingEntityDtoSignalsInner
func ModelMappingLatencyAverageDtoAsModelMappingEntityDtoSignalsInner(v *ModelMappingLatencyAverageDto) ModelMappingEntityDtoSignalsInner {
	return ModelMappingEntityDtoSignalsInner{
		ModelMappingLatencyAverageDto: v,
	}
}

// ModelMappingLatencyQuantileDtoAsModelMappingEntityDtoSignalsInner is a convenience function that returns ModelMappingLatencyQuantileDto wrapped in ModelMappingEntityDtoSignalsInner
func ModelMappingLatencyQuantileDtoAsModelMappingEntityDtoSignalsInner(v *ModelMappingLatencyQuantileDto) ModelMappingEntityDtoSignalsInner {
	return ModelMappingEntityDtoSignalsInner{
		ModelMappingLatencyQuantileDto: v,
	}
}

// ModelMappingRequestErrorDtoAsModelMappingEntityDtoSignalsInner is a convenience function that returns ModelMappingRequestErrorDto wrapped in ModelMappingEntityDtoSignalsInner
func ModelMappingRequestErrorDtoAsModelMappingEntityDtoSignalsInner(v *ModelMappingRequestErrorDto) ModelMappingEntityDtoSignalsInner {
	return ModelMappingEntityDtoSignalsInner{
		ModelMappingRequestErrorDto: v,
	}
}

// ModelMappingRequestRateDtoAsModelMappingEntityDtoSignalsInner is a convenience function that returns ModelMappingRequestRateDto wrapped in ModelMappingEntityDtoSignalsInner
func ModelMappingRequestRateDtoAsModelMappingEntityDtoSignalsInner(v *ModelMappingRequestRateDto) ModelMappingEntityDtoSignalsInner {
	return ModelMappingEntityDtoSignalsInner{
		ModelMappingRequestRateDto: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ModelMappingEntityDtoSignalsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ModelMappingHistogramDto
	err = newStrictDecoder(data).Decode(&dst.ModelMappingHistogramDto)
	if err == nil {
		jsonModelMappingHistogramDto, _ := json.Marshal(dst.ModelMappingHistogramDto)
		if string(jsonModelMappingHistogramDto) == "{}" { // empty struct
			dst.ModelMappingHistogramDto = nil
		} else {
			if err = validator.Validate(dst.ModelMappingHistogramDto); err != nil {
				dst.ModelMappingHistogramDto = nil
			} else {
				match++
			}
		}
	} else {
		dst.ModelMappingHistogramDto = nil
	}

	// try to unmarshal data into ModelMappingLatencyAverageDto
	err = newStrictDecoder(data).Decode(&dst.ModelMappingLatencyAverageDto)
	if err == nil {
		jsonModelMappingLatencyAverageDto, _ := json.Marshal(dst.ModelMappingLatencyAverageDto)
		if string(jsonModelMappingLatencyAverageDto) == "{}" { // empty struct
			dst.ModelMappingLatencyAverageDto = nil
		} else {
			if err = validator.Validate(dst.ModelMappingLatencyAverageDto); err != nil {
				dst.ModelMappingLatencyAverageDto = nil
			} else {
				match++
			}
		}
	} else {
		dst.ModelMappingLatencyAverageDto = nil
	}

	// try to unmarshal data into ModelMappingLatencyQuantileDto
	err = newStrictDecoder(data).Decode(&dst.ModelMappingLatencyQuantileDto)
	if err == nil {
		jsonModelMappingLatencyQuantileDto, _ := json.Marshal(dst.ModelMappingLatencyQuantileDto)
		if string(jsonModelMappingLatencyQuantileDto) == "{}" { // empty struct
			dst.ModelMappingLatencyQuantileDto = nil
		} else {
			if err = validator.Validate(dst.ModelMappingLatencyQuantileDto); err != nil {
				dst.ModelMappingLatencyQuantileDto = nil
			} else {
				match++
			}
		}
	} else {
		dst.ModelMappingLatencyQuantileDto = nil
	}

	// try to unmarshal data into ModelMappingRequestErrorDto
	err = newStrictDecoder(data).Decode(&dst.ModelMappingRequestErrorDto)
	if err == nil {
		jsonModelMappingRequestErrorDto, _ := json.Marshal(dst.ModelMappingRequestErrorDto)
		if string(jsonModelMappingRequestErrorDto) == "{}" { // empty struct
			dst.ModelMappingRequestErrorDto = nil
		} else {
			if err = validator.Validate(dst.ModelMappingRequestErrorDto); err != nil {
				dst.ModelMappingRequestErrorDto = nil
			} else {
				match++
			}
		}
	} else {
		dst.ModelMappingRequestErrorDto = nil
	}

	// try to unmarshal data into ModelMappingRequestRateDto
	err = newStrictDecoder(data).Decode(&dst.ModelMappingRequestRateDto)
	if err == nil {
		jsonModelMappingRequestRateDto, _ := json.Marshal(dst.ModelMappingRequestRateDto)
		if string(jsonModelMappingRequestRateDto) == "{}" { // empty struct
			dst.ModelMappingRequestRateDto = nil
		} else {
			if err = validator.Validate(dst.ModelMappingRequestRateDto); err != nil {
				dst.ModelMappingRequestRateDto = nil
			} else {
				match++
			}
		}
	} else {
		dst.ModelMappingRequestRateDto = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ModelMappingHistogramDto = nil
		dst.ModelMappingLatencyAverageDto = nil
		dst.ModelMappingLatencyQuantileDto = nil
		dst.ModelMappingRequestErrorDto = nil
		dst.ModelMappingRequestRateDto = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ModelMappingEntityDtoSignalsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ModelMappingEntityDtoSignalsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ModelMappingEntityDtoSignalsInner) MarshalJSON() ([]byte, error) {
	if src.ModelMappingHistogramDto != nil {
		return json.Marshal(&src.ModelMappingHistogramDto)
	}

	if src.ModelMappingLatencyAverageDto != nil {
		return json.Marshal(&src.ModelMappingLatencyAverageDto)
	}

	if src.ModelMappingLatencyQuantileDto != nil {
		return json.Marshal(&src.ModelMappingLatencyQuantileDto)
	}

	if src.ModelMappingRequestErrorDto != nil {
		return json.Marshal(&src.ModelMappingRequestErrorDto)
	}

	if src.ModelMappingRequestRateDto != nil {
		return json.Marshal(&src.ModelMappingRequestRateDto)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ModelMappingEntityDtoSignalsInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ModelMappingHistogramDto != nil {
		return obj.ModelMappingHistogramDto
	}

	if obj.ModelMappingLatencyAverageDto != nil {
		return obj.ModelMappingLatencyAverageDto
	}

	if obj.ModelMappingLatencyQuantileDto != nil {
		return obj.ModelMappingLatencyQuantileDto
	}

	if obj.ModelMappingRequestErrorDto != nil {
		return obj.ModelMappingRequestErrorDto
	}

	if obj.ModelMappingRequestRateDto != nil {
		return obj.ModelMappingRequestRateDto
	}

	// all schemas are nil
	return nil
}

type NullableModelMappingEntityDtoSignalsInner struct {
	value *ModelMappingEntityDtoSignalsInner
	isSet bool
}

func (v NullableModelMappingEntityDtoSignalsInner) Get() *ModelMappingEntityDtoSignalsInner {
	return v.value
}

func (v *NullableModelMappingEntityDtoSignalsInner) Set(val *ModelMappingEntityDtoSignalsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableModelMappingEntityDtoSignalsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableModelMappingEntityDtoSignalsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelMappingEntityDtoSignalsInner(val *ModelMappingEntityDtoSignalsInner) *NullableModelMappingEntityDtoSignalsInner {
	return &NullableModelMappingEntityDtoSignalsInner{value: val, isSet: true}
}

func (v NullableModelMappingEntityDtoSignalsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelMappingEntityDtoSignalsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
