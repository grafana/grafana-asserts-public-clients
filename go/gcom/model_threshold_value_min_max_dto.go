/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-110859
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the ThresholdValueMinMaxDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThresholdValueMinMaxDto{}

// ThresholdValueMinMaxDto struct for ThresholdValueMinMaxDto
type ThresholdValueMinMaxDto struct {
	Time                 *int64    `json:"time,omitempty"`
	Values               []float64 `json:"values,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ThresholdValueMinMaxDto ThresholdValueMinMaxDto

// NewThresholdValueMinMaxDto instantiates a new ThresholdValueMinMaxDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThresholdValueMinMaxDto() *ThresholdValueMinMaxDto {
	this := ThresholdValueMinMaxDto{}
	return &this
}

// NewThresholdValueMinMaxDtoWithDefaults instantiates a new ThresholdValueMinMaxDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThresholdValueMinMaxDtoWithDefaults() *ThresholdValueMinMaxDto {
	this := ThresholdValueMinMaxDto{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ThresholdValueMinMaxDto) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdValueMinMaxDto) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ThresholdValueMinMaxDto) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *ThresholdValueMinMaxDto) SetTime(v int64) {
	o.Time = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ThresholdValueMinMaxDto) GetValues() []float64 {
	if o == nil || IsNil(o.Values) {
		var ret []float64
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdValueMinMaxDto) GetValuesOk() ([]float64, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ThresholdValueMinMaxDto) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []float64 and assigns it to the Values field.
func (o *ThresholdValueMinMaxDto) SetValues(v []float64) {
	o.Values = v
}

func (o ThresholdValueMinMaxDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThresholdValueMinMaxDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ThresholdValueMinMaxDto) UnmarshalJSON(data []byte) (err error) {
	varThresholdValueMinMaxDto := _ThresholdValueMinMaxDto{}

	err = json.Unmarshal(data, &varThresholdValueMinMaxDto)

	if err != nil {
		return err
	}

	*o = ThresholdValueMinMaxDto(varThresholdValueMinMaxDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "time")
		delete(additionalProperties, "values")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableThresholdValueMinMaxDto struct {
	value *ThresholdValueMinMaxDto
	isSet bool
}

func (v NullableThresholdValueMinMaxDto) Get() *ThresholdValueMinMaxDto {
	return v.value
}

func (v *NullableThresholdValueMinMaxDto) Set(val *ThresholdValueMinMaxDto) {
	v.value = val
	v.isSet = true
}

func (v NullableThresholdValueMinMaxDto) IsSet() bool {
	return v.isSet
}

func (v *NullableThresholdValueMinMaxDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThresholdValueMinMaxDto(val *ThresholdValueMinMaxDto) *NullableThresholdValueMinMaxDto {
	return &NullableThresholdValueMinMaxDto{value: val, isSet: true}
}

func (v NullableThresholdValueMinMaxDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThresholdValueMinMaxDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
