/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-055054
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
	"time"
)

// checks if the StackDetailDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StackDetailDto{}

// StackDetailDto struct for StackDetailDto
type StackDetailDto struct {
	StackId                *int32     `json:"stackId,omitempty"`
	Slug                   *string    `json:"slug,omitempty"`
	OrgId                  *int32     `json:"orgId,omitempty"`
	OrgSlug                *string    `json:"orgSlug,omitempty"`
	GcomToken              *string    `json:"gcomToken,omitempty"`
	MimirToken             *string    `json:"mimirToken,omitempty"`
	AssertionDetectorToken *string    `json:"assertionDetectorToken,omitempty"`
	Enabled                *bool      `json:"enabled,omitempty"`
	AlertManagerConfigured *bool      `json:"alertManagerConfigured,omitempty"`
	GraphInstanceCreated   *bool      `json:"graphInstanceCreated,omitempty"`
	Status                 *string    `json:"status,omitempty"`
	DisabledTime           *time.Time `json:"disabledTime,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _StackDetailDto StackDetailDto

// NewStackDetailDto instantiates a new StackDetailDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStackDetailDto() *StackDetailDto {
	this := StackDetailDto{}
	return &this
}

// NewStackDetailDtoWithDefaults instantiates a new StackDetailDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackDetailDtoWithDefaults() *StackDetailDto {
	this := StackDetailDto{}
	return &this
}

// GetStackId returns the StackId field value if set, zero value otherwise.
func (o *StackDetailDto) GetStackId() int32 {
	if o == nil || IsNil(o.StackId) {
		var ret int32
		return ret
	}
	return *o.StackId
}

// GetStackIdOk returns a tuple with the StackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetStackIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StackId) {
		return nil, false
	}
	return o.StackId, true
}

// HasStackId returns a boolean if a field has been set.
func (o *StackDetailDto) HasStackId() bool {
	if o != nil && !IsNil(o.StackId) {
		return true
	}

	return false
}

// SetStackId gets a reference to the given int32 and assigns it to the StackId field.
func (o *StackDetailDto) SetStackId(v int32) {
	o.StackId = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *StackDetailDto) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *StackDetailDto) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *StackDetailDto) SetSlug(v string) {
	o.Slug = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *StackDetailDto) GetOrgId() int32 {
	if o == nil || IsNil(o.OrgId) {
		var ret int32
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetOrgIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *StackDetailDto) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given int32 and assigns it to the OrgId field.
func (o *StackDetailDto) SetOrgId(v int32) {
	o.OrgId = &v
}

// GetOrgSlug returns the OrgSlug field value if set, zero value otherwise.
func (o *StackDetailDto) GetOrgSlug() string {
	if o == nil || IsNil(o.OrgSlug) {
		var ret string
		return ret
	}
	return *o.OrgSlug
}

// GetOrgSlugOk returns a tuple with the OrgSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetOrgSlugOk() (*string, bool) {
	if o == nil || IsNil(o.OrgSlug) {
		return nil, false
	}
	return o.OrgSlug, true
}

// HasOrgSlug returns a boolean if a field has been set.
func (o *StackDetailDto) HasOrgSlug() bool {
	if o != nil && !IsNil(o.OrgSlug) {
		return true
	}

	return false
}

// SetOrgSlug gets a reference to the given string and assigns it to the OrgSlug field.
func (o *StackDetailDto) SetOrgSlug(v string) {
	o.OrgSlug = &v
}

// GetGcomToken returns the GcomToken field value if set, zero value otherwise.
func (o *StackDetailDto) GetGcomToken() string {
	if o == nil || IsNil(o.GcomToken) {
		var ret string
		return ret
	}
	return *o.GcomToken
}

// GetGcomTokenOk returns a tuple with the GcomToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetGcomTokenOk() (*string, bool) {
	if o == nil || IsNil(o.GcomToken) {
		return nil, false
	}
	return o.GcomToken, true
}

// HasGcomToken returns a boolean if a field has been set.
func (o *StackDetailDto) HasGcomToken() bool {
	if o != nil && !IsNil(o.GcomToken) {
		return true
	}

	return false
}

// SetGcomToken gets a reference to the given string and assigns it to the GcomToken field.
func (o *StackDetailDto) SetGcomToken(v string) {
	o.GcomToken = &v
}

// GetMimirToken returns the MimirToken field value if set, zero value otherwise.
func (o *StackDetailDto) GetMimirToken() string {
	if o == nil || IsNil(o.MimirToken) {
		var ret string
		return ret
	}
	return *o.MimirToken
}

// GetMimirTokenOk returns a tuple with the MimirToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetMimirTokenOk() (*string, bool) {
	if o == nil || IsNil(o.MimirToken) {
		return nil, false
	}
	return o.MimirToken, true
}

// HasMimirToken returns a boolean if a field has been set.
func (o *StackDetailDto) HasMimirToken() bool {
	if o != nil && !IsNil(o.MimirToken) {
		return true
	}

	return false
}

// SetMimirToken gets a reference to the given string and assigns it to the MimirToken field.
func (o *StackDetailDto) SetMimirToken(v string) {
	o.MimirToken = &v
}

// GetAssertionDetectorToken returns the AssertionDetectorToken field value if set, zero value otherwise.
func (o *StackDetailDto) GetAssertionDetectorToken() string {
	if o == nil || IsNil(o.AssertionDetectorToken) {
		var ret string
		return ret
	}
	return *o.AssertionDetectorToken
}

// GetAssertionDetectorTokenOk returns a tuple with the AssertionDetectorToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetAssertionDetectorTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AssertionDetectorToken) {
		return nil, false
	}
	return o.AssertionDetectorToken, true
}

// HasAssertionDetectorToken returns a boolean if a field has been set.
func (o *StackDetailDto) HasAssertionDetectorToken() bool {
	if o != nil && !IsNil(o.AssertionDetectorToken) {
		return true
	}

	return false
}

// SetAssertionDetectorToken gets a reference to the given string and assigns it to the AssertionDetectorToken field.
func (o *StackDetailDto) SetAssertionDetectorToken(v string) {
	o.AssertionDetectorToken = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *StackDetailDto) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *StackDetailDto) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *StackDetailDto) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAlertManagerConfigured returns the AlertManagerConfigured field value if set, zero value otherwise.
func (o *StackDetailDto) GetAlertManagerConfigured() bool {
	if o == nil || IsNil(o.AlertManagerConfigured) {
		var ret bool
		return ret
	}
	return *o.AlertManagerConfigured
}

// GetAlertManagerConfiguredOk returns a tuple with the AlertManagerConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetAlertManagerConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.AlertManagerConfigured) {
		return nil, false
	}
	return o.AlertManagerConfigured, true
}

// HasAlertManagerConfigured returns a boolean if a field has been set.
func (o *StackDetailDto) HasAlertManagerConfigured() bool {
	if o != nil && !IsNil(o.AlertManagerConfigured) {
		return true
	}

	return false
}

// SetAlertManagerConfigured gets a reference to the given bool and assigns it to the AlertManagerConfigured field.
func (o *StackDetailDto) SetAlertManagerConfigured(v bool) {
	o.AlertManagerConfigured = &v
}

// GetGraphInstanceCreated returns the GraphInstanceCreated field value if set, zero value otherwise.
func (o *StackDetailDto) GetGraphInstanceCreated() bool {
	if o == nil || IsNil(o.GraphInstanceCreated) {
		var ret bool
		return ret
	}
	return *o.GraphInstanceCreated
}

// GetGraphInstanceCreatedOk returns a tuple with the GraphInstanceCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetGraphInstanceCreatedOk() (*bool, bool) {
	if o == nil || IsNil(o.GraphInstanceCreated) {
		return nil, false
	}
	return o.GraphInstanceCreated, true
}

// HasGraphInstanceCreated returns a boolean if a field has been set.
func (o *StackDetailDto) HasGraphInstanceCreated() bool {
	if o != nil && !IsNil(o.GraphInstanceCreated) {
		return true
	}

	return false
}

// SetGraphInstanceCreated gets a reference to the given bool and assigns it to the GraphInstanceCreated field.
func (o *StackDetailDto) SetGraphInstanceCreated(v bool) {
	o.GraphInstanceCreated = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *StackDetailDto) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *StackDetailDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *StackDetailDto) SetStatus(v string) {
	o.Status = &v
}

// GetDisabledTime returns the DisabledTime field value if set, zero value otherwise.
func (o *StackDetailDto) GetDisabledTime() time.Time {
	if o == nil || IsNil(o.DisabledTime) {
		var ret time.Time
		return ret
	}
	return *o.DisabledTime
}

// GetDisabledTimeOk returns a tuple with the DisabledTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackDetailDto) GetDisabledTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DisabledTime) {
		return nil, false
	}
	return o.DisabledTime, true
}

// HasDisabledTime returns a boolean if a field has been set.
func (o *StackDetailDto) HasDisabledTime() bool {
	if o != nil && !IsNil(o.DisabledTime) {
		return true
	}

	return false
}

// SetDisabledTime gets a reference to the given time.Time and assigns it to the DisabledTime field.
func (o *StackDetailDto) SetDisabledTime(v time.Time) {
	o.DisabledTime = &v
}

func (o StackDetailDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StackDetailDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StackId) {
		toSerialize["stackId"] = o.StackId
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.OrgSlug) {
		toSerialize["orgSlug"] = o.OrgSlug
	}
	if !IsNil(o.GcomToken) {
		toSerialize["gcomToken"] = o.GcomToken
	}
	if !IsNil(o.MimirToken) {
		toSerialize["mimirToken"] = o.MimirToken
	}
	if !IsNil(o.AssertionDetectorToken) {
		toSerialize["assertionDetectorToken"] = o.AssertionDetectorToken
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.AlertManagerConfigured) {
		toSerialize["alertManagerConfigured"] = o.AlertManagerConfigured
	}
	if !IsNil(o.GraphInstanceCreated) {
		toSerialize["graphInstanceCreated"] = o.GraphInstanceCreated
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.DisabledTime) {
		toSerialize["disabledTime"] = o.DisabledTime
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StackDetailDto) UnmarshalJSON(data []byte) (err error) {
	varStackDetailDto := _StackDetailDto{}

	err = json.Unmarshal(data, &varStackDetailDto)

	if err != nil {
		return err
	}

	*o = StackDetailDto(varStackDetailDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "stackId")
		delete(additionalProperties, "slug")
		delete(additionalProperties, "orgId")
		delete(additionalProperties, "orgSlug")
		delete(additionalProperties, "gcomToken")
		delete(additionalProperties, "mimirToken")
		delete(additionalProperties, "assertionDetectorToken")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "alertManagerConfigured")
		delete(additionalProperties, "graphInstanceCreated")
		delete(additionalProperties, "status")
		delete(additionalProperties, "disabledTime")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStackDetailDto struct {
	value *StackDetailDto
	isSet bool
}

func (v NullableStackDetailDto) Get() *StackDetailDto {
	return v.value
}

func (v *NullableStackDetailDto) Set(val *StackDetailDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStackDetailDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStackDetailDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStackDetailDto(val *StackDetailDto) *NullableStackDetailDto {
	return &NullableStackDetailDto{value: val, isSet: true}
}

func (v NullableStackDetailDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStackDetailDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
