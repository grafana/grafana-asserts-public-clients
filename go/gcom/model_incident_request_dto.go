/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-062139
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the IncidentRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncidentRequestDto{}

// IncidentRequestDto struct for IncidentRequestDto
type IncidentRequestDto struct {
	Start                *int64            `json:"start,omitempty"`
	End                  *int64            `json:"end,omitempty"`
	Search               *string           `json:"search,omitempty"`
	ScopeCriteria        *ScopeCriteriaDto `json:"scopeCriteria,omitempty"`
	SloSource            *string           `json:"sloSource,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IncidentRequestDto IncidentRequestDto

// NewIncidentRequestDto instantiates a new IncidentRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentRequestDto() *IncidentRequestDto {
	this := IncidentRequestDto{}
	return &this
}

// NewIncidentRequestDtoWithDefaults instantiates a new IncidentRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentRequestDtoWithDefaults() *IncidentRequestDto {
	this := IncidentRequestDto{}
	return &this
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *IncidentRequestDto) GetStart() int64 {
	if o == nil || IsNil(o.Start) {
		var ret int64
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentRequestDto) GetStartOk() (*int64, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *IncidentRequestDto) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int64 and assigns it to the Start field.
func (o *IncidentRequestDto) SetStart(v int64) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *IncidentRequestDto) GetEnd() int64 {
	if o == nil || IsNil(o.End) {
		var ret int64
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentRequestDto) GetEndOk() (*int64, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *IncidentRequestDto) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given int64 and assigns it to the End field.
func (o *IncidentRequestDto) SetEnd(v int64) {
	o.End = &v
}

// GetSearch returns the Search field value if set, zero value otherwise.
func (o *IncidentRequestDto) GetSearch() string {
	if o == nil || IsNil(o.Search) {
		var ret string
		return ret
	}
	return *o.Search
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentRequestDto) GetSearchOk() (*string, bool) {
	if o == nil || IsNil(o.Search) {
		return nil, false
	}
	return o.Search, true
}

// HasSearch returns a boolean if a field has been set.
func (o *IncidentRequestDto) HasSearch() bool {
	if o != nil && !IsNil(o.Search) {
		return true
	}

	return false
}

// SetSearch gets a reference to the given string and assigns it to the Search field.
func (o *IncidentRequestDto) SetSearch(v string) {
	o.Search = &v
}

// GetScopeCriteria returns the ScopeCriteria field value if set, zero value otherwise.
func (o *IncidentRequestDto) GetScopeCriteria() ScopeCriteriaDto {
	if o == nil || IsNil(o.ScopeCriteria) {
		var ret ScopeCriteriaDto
		return ret
	}
	return *o.ScopeCriteria
}

// GetScopeCriteriaOk returns a tuple with the ScopeCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentRequestDto) GetScopeCriteriaOk() (*ScopeCriteriaDto, bool) {
	if o == nil || IsNil(o.ScopeCriteria) {
		return nil, false
	}
	return o.ScopeCriteria, true
}

// HasScopeCriteria returns a boolean if a field has been set.
func (o *IncidentRequestDto) HasScopeCriteria() bool {
	if o != nil && !IsNil(o.ScopeCriteria) {
		return true
	}

	return false
}

// SetScopeCriteria gets a reference to the given ScopeCriteriaDto and assigns it to the ScopeCriteria field.
func (o *IncidentRequestDto) SetScopeCriteria(v ScopeCriteriaDto) {
	o.ScopeCriteria = &v
}

// GetSloSource returns the SloSource field value if set, zero value otherwise.
func (o *IncidentRequestDto) GetSloSource() string {
	if o == nil || IsNil(o.SloSource) {
		var ret string
		return ret
	}
	return *o.SloSource
}

// GetSloSourceOk returns a tuple with the SloSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentRequestDto) GetSloSourceOk() (*string, bool) {
	if o == nil || IsNil(o.SloSource) {
		return nil, false
	}
	return o.SloSource, true
}

// HasSloSource returns a boolean if a field has been set.
func (o *IncidentRequestDto) HasSloSource() bool {
	if o != nil && !IsNil(o.SloSource) {
		return true
	}

	return false
}

// SetSloSource gets a reference to the given string and assigns it to the SloSource field.
func (o *IncidentRequestDto) SetSloSource(v string) {
	o.SloSource = &v
}

func (o IncidentRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncidentRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !IsNil(o.Search) {
		toSerialize["search"] = o.Search
	}
	if !IsNil(o.ScopeCriteria) {
		toSerialize["scopeCriteria"] = o.ScopeCriteria
	}
	if !IsNil(o.SloSource) {
		toSerialize["sloSource"] = o.SloSource
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IncidentRequestDto) UnmarshalJSON(data []byte) (err error) {
	varIncidentRequestDto := _IncidentRequestDto{}

	err = json.Unmarshal(data, &varIncidentRequestDto)

	if err != nil {
		return err
	}

	*o = IncidentRequestDto(varIncidentRequestDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "start")
		delete(additionalProperties, "end")
		delete(additionalProperties, "search")
		delete(additionalProperties, "scopeCriteria")
		delete(additionalProperties, "sloSource")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIncidentRequestDto struct {
	value *IncidentRequestDto
	isSet bool
}

func (v NullableIncidentRequestDto) Get() *IncidentRequestDto {
	return v.value
}

func (v *NullableIncidentRequestDto) Set(val *IncidentRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentRequestDto(val *IncidentRequestDto) *NullableIncidentRequestDto {
	return &NullableIncidentRequestDto{value: val, isSet: true}
}

func (v NullableIncidentRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
