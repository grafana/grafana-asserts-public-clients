/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-055054
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the CustomAttributeConfigDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomAttributeConfigDto{}

// CustomAttributeConfigDto struct for CustomAttributeConfigDto
type CustomAttributeConfigDto struct {
	SpanKinds            []string `json:"span_kinds,omitempty"`
	SourceAttributes     []string `json:"source_attributes,omitempty"`
	Regex                *string  `json:"regex,omitempty"`
	ValueExpr            *string  `json:"value_expr,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomAttributeConfigDto CustomAttributeConfigDto

// NewCustomAttributeConfigDto instantiates a new CustomAttributeConfigDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomAttributeConfigDto() *CustomAttributeConfigDto {
	this := CustomAttributeConfigDto{}
	return &this
}

// NewCustomAttributeConfigDtoWithDefaults instantiates a new CustomAttributeConfigDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomAttributeConfigDtoWithDefaults() *CustomAttributeConfigDto {
	this := CustomAttributeConfigDto{}
	return &this
}

// GetSpanKinds returns the SpanKinds field value if set, zero value otherwise.
func (o *CustomAttributeConfigDto) GetSpanKinds() []string {
	if o == nil || IsNil(o.SpanKinds) {
		var ret []string
		return ret
	}
	return o.SpanKinds
}

// GetSpanKindsOk returns a tuple with the SpanKinds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAttributeConfigDto) GetSpanKindsOk() ([]string, bool) {
	if o == nil || IsNil(o.SpanKinds) {
		return nil, false
	}
	return o.SpanKinds, true
}

// HasSpanKinds returns a boolean if a field has been set.
func (o *CustomAttributeConfigDto) HasSpanKinds() bool {
	if o != nil && !IsNil(o.SpanKinds) {
		return true
	}

	return false
}

// SetSpanKinds gets a reference to the given []string and assigns it to the SpanKinds field.
func (o *CustomAttributeConfigDto) SetSpanKinds(v []string) {
	o.SpanKinds = v
}

// GetSourceAttributes returns the SourceAttributes field value if set, zero value otherwise.
func (o *CustomAttributeConfigDto) GetSourceAttributes() []string {
	if o == nil || IsNil(o.SourceAttributes) {
		var ret []string
		return ret
	}
	return o.SourceAttributes
}

// GetSourceAttributesOk returns a tuple with the SourceAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAttributeConfigDto) GetSourceAttributesOk() ([]string, bool) {
	if o == nil || IsNil(o.SourceAttributes) {
		return nil, false
	}
	return o.SourceAttributes, true
}

// HasSourceAttributes returns a boolean if a field has been set.
func (o *CustomAttributeConfigDto) HasSourceAttributes() bool {
	if o != nil && !IsNil(o.SourceAttributes) {
		return true
	}

	return false
}

// SetSourceAttributes gets a reference to the given []string and assigns it to the SourceAttributes field.
func (o *CustomAttributeConfigDto) SetSourceAttributes(v []string) {
	o.SourceAttributes = v
}

// GetRegex returns the Regex field value if set, zero value otherwise.
func (o *CustomAttributeConfigDto) GetRegex() string {
	if o == nil || IsNil(o.Regex) {
		var ret string
		return ret
	}
	return *o.Regex
}

// GetRegexOk returns a tuple with the Regex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAttributeConfigDto) GetRegexOk() (*string, bool) {
	if o == nil || IsNil(o.Regex) {
		return nil, false
	}
	return o.Regex, true
}

// HasRegex returns a boolean if a field has been set.
func (o *CustomAttributeConfigDto) HasRegex() bool {
	if o != nil && !IsNil(o.Regex) {
		return true
	}

	return false
}

// SetRegex gets a reference to the given string and assigns it to the Regex field.
func (o *CustomAttributeConfigDto) SetRegex(v string) {
	o.Regex = &v
}

// GetValueExpr returns the ValueExpr field value if set, zero value otherwise.
func (o *CustomAttributeConfigDto) GetValueExpr() string {
	if o == nil || IsNil(o.ValueExpr) {
		var ret string
		return ret
	}
	return *o.ValueExpr
}

// GetValueExprOk returns a tuple with the ValueExpr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAttributeConfigDto) GetValueExprOk() (*string, bool) {
	if o == nil || IsNil(o.ValueExpr) {
		return nil, false
	}
	return o.ValueExpr, true
}

// HasValueExpr returns a boolean if a field has been set.
func (o *CustomAttributeConfigDto) HasValueExpr() bool {
	if o != nil && !IsNil(o.ValueExpr) {
		return true
	}

	return false
}

// SetValueExpr gets a reference to the given string and assigns it to the ValueExpr field.
func (o *CustomAttributeConfigDto) SetValueExpr(v string) {
	o.ValueExpr = &v
}

func (o CustomAttributeConfigDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomAttributeConfigDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpanKinds) {
		toSerialize["span_kinds"] = o.SpanKinds
	}
	if !IsNil(o.SourceAttributes) {
		toSerialize["source_attributes"] = o.SourceAttributes
	}
	if !IsNil(o.Regex) {
		toSerialize["regex"] = o.Regex
	}
	if !IsNil(o.ValueExpr) {
		toSerialize["value_expr"] = o.ValueExpr
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomAttributeConfigDto) UnmarshalJSON(data []byte) (err error) {
	varCustomAttributeConfigDto := _CustomAttributeConfigDto{}

	err = json.Unmarshal(data, &varCustomAttributeConfigDto)

	if err != nil {
		return err
	}

	*o = CustomAttributeConfigDto(varCustomAttributeConfigDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "span_kinds")
		delete(additionalProperties, "source_attributes")
		delete(additionalProperties, "regex")
		delete(additionalProperties, "value_expr")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomAttributeConfigDto struct {
	value *CustomAttributeConfigDto
	isSet bool
}

func (v NullableCustomAttributeConfigDto) Get() *CustomAttributeConfigDto {
	return v.value
}

func (v *NullableCustomAttributeConfigDto) Set(val *CustomAttributeConfigDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomAttributeConfigDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomAttributeConfigDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomAttributeConfigDto(val *CustomAttributeConfigDto) *NullableCustomAttributeConfigDto {
	return &NullableCustomAttributeConfigDto{value: val, isSet: true}
}

func (v NullableCustomAttributeConfigDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomAttributeConfigDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
