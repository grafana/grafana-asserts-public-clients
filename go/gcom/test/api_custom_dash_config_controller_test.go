/*
Asserts, Inc

Testing CustomDashConfigControllerAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package gcom

import (
	"context"
	"testing"

	openapiclient "github.com/grafana/grafana-asserts-public-clients/go/gcom"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_gcom_CustomDashConfigControllerAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CustomDashConfigControllerAPIService DeleteCustomDashConfig", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var entityType string

		httpRes, err := apiClient.CustomDashConfigControllerAPI.DeleteCustomDashConfig(context.Background(), entityType).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomDashConfigControllerAPIService GetAllCustomDashConfig", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.CustomDashConfigControllerAPI.GetAllCustomDashConfig(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomDashConfigControllerAPIService GetCustomDashConfig", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var entityType string

		resp, httpRes, err := apiClient.CustomDashConfigControllerAPI.GetCustomDashConfig(context.Background(), entityType).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomDashConfigControllerAPIService UpdateCustomDashConfig", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var entityType string

		httpRes, err := apiClient.CustomDashConfigControllerAPI.UpdateCustomDashConfig(context.Background(), entityType).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
