/*
Asserts, Inc

Asserts Public API

API version: 1.0.1
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the SloChartResponseDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SloChartResponseDto{}

// SloChartResponseDto struct for SloChartResponseDto
type SloChartResponseDto struct {
	Title                *string              `json:"title,omitempty"`
	Metrics              []MetricDto          `json:"metrics,omitempty"`
	Thresholds           []ThresholdSingleDto `json:"thresholds,omitempty"`
	StartTimeMs          *int64               `json:"startTimeMs,omitempty"`
	EndTimeMs            *int64               `json:"endTimeMs,omitempty"`
	StepMs               *int64               `json:"stepMs,omitempty"`
	BadEventQuery        *string              `json:"badEventQuery,omitempty"`
	TotalEventQuery      *string              `json:"totalEventQuery,omitempty"`
	MeasurementQuery     *string              `json:"measurementQuery,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SloChartResponseDto SloChartResponseDto

// NewSloChartResponseDto instantiates a new SloChartResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSloChartResponseDto() *SloChartResponseDto {
	this := SloChartResponseDto{}
	return &this
}

// NewSloChartResponseDtoWithDefaults instantiates a new SloChartResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSloChartResponseDtoWithDefaults() *SloChartResponseDto {
	this := SloChartResponseDto{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SloChartResponseDto) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloChartResponseDto) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SloChartResponseDto) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SloChartResponseDto) SetTitle(v string) {
	o.Title = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *SloChartResponseDto) GetMetrics() []MetricDto {
	if o == nil || IsNil(o.Metrics) {
		var ret []MetricDto
		return ret
	}
	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloChartResponseDto) GetMetricsOk() ([]MetricDto, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *SloChartResponseDto) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given []MetricDto and assigns it to the Metrics field.
func (o *SloChartResponseDto) SetMetrics(v []MetricDto) {
	o.Metrics = v
}

// GetThresholds returns the Thresholds field value if set, zero value otherwise.
func (o *SloChartResponseDto) GetThresholds() []ThresholdSingleDto {
	if o == nil || IsNil(o.Thresholds) {
		var ret []ThresholdSingleDto
		return ret
	}
	return o.Thresholds
}

// GetThresholdsOk returns a tuple with the Thresholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloChartResponseDto) GetThresholdsOk() ([]ThresholdSingleDto, bool) {
	if o == nil || IsNil(o.Thresholds) {
		return nil, false
	}
	return o.Thresholds, true
}

// HasThresholds returns a boolean if a field has been set.
func (o *SloChartResponseDto) HasThresholds() bool {
	if o != nil && !IsNil(o.Thresholds) {
		return true
	}

	return false
}

// SetThresholds gets a reference to the given []ThresholdSingleDto and assigns it to the Thresholds field.
func (o *SloChartResponseDto) SetThresholds(v []ThresholdSingleDto) {
	o.Thresholds = v
}

// GetStartTimeMs returns the StartTimeMs field value if set, zero value otherwise.
func (o *SloChartResponseDto) GetStartTimeMs() int64 {
	if o == nil || IsNil(o.StartTimeMs) {
		var ret int64
		return ret
	}
	return *o.StartTimeMs
}

// GetStartTimeMsOk returns a tuple with the StartTimeMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloChartResponseDto) GetStartTimeMsOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTimeMs) {
		return nil, false
	}
	return o.StartTimeMs, true
}

// HasStartTimeMs returns a boolean if a field has been set.
func (o *SloChartResponseDto) HasStartTimeMs() bool {
	if o != nil && !IsNil(o.StartTimeMs) {
		return true
	}

	return false
}

// SetStartTimeMs gets a reference to the given int64 and assigns it to the StartTimeMs field.
func (o *SloChartResponseDto) SetStartTimeMs(v int64) {
	o.StartTimeMs = &v
}

// GetEndTimeMs returns the EndTimeMs field value if set, zero value otherwise.
func (o *SloChartResponseDto) GetEndTimeMs() int64 {
	if o == nil || IsNil(o.EndTimeMs) {
		var ret int64
		return ret
	}
	return *o.EndTimeMs
}

// GetEndTimeMsOk returns a tuple with the EndTimeMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloChartResponseDto) GetEndTimeMsOk() (*int64, bool) {
	if o == nil || IsNil(o.EndTimeMs) {
		return nil, false
	}
	return o.EndTimeMs, true
}

// HasEndTimeMs returns a boolean if a field has been set.
func (o *SloChartResponseDto) HasEndTimeMs() bool {
	if o != nil && !IsNil(o.EndTimeMs) {
		return true
	}

	return false
}

// SetEndTimeMs gets a reference to the given int64 and assigns it to the EndTimeMs field.
func (o *SloChartResponseDto) SetEndTimeMs(v int64) {
	o.EndTimeMs = &v
}

// GetStepMs returns the StepMs field value if set, zero value otherwise.
func (o *SloChartResponseDto) GetStepMs() int64 {
	if o == nil || IsNil(o.StepMs) {
		var ret int64
		return ret
	}
	return *o.StepMs
}

// GetStepMsOk returns a tuple with the StepMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloChartResponseDto) GetStepMsOk() (*int64, bool) {
	if o == nil || IsNil(o.StepMs) {
		return nil, false
	}
	return o.StepMs, true
}

// HasStepMs returns a boolean if a field has been set.
func (o *SloChartResponseDto) HasStepMs() bool {
	if o != nil && !IsNil(o.StepMs) {
		return true
	}

	return false
}

// SetStepMs gets a reference to the given int64 and assigns it to the StepMs field.
func (o *SloChartResponseDto) SetStepMs(v int64) {
	o.StepMs = &v
}

// GetBadEventQuery returns the BadEventQuery field value if set, zero value otherwise.
func (o *SloChartResponseDto) GetBadEventQuery() string {
	if o == nil || IsNil(o.BadEventQuery) {
		var ret string
		return ret
	}
	return *o.BadEventQuery
}

// GetBadEventQueryOk returns a tuple with the BadEventQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloChartResponseDto) GetBadEventQueryOk() (*string, bool) {
	if o == nil || IsNil(o.BadEventQuery) {
		return nil, false
	}
	return o.BadEventQuery, true
}

// HasBadEventQuery returns a boolean if a field has been set.
func (o *SloChartResponseDto) HasBadEventQuery() bool {
	if o != nil && !IsNil(o.BadEventQuery) {
		return true
	}

	return false
}

// SetBadEventQuery gets a reference to the given string and assigns it to the BadEventQuery field.
func (o *SloChartResponseDto) SetBadEventQuery(v string) {
	o.BadEventQuery = &v
}

// GetTotalEventQuery returns the TotalEventQuery field value if set, zero value otherwise.
func (o *SloChartResponseDto) GetTotalEventQuery() string {
	if o == nil || IsNil(o.TotalEventQuery) {
		var ret string
		return ret
	}
	return *o.TotalEventQuery
}

// GetTotalEventQueryOk returns a tuple with the TotalEventQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloChartResponseDto) GetTotalEventQueryOk() (*string, bool) {
	if o == nil || IsNil(o.TotalEventQuery) {
		return nil, false
	}
	return o.TotalEventQuery, true
}

// HasTotalEventQuery returns a boolean if a field has been set.
func (o *SloChartResponseDto) HasTotalEventQuery() bool {
	if o != nil && !IsNil(o.TotalEventQuery) {
		return true
	}

	return false
}

// SetTotalEventQuery gets a reference to the given string and assigns it to the TotalEventQuery field.
func (o *SloChartResponseDto) SetTotalEventQuery(v string) {
	o.TotalEventQuery = &v
}

// GetMeasurementQuery returns the MeasurementQuery field value if set, zero value otherwise.
func (o *SloChartResponseDto) GetMeasurementQuery() string {
	if o == nil || IsNil(o.MeasurementQuery) {
		var ret string
		return ret
	}
	return *o.MeasurementQuery
}

// GetMeasurementQueryOk returns a tuple with the MeasurementQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SloChartResponseDto) GetMeasurementQueryOk() (*string, bool) {
	if o == nil || IsNil(o.MeasurementQuery) {
		return nil, false
	}
	return o.MeasurementQuery, true
}

// HasMeasurementQuery returns a boolean if a field has been set.
func (o *SloChartResponseDto) HasMeasurementQuery() bool {
	if o != nil && !IsNil(o.MeasurementQuery) {
		return true
	}

	return false
}

// SetMeasurementQuery gets a reference to the given string and assigns it to the MeasurementQuery field.
func (o *SloChartResponseDto) SetMeasurementQuery(v string) {
	o.MeasurementQuery = &v
}

func (o SloChartResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SloChartResponseDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.Thresholds) {
		toSerialize["thresholds"] = o.Thresholds
	}
	if !IsNil(o.StartTimeMs) {
		toSerialize["startTimeMs"] = o.StartTimeMs
	}
	if !IsNil(o.EndTimeMs) {
		toSerialize["endTimeMs"] = o.EndTimeMs
	}
	if !IsNil(o.StepMs) {
		toSerialize["stepMs"] = o.StepMs
	}
	if !IsNil(o.BadEventQuery) {
		toSerialize["badEventQuery"] = o.BadEventQuery
	}
	if !IsNil(o.TotalEventQuery) {
		toSerialize["totalEventQuery"] = o.TotalEventQuery
	}
	if !IsNil(o.MeasurementQuery) {
		toSerialize["measurementQuery"] = o.MeasurementQuery
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SloChartResponseDto) UnmarshalJSON(data []byte) (err error) {
	varSloChartResponseDto := _SloChartResponseDto{}

	err = json.Unmarshal(data, &varSloChartResponseDto)

	if err != nil {
		return err
	}

	*o = SloChartResponseDto(varSloChartResponseDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "title")
		delete(additionalProperties, "metrics")
		delete(additionalProperties, "thresholds")
		delete(additionalProperties, "startTimeMs")
		delete(additionalProperties, "endTimeMs")
		delete(additionalProperties, "stepMs")
		delete(additionalProperties, "badEventQuery")
		delete(additionalProperties, "totalEventQuery")
		delete(additionalProperties, "measurementQuery")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSloChartResponseDto struct {
	value *SloChartResponseDto
	isSet bool
}

func (v NullableSloChartResponseDto) Get() *SloChartResponseDto {
	return v.value
}

func (v *NullableSloChartResponseDto) Set(val *SloChartResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSloChartResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSloChartResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSloChartResponseDto(val *SloChartResponseDto) *NullableSloChartResponseDto {
	return &NullableSloChartResponseDto{value: val, isSet: true}
}

func (v NullableSloChartResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSloChartResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
