/*
Asserts, Inc

Asserts Public API

API version: 2025.09.16-110859
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AlertManagerGlobal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertManagerGlobal{}

// AlertManagerGlobal struct for AlertManagerGlobal
type AlertManagerGlobal struct {
	SmtpSmarthost        *string           `json:"smtp_smarthost,omitempty"`
	SmtpFrom             *string           `json:"smtp_from,omitempty"`
	SmtpHello            *string           `json:"smtp_hello,omitempty"`
	SmtpAuthUsername     *string           `json:"smtp_auth_username,omitempty"`
	SmtpAuthPassword     *string           `json:"smtp_auth_password,omitempty"`
	SmtpAuthPasswordFile *string           `json:"smtp_auth_password_file,omitempty"`
	SmtpAuthIdentity     *string           `json:"smtp_auth_identity,omitempty"`
	SmtpAuthSecret       *string           `json:"smtp_auth_secret,omitempty"`
	SmtpRequireTls       *bool             `json:"smtp_require_tls,omitempty"`
	SlackApiUrl          *string           `json:"slack_api_url,omitempty"`
	SlackApiUrlFile      *string           `json:"slack_api_url_file,omitempty"`
	VictoropsApiKey      *string           `json:"victorops_api_key,omitempty"`
	VictoropsApiKeyFile  *string           `json:"victorops_api_key_file,omitempty"`
	VictoropsApiUrl      *string           `json:"victorops_api_url,omitempty"`
	PagerdutyUrl         *string           `json:"pagerduty_url,omitempty"`
	OpsgenieApiKey       *string           `json:"opsgenie_api_key,omitempty"`
	OpsgenieApiKeyFile   *string           `json:"opsgenie_api_key_file,omitempty"`
	OpsgenieApiUrl       *string           `json:"opsgenie_api_url,omitempty"`
	WechatApiUrl         *string           `json:"wechat_api_url,omitempty"`
	WechatApiSecret      *string           `json:"wechat_api_secret,omitempty"`
	WechatApiCorpId      *string           `json:"wechat_api_corp_id,omitempty"`
	TelegramApiUrl       *string           `json:"telegram_api_url,omitempty"`
	WebexApiUrl          *string           `json:"webex_api_url,omitempty"`
	HttpConfig           *AlertManagerHttp `json:"http_config,omitempty"`
	ResolveTimeout       *string           `json:"resolve_timeout,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AlertManagerGlobal AlertManagerGlobal

// NewAlertManagerGlobal instantiates a new AlertManagerGlobal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertManagerGlobal() *AlertManagerGlobal {
	this := AlertManagerGlobal{}
	return &this
}

// NewAlertManagerGlobalWithDefaults instantiates a new AlertManagerGlobal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertManagerGlobalWithDefaults() *AlertManagerGlobal {
	this := AlertManagerGlobal{}
	return &this
}

// GetSmtpSmarthost returns the SmtpSmarthost field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSmtpSmarthost() string {
	if o == nil || IsNil(o.SmtpSmarthost) {
		var ret string
		return ret
	}
	return *o.SmtpSmarthost
}

// GetSmtpSmarthostOk returns a tuple with the SmtpSmarthost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSmtpSmarthostOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpSmarthost) {
		return nil, false
	}
	return o.SmtpSmarthost, true
}

// HasSmtpSmarthost returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSmtpSmarthost() bool {
	if o != nil && !IsNil(o.SmtpSmarthost) {
		return true
	}

	return false
}

// SetSmtpSmarthost gets a reference to the given string and assigns it to the SmtpSmarthost field.
func (o *AlertManagerGlobal) SetSmtpSmarthost(v string) {
	o.SmtpSmarthost = &v
}

// GetSmtpFrom returns the SmtpFrom field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSmtpFrom() string {
	if o == nil || IsNil(o.SmtpFrom) {
		var ret string
		return ret
	}
	return *o.SmtpFrom
}

// GetSmtpFromOk returns a tuple with the SmtpFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSmtpFromOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpFrom) {
		return nil, false
	}
	return o.SmtpFrom, true
}

// HasSmtpFrom returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSmtpFrom() bool {
	if o != nil && !IsNil(o.SmtpFrom) {
		return true
	}

	return false
}

// SetSmtpFrom gets a reference to the given string and assigns it to the SmtpFrom field.
func (o *AlertManagerGlobal) SetSmtpFrom(v string) {
	o.SmtpFrom = &v
}

// GetSmtpHello returns the SmtpHello field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSmtpHello() string {
	if o == nil || IsNil(o.SmtpHello) {
		var ret string
		return ret
	}
	return *o.SmtpHello
}

// GetSmtpHelloOk returns a tuple with the SmtpHello field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSmtpHelloOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpHello) {
		return nil, false
	}
	return o.SmtpHello, true
}

// HasSmtpHello returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSmtpHello() bool {
	if o != nil && !IsNil(o.SmtpHello) {
		return true
	}

	return false
}

// SetSmtpHello gets a reference to the given string and assigns it to the SmtpHello field.
func (o *AlertManagerGlobal) SetSmtpHello(v string) {
	o.SmtpHello = &v
}

// GetSmtpAuthUsername returns the SmtpAuthUsername field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSmtpAuthUsername() string {
	if o == nil || IsNil(o.SmtpAuthUsername) {
		var ret string
		return ret
	}
	return *o.SmtpAuthUsername
}

// GetSmtpAuthUsernameOk returns a tuple with the SmtpAuthUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSmtpAuthUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpAuthUsername) {
		return nil, false
	}
	return o.SmtpAuthUsername, true
}

// HasSmtpAuthUsername returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSmtpAuthUsername() bool {
	if o != nil && !IsNil(o.SmtpAuthUsername) {
		return true
	}

	return false
}

// SetSmtpAuthUsername gets a reference to the given string and assigns it to the SmtpAuthUsername field.
func (o *AlertManagerGlobal) SetSmtpAuthUsername(v string) {
	o.SmtpAuthUsername = &v
}

// GetSmtpAuthPassword returns the SmtpAuthPassword field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSmtpAuthPassword() string {
	if o == nil || IsNil(o.SmtpAuthPassword) {
		var ret string
		return ret
	}
	return *o.SmtpAuthPassword
}

// GetSmtpAuthPasswordOk returns a tuple with the SmtpAuthPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSmtpAuthPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpAuthPassword) {
		return nil, false
	}
	return o.SmtpAuthPassword, true
}

// HasSmtpAuthPassword returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSmtpAuthPassword() bool {
	if o != nil && !IsNil(o.SmtpAuthPassword) {
		return true
	}

	return false
}

// SetSmtpAuthPassword gets a reference to the given string and assigns it to the SmtpAuthPassword field.
func (o *AlertManagerGlobal) SetSmtpAuthPassword(v string) {
	o.SmtpAuthPassword = &v
}

// GetSmtpAuthPasswordFile returns the SmtpAuthPasswordFile field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSmtpAuthPasswordFile() string {
	if o == nil || IsNil(o.SmtpAuthPasswordFile) {
		var ret string
		return ret
	}
	return *o.SmtpAuthPasswordFile
}

// GetSmtpAuthPasswordFileOk returns a tuple with the SmtpAuthPasswordFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSmtpAuthPasswordFileOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpAuthPasswordFile) {
		return nil, false
	}
	return o.SmtpAuthPasswordFile, true
}

// HasSmtpAuthPasswordFile returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSmtpAuthPasswordFile() bool {
	if o != nil && !IsNil(o.SmtpAuthPasswordFile) {
		return true
	}

	return false
}

// SetSmtpAuthPasswordFile gets a reference to the given string and assigns it to the SmtpAuthPasswordFile field.
func (o *AlertManagerGlobal) SetSmtpAuthPasswordFile(v string) {
	o.SmtpAuthPasswordFile = &v
}

// GetSmtpAuthIdentity returns the SmtpAuthIdentity field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSmtpAuthIdentity() string {
	if o == nil || IsNil(o.SmtpAuthIdentity) {
		var ret string
		return ret
	}
	return *o.SmtpAuthIdentity
}

// GetSmtpAuthIdentityOk returns a tuple with the SmtpAuthIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSmtpAuthIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpAuthIdentity) {
		return nil, false
	}
	return o.SmtpAuthIdentity, true
}

// HasSmtpAuthIdentity returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSmtpAuthIdentity() bool {
	if o != nil && !IsNil(o.SmtpAuthIdentity) {
		return true
	}

	return false
}

// SetSmtpAuthIdentity gets a reference to the given string and assigns it to the SmtpAuthIdentity field.
func (o *AlertManagerGlobal) SetSmtpAuthIdentity(v string) {
	o.SmtpAuthIdentity = &v
}

// GetSmtpAuthSecret returns the SmtpAuthSecret field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSmtpAuthSecret() string {
	if o == nil || IsNil(o.SmtpAuthSecret) {
		var ret string
		return ret
	}
	return *o.SmtpAuthSecret
}

// GetSmtpAuthSecretOk returns a tuple with the SmtpAuthSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSmtpAuthSecretOk() (*string, bool) {
	if o == nil || IsNil(o.SmtpAuthSecret) {
		return nil, false
	}
	return o.SmtpAuthSecret, true
}

// HasSmtpAuthSecret returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSmtpAuthSecret() bool {
	if o != nil && !IsNil(o.SmtpAuthSecret) {
		return true
	}

	return false
}

// SetSmtpAuthSecret gets a reference to the given string and assigns it to the SmtpAuthSecret field.
func (o *AlertManagerGlobal) SetSmtpAuthSecret(v string) {
	o.SmtpAuthSecret = &v
}

// GetSmtpRequireTls returns the SmtpRequireTls field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSmtpRequireTls() bool {
	if o == nil || IsNil(o.SmtpRequireTls) {
		var ret bool
		return ret
	}
	return *o.SmtpRequireTls
}

// GetSmtpRequireTlsOk returns a tuple with the SmtpRequireTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSmtpRequireTlsOk() (*bool, bool) {
	if o == nil || IsNil(o.SmtpRequireTls) {
		return nil, false
	}
	return o.SmtpRequireTls, true
}

// HasSmtpRequireTls returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSmtpRequireTls() bool {
	if o != nil && !IsNil(o.SmtpRequireTls) {
		return true
	}

	return false
}

// SetSmtpRequireTls gets a reference to the given bool and assigns it to the SmtpRequireTls field.
func (o *AlertManagerGlobal) SetSmtpRequireTls(v bool) {
	o.SmtpRequireTls = &v
}

// GetSlackApiUrl returns the SlackApiUrl field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSlackApiUrl() string {
	if o == nil || IsNil(o.SlackApiUrl) {
		var ret string
		return ret
	}
	return *o.SlackApiUrl
}

// GetSlackApiUrlOk returns a tuple with the SlackApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSlackApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SlackApiUrl) {
		return nil, false
	}
	return o.SlackApiUrl, true
}

// HasSlackApiUrl returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSlackApiUrl() bool {
	if o != nil && !IsNil(o.SlackApiUrl) {
		return true
	}

	return false
}

// SetSlackApiUrl gets a reference to the given string and assigns it to the SlackApiUrl field.
func (o *AlertManagerGlobal) SetSlackApiUrl(v string) {
	o.SlackApiUrl = &v
}

// GetSlackApiUrlFile returns the SlackApiUrlFile field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetSlackApiUrlFile() string {
	if o == nil || IsNil(o.SlackApiUrlFile) {
		var ret string
		return ret
	}
	return *o.SlackApiUrlFile
}

// GetSlackApiUrlFileOk returns a tuple with the SlackApiUrlFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetSlackApiUrlFileOk() (*string, bool) {
	if o == nil || IsNil(o.SlackApiUrlFile) {
		return nil, false
	}
	return o.SlackApiUrlFile, true
}

// HasSlackApiUrlFile returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasSlackApiUrlFile() bool {
	if o != nil && !IsNil(o.SlackApiUrlFile) {
		return true
	}

	return false
}

// SetSlackApiUrlFile gets a reference to the given string and assigns it to the SlackApiUrlFile field.
func (o *AlertManagerGlobal) SetSlackApiUrlFile(v string) {
	o.SlackApiUrlFile = &v
}

// GetVictoropsApiKey returns the VictoropsApiKey field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetVictoropsApiKey() string {
	if o == nil || IsNil(o.VictoropsApiKey) {
		var ret string
		return ret
	}
	return *o.VictoropsApiKey
}

// GetVictoropsApiKeyOk returns a tuple with the VictoropsApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetVictoropsApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.VictoropsApiKey) {
		return nil, false
	}
	return o.VictoropsApiKey, true
}

// HasVictoropsApiKey returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasVictoropsApiKey() bool {
	if o != nil && !IsNil(o.VictoropsApiKey) {
		return true
	}

	return false
}

// SetVictoropsApiKey gets a reference to the given string and assigns it to the VictoropsApiKey field.
func (o *AlertManagerGlobal) SetVictoropsApiKey(v string) {
	o.VictoropsApiKey = &v
}

// GetVictoropsApiKeyFile returns the VictoropsApiKeyFile field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetVictoropsApiKeyFile() string {
	if o == nil || IsNil(o.VictoropsApiKeyFile) {
		var ret string
		return ret
	}
	return *o.VictoropsApiKeyFile
}

// GetVictoropsApiKeyFileOk returns a tuple with the VictoropsApiKeyFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetVictoropsApiKeyFileOk() (*string, bool) {
	if o == nil || IsNil(o.VictoropsApiKeyFile) {
		return nil, false
	}
	return o.VictoropsApiKeyFile, true
}

// HasVictoropsApiKeyFile returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasVictoropsApiKeyFile() bool {
	if o != nil && !IsNil(o.VictoropsApiKeyFile) {
		return true
	}

	return false
}

// SetVictoropsApiKeyFile gets a reference to the given string and assigns it to the VictoropsApiKeyFile field.
func (o *AlertManagerGlobal) SetVictoropsApiKeyFile(v string) {
	o.VictoropsApiKeyFile = &v
}

// GetVictoropsApiUrl returns the VictoropsApiUrl field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetVictoropsApiUrl() string {
	if o == nil || IsNil(o.VictoropsApiUrl) {
		var ret string
		return ret
	}
	return *o.VictoropsApiUrl
}

// GetVictoropsApiUrlOk returns a tuple with the VictoropsApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetVictoropsApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VictoropsApiUrl) {
		return nil, false
	}
	return o.VictoropsApiUrl, true
}

// HasVictoropsApiUrl returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasVictoropsApiUrl() bool {
	if o != nil && !IsNil(o.VictoropsApiUrl) {
		return true
	}

	return false
}

// SetVictoropsApiUrl gets a reference to the given string and assigns it to the VictoropsApiUrl field.
func (o *AlertManagerGlobal) SetVictoropsApiUrl(v string) {
	o.VictoropsApiUrl = &v
}

// GetPagerdutyUrl returns the PagerdutyUrl field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetPagerdutyUrl() string {
	if o == nil || IsNil(o.PagerdutyUrl) {
		var ret string
		return ret
	}
	return *o.PagerdutyUrl
}

// GetPagerdutyUrlOk returns a tuple with the PagerdutyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetPagerdutyUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PagerdutyUrl) {
		return nil, false
	}
	return o.PagerdutyUrl, true
}

// HasPagerdutyUrl returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasPagerdutyUrl() bool {
	if o != nil && !IsNil(o.PagerdutyUrl) {
		return true
	}

	return false
}

// SetPagerdutyUrl gets a reference to the given string and assigns it to the PagerdutyUrl field.
func (o *AlertManagerGlobal) SetPagerdutyUrl(v string) {
	o.PagerdutyUrl = &v
}

// GetOpsgenieApiKey returns the OpsgenieApiKey field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetOpsgenieApiKey() string {
	if o == nil || IsNil(o.OpsgenieApiKey) {
		var ret string
		return ret
	}
	return *o.OpsgenieApiKey
}

// GetOpsgenieApiKeyOk returns a tuple with the OpsgenieApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetOpsgenieApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.OpsgenieApiKey) {
		return nil, false
	}
	return o.OpsgenieApiKey, true
}

// HasOpsgenieApiKey returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasOpsgenieApiKey() bool {
	if o != nil && !IsNil(o.OpsgenieApiKey) {
		return true
	}

	return false
}

// SetOpsgenieApiKey gets a reference to the given string and assigns it to the OpsgenieApiKey field.
func (o *AlertManagerGlobal) SetOpsgenieApiKey(v string) {
	o.OpsgenieApiKey = &v
}

// GetOpsgenieApiKeyFile returns the OpsgenieApiKeyFile field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetOpsgenieApiKeyFile() string {
	if o == nil || IsNil(o.OpsgenieApiKeyFile) {
		var ret string
		return ret
	}
	return *o.OpsgenieApiKeyFile
}

// GetOpsgenieApiKeyFileOk returns a tuple with the OpsgenieApiKeyFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetOpsgenieApiKeyFileOk() (*string, bool) {
	if o == nil || IsNil(o.OpsgenieApiKeyFile) {
		return nil, false
	}
	return o.OpsgenieApiKeyFile, true
}

// HasOpsgenieApiKeyFile returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasOpsgenieApiKeyFile() bool {
	if o != nil && !IsNil(o.OpsgenieApiKeyFile) {
		return true
	}

	return false
}

// SetOpsgenieApiKeyFile gets a reference to the given string and assigns it to the OpsgenieApiKeyFile field.
func (o *AlertManagerGlobal) SetOpsgenieApiKeyFile(v string) {
	o.OpsgenieApiKeyFile = &v
}

// GetOpsgenieApiUrl returns the OpsgenieApiUrl field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetOpsgenieApiUrl() string {
	if o == nil || IsNil(o.OpsgenieApiUrl) {
		var ret string
		return ret
	}
	return *o.OpsgenieApiUrl
}

// GetOpsgenieApiUrlOk returns a tuple with the OpsgenieApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetOpsgenieApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OpsgenieApiUrl) {
		return nil, false
	}
	return o.OpsgenieApiUrl, true
}

// HasOpsgenieApiUrl returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasOpsgenieApiUrl() bool {
	if o != nil && !IsNil(o.OpsgenieApiUrl) {
		return true
	}

	return false
}

// SetOpsgenieApiUrl gets a reference to the given string and assigns it to the OpsgenieApiUrl field.
func (o *AlertManagerGlobal) SetOpsgenieApiUrl(v string) {
	o.OpsgenieApiUrl = &v
}

// GetWechatApiUrl returns the WechatApiUrl field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetWechatApiUrl() string {
	if o == nil || IsNil(o.WechatApiUrl) {
		var ret string
		return ret
	}
	return *o.WechatApiUrl
}

// GetWechatApiUrlOk returns a tuple with the WechatApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetWechatApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WechatApiUrl) {
		return nil, false
	}
	return o.WechatApiUrl, true
}

// HasWechatApiUrl returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasWechatApiUrl() bool {
	if o != nil && !IsNil(o.WechatApiUrl) {
		return true
	}

	return false
}

// SetWechatApiUrl gets a reference to the given string and assigns it to the WechatApiUrl field.
func (o *AlertManagerGlobal) SetWechatApiUrl(v string) {
	o.WechatApiUrl = &v
}

// GetWechatApiSecret returns the WechatApiSecret field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetWechatApiSecret() string {
	if o == nil || IsNil(o.WechatApiSecret) {
		var ret string
		return ret
	}
	return *o.WechatApiSecret
}

// GetWechatApiSecretOk returns a tuple with the WechatApiSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetWechatApiSecretOk() (*string, bool) {
	if o == nil || IsNil(o.WechatApiSecret) {
		return nil, false
	}
	return o.WechatApiSecret, true
}

// HasWechatApiSecret returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasWechatApiSecret() bool {
	if o != nil && !IsNil(o.WechatApiSecret) {
		return true
	}

	return false
}

// SetWechatApiSecret gets a reference to the given string and assigns it to the WechatApiSecret field.
func (o *AlertManagerGlobal) SetWechatApiSecret(v string) {
	o.WechatApiSecret = &v
}

// GetWechatApiCorpId returns the WechatApiCorpId field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetWechatApiCorpId() string {
	if o == nil || IsNil(o.WechatApiCorpId) {
		var ret string
		return ret
	}
	return *o.WechatApiCorpId
}

// GetWechatApiCorpIdOk returns a tuple with the WechatApiCorpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetWechatApiCorpIdOk() (*string, bool) {
	if o == nil || IsNil(o.WechatApiCorpId) {
		return nil, false
	}
	return o.WechatApiCorpId, true
}

// HasWechatApiCorpId returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasWechatApiCorpId() bool {
	if o != nil && !IsNil(o.WechatApiCorpId) {
		return true
	}

	return false
}

// SetWechatApiCorpId gets a reference to the given string and assigns it to the WechatApiCorpId field.
func (o *AlertManagerGlobal) SetWechatApiCorpId(v string) {
	o.WechatApiCorpId = &v
}

// GetTelegramApiUrl returns the TelegramApiUrl field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetTelegramApiUrl() string {
	if o == nil || IsNil(o.TelegramApiUrl) {
		var ret string
		return ret
	}
	return *o.TelegramApiUrl
}

// GetTelegramApiUrlOk returns a tuple with the TelegramApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetTelegramApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TelegramApiUrl) {
		return nil, false
	}
	return o.TelegramApiUrl, true
}

// HasTelegramApiUrl returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasTelegramApiUrl() bool {
	if o != nil && !IsNil(o.TelegramApiUrl) {
		return true
	}

	return false
}

// SetTelegramApiUrl gets a reference to the given string and assigns it to the TelegramApiUrl field.
func (o *AlertManagerGlobal) SetTelegramApiUrl(v string) {
	o.TelegramApiUrl = &v
}

// GetWebexApiUrl returns the WebexApiUrl field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetWebexApiUrl() string {
	if o == nil || IsNil(o.WebexApiUrl) {
		var ret string
		return ret
	}
	return *o.WebexApiUrl
}

// GetWebexApiUrlOk returns a tuple with the WebexApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetWebexApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WebexApiUrl) {
		return nil, false
	}
	return o.WebexApiUrl, true
}

// HasWebexApiUrl returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasWebexApiUrl() bool {
	if o != nil && !IsNil(o.WebexApiUrl) {
		return true
	}

	return false
}

// SetWebexApiUrl gets a reference to the given string and assigns it to the WebexApiUrl field.
func (o *AlertManagerGlobal) SetWebexApiUrl(v string) {
	o.WebexApiUrl = &v
}

// GetHttpConfig returns the HttpConfig field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetHttpConfig() AlertManagerHttp {
	if o == nil || IsNil(o.HttpConfig) {
		var ret AlertManagerHttp
		return ret
	}
	return *o.HttpConfig
}

// GetHttpConfigOk returns a tuple with the HttpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetHttpConfigOk() (*AlertManagerHttp, bool) {
	if o == nil || IsNil(o.HttpConfig) {
		return nil, false
	}
	return o.HttpConfig, true
}

// HasHttpConfig returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasHttpConfig() bool {
	if o != nil && !IsNil(o.HttpConfig) {
		return true
	}

	return false
}

// SetHttpConfig gets a reference to the given AlertManagerHttp and assigns it to the HttpConfig field.
func (o *AlertManagerGlobal) SetHttpConfig(v AlertManagerHttp) {
	o.HttpConfig = &v
}

// GetResolveTimeout returns the ResolveTimeout field value if set, zero value otherwise.
func (o *AlertManagerGlobal) GetResolveTimeout() string {
	if o == nil || IsNil(o.ResolveTimeout) {
		var ret string
		return ret
	}
	return *o.ResolveTimeout
}

// GetResolveTimeoutOk returns a tuple with the ResolveTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertManagerGlobal) GetResolveTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.ResolveTimeout) {
		return nil, false
	}
	return o.ResolveTimeout, true
}

// HasResolveTimeout returns a boolean if a field has been set.
func (o *AlertManagerGlobal) HasResolveTimeout() bool {
	if o != nil && !IsNil(o.ResolveTimeout) {
		return true
	}

	return false
}

// SetResolveTimeout gets a reference to the given string and assigns it to the ResolveTimeout field.
func (o *AlertManagerGlobal) SetResolveTimeout(v string) {
	o.ResolveTimeout = &v
}

func (o AlertManagerGlobal) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertManagerGlobal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SmtpSmarthost) {
		toSerialize["smtp_smarthost"] = o.SmtpSmarthost
	}
	if !IsNil(o.SmtpFrom) {
		toSerialize["smtp_from"] = o.SmtpFrom
	}
	if !IsNil(o.SmtpHello) {
		toSerialize["smtp_hello"] = o.SmtpHello
	}
	if !IsNil(o.SmtpAuthUsername) {
		toSerialize["smtp_auth_username"] = o.SmtpAuthUsername
	}
	if !IsNil(o.SmtpAuthPassword) {
		toSerialize["smtp_auth_password"] = o.SmtpAuthPassword
	}
	if !IsNil(o.SmtpAuthPasswordFile) {
		toSerialize["smtp_auth_password_file"] = o.SmtpAuthPasswordFile
	}
	if !IsNil(o.SmtpAuthIdentity) {
		toSerialize["smtp_auth_identity"] = o.SmtpAuthIdentity
	}
	if !IsNil(o.SmtpAuthSecret) {
		toSerialize["smtp_auth_secret"] = o.SmtpAuthSecret
	}
	if !IsNil(o.SmtpRequireTls) {
		toSerialize["smtp_require_tls"] = o.SmtpRequireTls
	}
	if !IsNil(o.SlackApiUrl) {
		toSerialize["slack_api_url"] = o.SlackApiUrl
	}
	if !IsNil(o.SlackApiUrlFile) {
		toSerialize["slack_api_url_file"] = o.SlackApiUrlFile
	}
	if !IsNil(o.VictoropsApiKey) {
		toSerialize["victorops_api_key"] = o.VictoropsApiKey
	}
	if !IsNil(o.VictoropsApiKeyFile) {
		toSerialize["victorops_api_key_file"] = o.VictoropsApiKeyFile
	}
	if !IsNil(o.VictoropsApiUrl) {
		toSerialize["victorops_api_url"] = o.VictoropsApiUrl
	}
	if !IsNil(o.PagerdutyUrl) {
		toSerialize["pagerduty_url"] = o.PagerdutyUrl
	}
	if !IsNil(o.OpsgenieApiKey) {
		toSerialize["opsgenie_api_key"] = o.OpsgenieApiKey
	}
	if !IsNil(o.OpsgenieApiKeyFile) {
		toSerialize["opsgenie_api_key_file"] = o.OpsgenieApiKeyFile
	}
	if !IsNil(o.OpsgenieApiUrl) {
		toSerialize["opsgenie_api_url"] = o.OpsgenieApiUrl
	}
	if !IsNil(o.WechatApiUrl) {
		toSerialize["wechat_api_url"] = o.WechatApiUrl
	}
	if !IsNil(o.WechatApiSecret) {
		toSerialize["wechat_api_secret"] = o.WechatApiSecret
	}
	if !IsNil(o.WechatApiCorpId) {
		toSerialize["wechat_api_corp_id"] = o.WechatApiCorpId
	}
	if !IsNil(o.TelegramApiUrl) {
		toSerialize["telegram_api_url"] = o.TelegramApiUrl
	}
	if !IsNil(o.WebexApiUrl) {
		toSerialize["webex_api_url"] = o.WebexApiUrl
	}
	if !IsNil(o.HttpConfig) {
		toSerialize["http_config"] = o.HttpConfig
	}
	if !IsNil(o.ResolveTimeout) {
		toSerialize["resolve_timeout"] = o.ResolveTimeout
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AlertManagerGlobal) UnmarshalJSON(data []byte) (err error) {
	varAlertManagerGlobal := _AlertManagerGlobal{}

	err = json.Unmarshal(data, &varAlertManagerGlobal)

	if err != nil {
		return err
	}

	*o = AlertManagerGlobal(varAlertManagerGlobal)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "smtp_smarthost")
		delete(additionalProperties, "smtp_from")
		delete(additionalProperties, "smtp_hello")
		delete(additionalProperties, "smtp_auth_username")
		delete(additionalProperties, "smtp_auth_password")
		delete(additionalProperties, "smtp_auth_password_file")
		delete(additionalProperties, "smtp_auth_identity")
		delete(additionalProperties, "smtp_auth_secret")
		delete(additionalProperties, "smtp_require_tls")
		delete(additionalProperties, "slack_api_url")
		delete(additionalProperties, "slack_api_url_file")
		delete(additionalProperties, "victorops_api_key")
		delete(additionalProperties, "victorops_api_key_file")
		delete(additionalProperties, "victorops_api_url")
		delete(additionalProperties, "pagerduty_url")
		delete(additionalProperties, "opsgenie_api_key")
		delete(additionalProperties, "opsgenie_api_key_file")
		delete(additionalProperties, "opsgenie_api_url")
		delete(additionalProperties, "wechat_api_url")
		delete(additionalProperties, "wechat_api_secret")
		delete(additionalProperties, "wechat_api_corp_id")
		delete(additionalProperties, "telegram_api_url")
		delete(additionalProperties, "webex_api_url")
		delete(additionalProperties, "http_config")
		delete(additionalProperties, "resolve_timeout")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAlertManagerGlobal struct {
	value *AlertManagerGlobal
	isSet bool
}

func (v NullableAlertManagerGlobal) Get() *AlertManagerGlobal {
	return v.value
}

func (v *NullableAlertManagerGlobal) Set(val *AlertManagerGlobal) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertManagerGlobal) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertManagerGlobal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertManagerGlobal(val *AlertManagerGlobal) *NullableAlertManagerGlobal {
	return &NullableAlertManagerGlobal{value: val, isSet: true}
}

func (v NullableAlertManagerGlobal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertManagerGlobal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
