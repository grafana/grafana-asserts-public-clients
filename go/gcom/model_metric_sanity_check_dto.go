/*
Asserts, Inc

Asserts Public API

API version: 1.0.0
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the MetricSanityCheckDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricSanityCheckDto{}

// MetricSanityCheckDto struct for MetricSanityCheckDto
type MetricSanityCheckDto struct {
	FailedSanityCheckSteps []MetricSanityCheckResult `json:"failedSanityCheckSteps,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _MetricSanityCheckDto MetricSanityCheckDto

// NewMetricSanityCheckDto instantiates a new MetricSanityCheckDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricSanityCheckDto() *MetricSanityCheckDto {
	this := MetricSanityCheckDto{}
	return &this
}

// NewMetricSanityCheckDtoWithDefaults instantiates a new MetricSanityCheckDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricSanityCheckDtoWithDefaults() *MetricSanityCheckDto {
	this := MetricSanityCheckDto{}
	return &this
}

// GetFailedSanityCheckSteps returns the FailedSanityCheckSteps field value if set, zero value otherwise.
func (o *MetricSanityCheckDto) GetFailedSanityCheckSteps() []MetricSanityCheckResult {
	if o == nil || IsNil(o.FailedSanityCheckSteps) {
		var ret []MetricSanityCheckResult
		return ret
	}
	return o.FailedSanityCheckSteps
}

// GetFailedSanityCheckStepsOk returns a tuple with the FailedSanityCheckSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricSanityCheckDto) GetFailedSanityCheckStepsOk() ([]MetricSanityCheckResult, bool) {
	if o == nil || IsNil(o.FailedSanityCheckSteps) {
		return nil, false
	}
	return o.FailedSanityCheckSteps, true
}

// HasFailedSanityCheckSteps returns a boolean if a field has been set.
func (o *MetricSanityCheckDto) HasFailedSanityCheckSteps() bool {
	if o != nil && !IsNil(o.FailedSanityCheckSteps) {
		return true
	}

	return false
}

// SetFailedSanityCheckSteps gets a reference to the given []MetricSanityCheckResult and assigns it to the FailedSanityCheckSteps field.
func (o *MetricSanityCheckDto) SetFailedSanityCheckSteps(v []MetricSanityCheckResult) {
	o.FailedSanityCheckSteps = v
}

func (o MetricSanityCheckDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricSanityCheckDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FailedSanityCheckSteps) {
		toSerialize["failedSanityCheckSteps"] = o.FailedSanityCheckSteps
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetricSanityCheckDto) UnmarshalJSON(data []byte) (err error) {
	varMetricSanityCheckDto := _MetricSanityCheckDto{}

	err = json.Unmarshal(data, &varMetricSanityCheckDto)

	if err != nil {
		return err
	}

	*o = MetricSanityCheckDto(varMetricSanityCheckDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "failedSanityCheckSteps")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetricSanityCheckDto struct {
	value *MetricSanityCheckDto
	isSet bool
}

func (v NullableMetricSanityCheckDto) Get() *MetricSanityCheckDto {
	return v.value
}

func (v *NullableMetricSanityCheckDto) Set(val *MetricSanityCheckDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricSanityCheckDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricSanityCheckDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricSanityCheckDto(val *MetricSanityCheckDto) *NullableMetricSanityCheckDto {
	return &NullableMetricSanityCheckDto{value: val, isSet: true}
}

func (v NullableMetricSanityCheckDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricSanityCheckDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
