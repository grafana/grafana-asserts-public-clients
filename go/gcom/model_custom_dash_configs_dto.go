/*
Asserts, Inc

Asserts Public API

API version: 1.0.4
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the CustomDashConfigsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomDashConfigsDto{}

// CustomDashConfigsDto struct for CustomDashConfigsDto
type CustomDashConfigsDto struct {
	EntityType           *string               `json:"entityType,omitempty"`
	DashConfigDto        []CustomDashConfigDto `json:"dashConfigDto,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomDashConfigsDto CustomDashConfigsDto

// NewCustomDashConfigsDto instantiates a new CustomDashConfigsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomDashConfigsDto() *CustomDashConfigsDto {
	this := CustomDashConfigsDto{}
	return &this
}

// NewCustomDashConfigsDtoWithDefaults instantiates a new CustomDashConfigsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomDashConfigsDtoWithDefaults() *CustomDashConfigsDto {
	this := CustomDashConfigsDto{}
	return &this
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *CustomDashConfigsDto) GetEntityType() string {
	if o == nil || IsNil(o.EntityType) {
		var ret string
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDashConfigsDto) GetEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EntityType) {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *CustomDashConfigsDto) HasEntityType() bool {
	if o != nil && !IsNil(o.EntityType) {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given string and assigns it to the EntityType field.
func (o *CustomDashConfigsDto) SetEntityType(v string) {
	o.EntityType = &v
}

// GetDashConfigDto returns the DashConfigDto field value if set, zero value otherwise.
func (o *CustomDashConfigsDto) GetDashConfigDto() []CustomDashConfigDto {
	if o == nil || IsNil(o.DashConfigDto) {
		var ret []CustomDashConfigDto
		return ret
	}
	return o.DashConfigDto
}

// GetDashConfigDtoOk returns a tuple with the DashConfigDto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDashConfigsDto) GetDashConfigDtoOk() ([]CustomDashConfigDto, bool) {
	if o == nil || IsNil(o.DashConfigDto) {
		return nil, false
	}
	return o.DashConfigDto, true
}

// HasDashConfigDto returns a boolean if a field has been set.
func (o *CustomDashConfigsDto) HasDashConfigDto() bool {
	if o != nil && !IsNil(o.DashConfigDto) {
		return true
	}

	return false
}

// SetDashConfigDto gets a reference to the given []CustomDashConfigDto and assigns it to the DashConfigDto field.
func (o *CustomDashConfigsDto) SetDashConfigDto(v []CustomDashConfigDto) {
	o.DashConfigDto = v
}

func (o CustomDashConfigsDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomDashConfigsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntityType) {
		toSerialize["entityType"] = o.EntityType
	}
	if !IsNil(o.DashConfigDto) {
		toSerialize["dashConfigDto"] = o.DashConfigDto
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomDashConfigsDto) UnmarshalJSON(data []byte) (err error) {
	varCustomDashConfigsDto := _CustomDashConfigsDto{}

	err = json.Unmarshal(data, &varCustomDashConfigsDto)

	if err != nil {
		return err
	}

	*o = CustomDashConfigsDto(varCustomDashConfigsDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entityType")
		delete(additionalProperties, "dashConfigDto")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomDashConfigsDto struct {
	value *CustomDashConfigsDto
	isSet bool
}

func (v NullableCustomDashConfigsDto) Get() *CustomDashConfigsDto {
	return v.value
}

func (v *NullableCustomDashConfigsDto) Set(val *CustomDashConfigsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomDashConfigsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomDashConfigsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomDashConfigsDto(val *CustomDashConfigsDto) *NullableCustomDashConfigsDto {
	return &NullableCustomDashConfigsDto{value: val, isSet: true}
}

func (v NullableCustomDashConfigsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomDashConfigsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
