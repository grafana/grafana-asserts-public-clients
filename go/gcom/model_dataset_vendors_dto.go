/*
Asserts, Inc

Asserts Public API

API version: 2025.08.07-125604
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the DatasetVendorsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatasetVendorsDto{}

// DatasetVendorsDto struct for DatasetVendorsDto
type DatasetVendorsDto struct {
	Items                []DatasetVendorDto `json:"items,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DatasetVendorsDto DatasetVendorsDto

// NewDatasetVendorsDto instantiates a new DatasetVendorsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatasetVendorsDto() *DatasetVendorsDto {
	this := DatasetVendorsDto{}
	return &this
}

// NewDatasetVendorsDtoWithDefaults instantiates a new DatasetVendorsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatasetVendorsDtoWithDefaults() *DatasetVendorsDto {
	this := DatasetVendorsDto{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *DatasetVendorsDto) GetItems() []DatasetVendorDto {
	if o == nil || IsNil(o.Items) {
		var ret []DatasetVendorDto
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetVendorsDto) GetItemsOk() ([]DatasetVendorDto, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *DatasetVendorsDto) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []DatasetVendorDto and assigns it to the Items field.
func (o *DatasetVendorsDto) SetItems(v []DatasetVendorDto) {
	o.Items = v
}

func (o DatasetVendorsDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatasetVendorsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DatasetVendorsDto) UnmarshalJSON(data []byte) (err error) {
	varDatasetVendorsDto := _DatasetVendorsDto{}

	err = json.Unmarshal(data, &varDatasetVendorsDto)

	if err != nil {
		return err
	}

	*o = DatasetVendorsDto(varDatasetVendorsDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "items")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDatasetVendorsDto struct {
	value *DatasetVendorsDto
	isSet bool
}

func (v NullableDatasetVendorsDto) Get() *DatasetVendorsDto {
	return v.value
}

func (v *NullableDatasetVendorsDto) Set(val *DatasetVendorsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDatasetVendorsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDatasetVendorsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatasetVendorsDto(val *DatasetVendorsDto) *NullableDatasetVendorsDto {
	return &NullableDatasetVendorsDto{value: val, isSet: true}
}

func (v NullableDatasetVendorsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatasetVendorsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
