/*
Asserts, Inc

Asserts Public API

API version: 2025.09.11-132913
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the ThresholdRulesDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThresholdRulesDto{}

// ThresholdRulesDto struct for ThresholdRulesDto
type ThresholdRulesDto struct {
	GlobalThresholds     []PrometheusRuleDto `json:"globalThresholds,omitempty"`
	CustomThresholds     []PrometheusRuleDto `json:"customThresholds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ThresholdRulesDto ThresholdRulesDto

// NewThresholdRulesDto instantiates a new ThresholdRulesDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThresholdRulesDto() *ThresholdRulesDto {
	this := ThresholdRulesDto{}
	return &this
}

// NewThresholdRulesDtoWithDefaults instantiates a new ThresholdRulesDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThresholdRulesDtoWithDefaults() *ThresholdRulesDto {
	this := ThresholdRulesDto{}
	return &this
}

// GetGlobalThresholds returns the GlobalThresholds field value if set, zero value otherwise.
func (o *ThresholdRulesDto) GetGlobalThresholds() []PrometheusRuleDto {
	if o == nil || IsNil(o.GlobalThresholds) {
		var ret []PrometheusRuleDto
		return ret
	}
	return o.GlobalThresholds
}

// GetGlobalThresholdsOk returns a tuple with the GlobalThresholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRulesDto) GetGlobalThresholdsOk() ([]PrometheusRuleDto, bool) {
	if o == nil || IsNil(o.GlobalThresholds) {
		return nil, false
	}
	return o.GlobalThresholds, true
}

// HasGlobalThresholds returns a boolean if a field has been set.
func (o *ThresholdRulesDto) HasGlobalThresholds() bool {
	if o != nil && !IsNil(o.GlobalThresholds) {
		return true
	}

	return false
}

// SetGlobalThresholds gets a reference to the given []PrometheusRuleDto and assigns it to the GlobalThresholds field.
func (o *ThresholdRulesDto) SetGlobalThresholds(v []PrometheusRuleDto) {
	o.GlobalThresholds = v
}

// GetCustomThresholds returns the CustomThresholds field value if set, zero value otherwise.
func (o *ThresholdRulesDto) GetCustomThresholds() []PrometheusRuleDto {
	if o == nil || IsNil(o.CustomThresholds) {
		var ret []PrometheusRuleDto
		return ret
	}
	return o.CustomThresholds
}

// GetCustomThresholdsOk returns a tuple with the CustomThresholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRulesDto) GetCustomThresholdsOk() ([]PrometheusRuleDto, bool) {
	if o == nil || IsNil(o.CustomThresholds) {
		return nil, false
	}
	return o.CustomThresholds, true
}

// HasCustomThresholds returns a boolean if a field has been set.
func (o *ThresholdRulesDto) HasCustomThresholds() bool {
	if o != nil && !IsNil(o.CustomThresholds) {
		return true
	}

	return false
}

// SetCustomThresholds gets a reference to the given []PrometheusRuleDto and assigns it to the CustomThresholds field.
func (o *ThresholdRulesDto) SetCustomThresholds(v []PrometheusRuleDto) {
	o.CustomThresholds = v
}

func (o ThresholdRulesDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThresholdRulesDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlobalThresholds) {
		toSerialize["globalThresholds"] = o.GlobalThresholds
	}
	if !IsNil(o.CustomThresholds) {
		toSerialize["customThresholds"] = o.CustomThresholds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ThresholdRulesDto) UnmarshalJSON(data []byte) (err error) {
	varThresholdRulesDto := _ThresholdRulesDto{}

	err = json.Unmarshal(data, &varThresholdRulesDto)

	if err != nil {
		return err
	}

	*o = ThresholdRulesDto(varThresholdRulesDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "globalThresholds")
		delete(additionalProperties, "customThresholds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableThresholdRulesDto struct {
	value *ThresholdRulesDto
	isSet bool
}

func (v NullableThresholdRulesDto) Get() *ThresholdRulesDto {
	return v.value
}

func (v *NullableThresholdRulesDto) Set(val *ThresholdRulesDto) {
	v.value = val
	v.isSet = true
}

func (v NullableThresholdRulesDto) IsSet() bool {
	return v.isSet
}

func (v *NullableThresholdRulesDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThresholdRulesDto(val *ThresholdRulesDto) *NullableThresholdRulesDto {
	return &NullableThresholdRulesDto{value: val, isSet: true}
}

func (v NullableThresholdRulesDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThresholdRulesDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
