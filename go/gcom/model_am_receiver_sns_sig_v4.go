/*
Asserts, Inc

Asserts Public API

API version: 1.0.1
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AMReceiverSNSSigV4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AMReceiverSNSSigV4{}

// AMReceiverSNSSigV4 struct for AMReceiverSNSSigV4
type AMReceiverSNSSigV4 struct {
	Region               *string `json:"region,omitempty"`
	Profile              *string `json:"profile,omitempty"`
	AccessKey            *string `json:"access_key,omitempty"`
	SecretKey            *string `json:"secret_key,omitempty"`
	RoleArn              *string `json:"role_arn,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AMReceiverSNSSigV4 AMReceiverSNSSigV4

// NewAMReceiverSNSSigV4 instantiates a new AMReceiverSNSSigV4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAMReceiverSNSSigV4() *AMReceiverSNSSigV4 {
	this := AMReceiverSNSSigV4{}
	return &this
}

// NewAMReceiverSNSSigV4WithDefaults instantiates a new AMReceiverSNSSigV4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAMReceiverSNSSigV4WithDefaults() *AMReceiverSNSSigV4 {
	this := AMReceiverSNSSigV4{}
	return &this
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AMReceiverSNSSigV4) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSNSSigV4) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AMReceiverSNSSigV4) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AMReceiverSNSSigV4) SetRegion(v string) {
	o.Region = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *AMReceiverSNSSigV4) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSNSSigV4) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *AMReceiverSNSSigV4) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *AMReceiverSNSSigV4) SetProfile(v string) {
	o.Profile = &v
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *AMReceiverSNSSigV4) GetAccessKey() string {
	if o == nil || IsNil(o.AccessKey) {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSNSSigV4) GetAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKey) {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *AMReceiverSNSSigV4) HasAccessKey() bool {
	if o != nil && !IsNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *AMReceiverSNSSigV4) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *AMReceiverSNSSigV4) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSNSSigV4) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *AMReceiverSNSSigV4) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *AMReceiverSNSSigV4) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *AMReceiverSNSSigV4) GetRoleArn() string {
	if o == nil || IsNil(o.RoleArn) {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverSNSSigV4) GetRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.RoleArn) {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *AMReceiverSNSSigV4) HasRoleArn() bool {
	if o != nil && !IsNil(o.RoleArn) {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *AMReceiverSNSSigV4) SetRoleArn(v string) {
	o.RoleArn = &v
}

func (o AMReceiverSNSSigV4) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AMReceiverSNSSigV4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.AccessKey) {
		toSerialize["access_key"] = o.AccessKey
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secret_key"] = o.SecretKey
	}
	if !IsNil(o.RoleArn) {
		toSerialize["role_arn"] = o.RoleArn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AMReceiverSNSSigV4) UnmarshalJSON(data []byte) (err error) {
	varAMReceiverSNSSigV4 := _AMReceiverSNSSigV4{}

	err = json.Unmarshal(data, &varAMReceiverSNSSigV4)

	if err != nil {
		return err
	}

	*o = AMReceiverSNSSigV4(varAMReceiverSNSSigV4)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "region")
		delete(additionalProperties, "profile")
		delete(additionalProperties, "access_key")
		delete(additionalProperties, "secret_key")
		delete(additionalProperties, "role_arn")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAMReceiverSNSSigV4 struct {
	value *AMReceiverSNSSigV4
	isSet bool
}

func (v NullableAMReceiverSNSSigV4) Get() *AMReceiverSNSSigV4 {
	return v.value
}

func (v *NullableAMReceiverSNSSigV4) Set(val *AMReceiverSNSSigV4) {
	v.value = val
	v.isSet = true
}

func (v NullableAMReceiverSNSSigV4) IsSet() bool {
	return v.isSet
}

func (v *NullableAMReceiverSNSSigV4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAMReceiverSNSSigV4(val *AMReceiverSNSSigV4) *NullableAMReceiverSNSSigV4 {
	return &NullableAMReceiverSNSSigV4{value: val, isSet: true}
}

func (v NullableAMReceiverSNSSigV4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAMReceiverSNSSigV4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
