/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-055054
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the AMReceiverEmail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AMReceiverEmail{}

// AMReceiverEmail struct for AMReceiverEmail
type AMReceiverEmail struct {
	To                   *string           `json:"to,omitempty"`
	From                 *string           `json:"from,omitempty"`
	Smarthost            *string           `json:"smarthost,omitempty"`
	Hello                *string           `json:"hello,omitempty"`
	Html                 *string           `json:"html,omitempty"`
	Text                 *string           `json:"text,omitempty"`
	Headers              map[string]string `json:"headers,omitempty"`
	SendResolved         *bool             `json:"send_resolved,omitempty"`
	AuthUsername         *string           `json:"auth_username,omitempty"`
	AuthPassword         *string           `json:"auth_password,omitempty"`
	AuthPasswordFile     *string           `json:"auth_password_file,omitempty"`
	AuthSecret           *string           `json:"auth_secret,omitempty"`
	AuthIdentity         *string           `json:"auth_identity,omitempty"`
	RequireTls           *bool             `json:"require_tls,omitempty"`
	TlsConfig            *AlertManagerTls  `json:"tls_config,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AMReceiverEmail AMReceiverEmail

// NewAMReceiverEmail instantiates a new AMReceiverEmail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAMReceiverEmail() *AMReceiverEmail {
	this := AMReceiverEmail{}
	return &this
}

// NewAMReceiverEmailWithDefaults instantiates a new AMReceiverEmail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAMReceiverEmailWithDefaults() *AMReceiverEmail {
	this := AMReceiverEmail{}
	return &this
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *AMReceiverEmail) SetTo(v string) {
	o.To = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *AMReceiverEmail) SetFrom(v string) {
	o.From = &v
}

// GetSmarthost returns the Smarthost field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetSmarthost() string {
	if o == nil || IsNil(o.Smarthost) {
		var ret string
		return ret
	}
	return *o.Smarthost
}

// GetSmarthostOk returns a tuple with the Smarthost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetSmarthostOk() (*string, bool) {
	if o == nil || IsNil(o.Smarthost) {
		return nil, false
	}
	return o.Smarthost, true
}

// HasSmarthost returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasSmarthost() bool {
	if o != nil && !IsNil(o.Smarthost) {
		return true
	}

	return false
}

// SetSmarthost gets a reference to the given string and assigns it to the Smarthost field.
func (o *AMReceiverEmail) SetSmarthost(v string) {
	o.Smarthost = &v
}

// GetHello returns the Hello field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetHello() string {
	if o == nil || IsNil(o.Hello) {
		var ret string
		return ret
	}
	return *o.Hello
}

// GetHelloOk returns a tuple with the Hello field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetHelloOk() (*string, bool) {
	if o == nil || IsNil(o.Hello) {
		return nil, false
	}
	return o.Hello, true
}

// HasHello returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasHello() bool {
	if o != nil && !IsNil(o.Hello) {
		return true
	}

	return false
}

// SetHello gets a reference to the given string and assigns it to the Hello field.
func (o *AMReceiverEmail) SetHello(v string) {
	o.Hello = &v
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetHtml() string {
	if o == nil || IsNil(o.Html) {
		var ret string
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetHtmlOk() (*string, bool) {
	if o == nil || IsNil(o.Html) {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasHtml() bool {
	if o != nil && !IsNil(o.Html) {
		return true
	}

	return false
}

// SetHtml gets a reference to the given string and assigns it to the Html field.
func (o *AMReceiverEmail) SetHtml(v string) {
	o.Html = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *AMReceiverEmail) SetText(v string) {
	o.Text = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetHeaders() map[string]string {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]string
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetHeadersOk() (map[string]string, bool) {
	if o == nil || IsNil(o.Headers) {
		return map[string]string{}, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *AMReceiverEmail) SetHeaders(v map[string]string) {
	o.Headers = v
}

// GetSendResolved returns the SendResolved field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetSendResolved() bool {
	if o == nil || IsNil(o.SendResolved) {
		var ret bool
		return ret
	}
	return *o.SendResolved
}

// GetSendResolvedOk returns a tuple with the SendResolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetSendResolvedOk() (*bool, bool) {
	if o == nil || IsNil(o.SendResolved) {
		return nil, false
	}
	return o.SendResolved, true
}

// HasSendResolved returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasSendResolved() bool {
	if o != nil && !IsNil(o.SendResolved) {
		return true
	}

	return false
}

// SetSendResolved gets a reference to the given bool and assigns it to the SendResolved field.
func (o *AMReceiverEmail) SetSendResolved(v bool) {
	o.SendResolved = &v
}

// GetAuthUsername returns the AuthUsername field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetAuthUsername() string {
	if o == nil || IsNil(o.AuthUsername) {
		var ret string
		return ret
	}
	return *o.AuthUsername
}

// GetAuthUsernameOk returns a tuple with the AuthUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetAuthUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.AuthUsername) {
		return nil, false
	}
	return o.AuthUsername, true
}

// HasAuthUsername returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasAuthUsername() bool {
	if o != nil && !IsNil(o.AuthUsername) {
		return true
	}

	return false
}

// SetAuthUsername gets a reference to the given string and assigns it to the AuthUsername field.
func (o *AMReceiverEmail) SetAuthUsername(v string) {
	o.AuthUsername = &v
}

// GetAuthPassword returns the AuthPassword field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetAuthPassword() string {
	if o == nil || IsNil(o.AuthPassword) {
		var ret string
		return ret
	}
	return *o.AuthPassword
}

// GetAuthPasswordOk returns a tuple with the AuthPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetAuthPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.AuthPassword) {
		return nil, false
	}
	return o.AuthPassword, true
}

// HasAuthPassword returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasAuthPassword() bool {
	if o != nil && !IsNil(o.AuthPassword) {
		return true
	}

	return false
}

// SetAuthPassword gets a reference to the given string and assigns it to the AuthPassword field.
func (o *AMReceiverEmail) SetAuthPassword(v string) {
	o.AuthPassword = &v
}

// GetAuthPasswordFile returns the AuthPasswordFile field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetAuthPasswordFile() string {
	if o == nil || IsNil(o.AuthPasswordFile) {
		var ret string
		return ret
	}
	return *o.AuthPasswordFile
}

// GetAuthPasswordFileOk returns a tuple with the AuthPasswordFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetAuthPasswordFileOk() (*string, bool) {
	if o == nil || IsNil(o.AuthPasswordFile) {
		return nil, false
	}
	return o.AuthPasswordFile, true
}

// HasAuthPasswordFile returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasAuthPasswordFile() bool {
	if o != nil && !IsNil(o.AuthPasswordFile) {
		return true
	}

	return false
}

// SetAuthPasswordFile gets a reference to the given string and assigns it to the AuthPasswordFile field.
func (o *AMReceiverEmail) SetAuthPasswordFile(v string) {
	o.AuthPasswordFile = &v
}

// GetAuthSecret returns the AuthSecret field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetAuthSecret() string {
	if o == nil || IsNil(o.AuthSecret) {
		var ret string
		return ret
	}
	return *o.AuthSecret
}

// GetAuthSecretOk returns a tuple with the AuthSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetAuthSecretOk() (*string, bool) {
	if o == nil || IsNil(o.AuthSecret) {
		return nil, false
	}
	return o.AuthSecret, true
}

// HasAuthSecret returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasAuthSecret() bool {
	if o != nil && !IsNil(o.AuthSecret) {
		return true
	}

	return false
}

// SetAuthSecret gets a reference to the given string and assigns it to the AuthSecret field.
func (o *AMReceiverEmail) SetAuthSecret(v string) {
	o.AuthSecret = &v
}

// GetAuthIdentity returns the AuthIdentity field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetAuthIdentity() string {
	if o == nil || IsNil(o.AuthIdentity) {
		var ret string
		return ret
	}
	return *o.AuthIdentity
}

// GetAuthIdentityOk returns a tuple with the AuthIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetAuthIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.AuthIdentity) {
		return nil, false
	}
	return o.AuthIdentity, true
}

// HasAuthIdentity returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasAuthIdentity() bool {
	if o != nil && !IsNil(o.AuthIdentity) {
		return true
	}

	return false
}

// SetAuthIdentity gets a reference to the given string and assigns it to the AuthIdentity field.
func (o *AMReceiverEmail) SetAuthIdentity(v string) {
	o.AuthIdentity = &v
}

// GetRequireTls returns the RequireTls field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetRequireTls() bool {
	if o == nil || IsNil(o.RequireTls) {
		var ret bool
		return ret
	}
	return *o.RequireTls
}

// GetRequireTlsOk returns a tuple with the RequireTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetRequireTlsOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireTls) {
		return nil, false
	}
	return o.RequireTls, true
}

// HasRequireTls returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasRequireTls() bool {
	if o != nil && !IsNil(o.RequireTls) {
		return true
	}

	return false
}

// SetRequireTls gets a reference to the given bool and assigns it to the RequireTls field.
func (o *AMReceiverEmail) SetRequireTls(v bool) {
	o.RequireTls = &v
}

// GetTlsConfig returns the TlsConfig field value if set, zero value otherwise.
func (o *AMReceiverEmail) GetTlsConfig() AlertManagerTls {
	if o == nil || IsNil(o.TlsConfig) {
		var ret AlertManagerTls
		return ret
	}
	return *o.TlsConfig
}

// GetTlsConfigOk returns a tuple with the TlsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AMReceiverEmail) GetTlsConfigOk() (*AlertManagerTls, bool) {
	if o == nil || IsNil(o.TlsConfig) {
		return nil, false
	}
	return o.TlsConfig, true
}

// HasTlsConfig returns a boolean if a field has been set.
func (o *AMReceiverEmail) HasTlsConfig() bool {
	if o != nil && !IsNil(o.TlsConfig) {
		return true
	}

	return false
}

// SetTlsConfig gets a reference to the given AlertManagerTls and assigns it to the TlsConfig field.
func (o *AMReceiverEmail) SetTlsConfig(v AlertManagerTls) {
	o.TlsConfig = &v
}

func (o AMReceiverEmail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AMReceiverEmail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Smarthost) {
		toSerialize["smarthost"] = o.Smarthost
	}
	if !IsNil(o.Hello) {
		toSerialize["hello"] = o.Hello
	}
	if !IsNil(o.Html) {
		toSerialize["html"] = o.Html
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.SendResolved) {
		toSerialize["send_resolved"] = o.SendResolved
	}
	if !IsNil(o.AuthUsername) {
		toSerialize["auth_username"] = o.AuthUsername
	}
	if !IsNil(o.AuthPassword) {
		toSerialize["auth_password"] = o.AuthPassword
	}
	if !IsNil(o.AuthPasswordFile) {
		toSerialize["auth_password_file"] = o.AuthPasswordFile
	}
	if !IsNil(o.AuthSecret) {
		toSerialize["auth_secret"] = o.AuthSecret
	}
	if !IsNil(o.AuthIdentity) {
		toSerialize["auth_identity"] = o.AuthIdentity
	}
	if !IsNil(o.RequireTls) {
		toSerialize["require_tls"] = o.RequireTls
	}
	if !IsNil(o.TlsConfig) {
		toSerialize["tls_config"] = o.TlsConfig
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AMReceiverEmail) UnmarshalJSON(data []byte) (err error) {
	varAMReceiverEmail := _AMReceiverEmail{}

	err = json.Unmarshal(data, &varAMReceiverEmail)

	if err != nil {
		return err
	}

	*o = AMReceiverEmail(varAMReceiverEmail)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "to")
		delete(additionalProperties, "from")
		delete(additionalProperties, "smarthost")
		delete(additionalProperties, "hello")
		delete(additionalProperties, "html")
		delete(additionalProperties, "text")
		delete(additionalProperties, "headers")
		delete(additionalProperties, "send_resolved")
		delete(additionalProperties, "auth_username")
		delete(additionalProperties, "auth_password")
		delete(additionalProperties, "auth_password_file")
		delete(additionalProperties, "auth_secret")
		delete(additionalProperties, "auth_identity")
		delete(additionalProperties, "require_tls")
		delete(additionalProperties, "tls_config")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAMReceiverEmail struct {
	value *AMReceiverEmail
	isSet bool
}

func (v NullableAMReceiverEmail) Get() *AMReceiverEmail {
	return v.value
}

func (v *NullableAMReceiverEmail) Set(val *AMReceiverEmail) {
	v.value = val
	v.isSet = true
}

func (v NullableAMReceiverEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableAMReceiverEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAMReceiverEmail(val *AMReceiverEmail) *NullableAMReceiverEmail {
	return &NullableAMReceiverEmail{value: val, isSet: true}
}

func (v NullableAMReceiverEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAMReceiverEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
