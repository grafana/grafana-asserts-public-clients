/*
Asserts, Inc

Asserts Public API

API version: 2025.08.11-161538
Contact: support@asserts.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gcom

import (
	"encoding/json"
)

// checks if the ThresholdValueSingleDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThresholdValueSingleDto{}

// ThresholdValueSingleDto struct for ThresholdValueSingleDto
type ThresholdValueSingleDto struct {
	Time                 *int64   `json:"time,omitempty"`
	Value                *float64 `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ThresholdValueSingleDto ThresholdValueSingleDto

// NewThresholdValueSingleDto instantiates a new ThresholdValueSingleDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThresholdValueSingleDto() *ThresholdValueSingleDto {
	this := ThresholdValueSingleDto{}
	return &this
}

// NewThresholdValueSingleDtoWithDefaults instantiates a new ThresholdValueSingleDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThresholdValueSingleDtoWithDefaults() *ThresholdValueSingleDto {
	this := ThresholdValueSingleDto{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ThresholdValueSingleDto) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdValueSingleDto) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ThresholdValueSingleDto) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *ThresholdValueSingleDto) SetTime(v int64) {
	o.Time = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ThresholdValueSingleDto) GetValue() float64 {
	if o == nil || IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdValueSingleDto) GetValueOk() (*float64, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ThresholdValueSingleDto) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *ThresholdValueSingleDto) SetValue(v float64) {
	o.Value = &v
}

func (o ThresholdValueSingleDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThresholdValueSingleDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ThresholdValueSingleDto) UnmarshalJSON(data []byte) (err error) {
	varThresholdValueSingleDto := _ThresholdValueSingleDto{}

	err = json.Unmarshal(data, &varThresholdValueSingleDto)

	if err != nil {
		return err
	}

	*o = ThresholdValueSingleDto(varThresholdValueSingleDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "time")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableThresholdValueSingleDto struct {
	value *ThresholdValueSingleDto
	isSet bool
}

func (v NullableThresholdValueSingleDto) Get() *ThresholdValueSingleDto {
	return v.value
}

func (v *NullableThresholdValueSingleDto) Set(val *ThresholdValueSingleDto) {
	v.value = val
	v.isSet = true
}

func (v NullableThresholdValueSingleDto) IsSet() bool {
	return v.isSet
}

func (v *NullableThresholdValueSingleDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThresholdValueSingleDto(val *ThresholdValueSingleDto) *NullableThresholdValueSingleDto {
	return &NullableThresholdValueSingleDto{value: val, isSet: true}
}

func (v NullableThresholdValueSingleDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThresholdValueSingleDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
