openapi: 3.1.0
info:
  title: "Asserts, Inc"
  description: Asserts Public API
  termsOfService: https://www.asserts.ai/terms-of-service
  contact:
    name: Support
    url: "https://www.grafana.com"
    email: support@asserts.ai
  version: 1.0.0
servers:
  - url: http://localhost:8030/asserts/api-server
    description: Generated server url
tags:
  - name: Alert Configuration
    description: APIs for managing alert configurations
paths:
  /v2/stack:
    put:
      tags:
        - stack-controller
      operationId: putV2Stack
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StackDto"
        required: true
      responses:
        "200":
          description: OK
  /v2/stack/dataset:
    put:
      tags:
        - stack-controller
      operationId: updateDataset
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StackDatasetDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DatasetSanityChecksDto"
  /v2/config/relabel-rules/prologue:
    get:
      tags:
        - mimir-relabel-rules-config-controller
      operationId: getPrologueRelabelRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
    put:
      tags:
        - mimir-relabel-rules-config-controller
      operationId: putMimirPrologueRelabelRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
        - mimir-relabel-rules-config-controller
      operationId: deletePrologueRelabelRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v2/config/relabel-rules/epilogue:
    get:
      tags:
        - mimir-relabel-rules-config-controller
      operationId: getEpilogueRelabelRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
    put:
      tags:
        - mimir-relabel-rules-config-controller
      operationId: putMimirEpilogueRelabelRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
        - mimir-relabel-rules-config-controller
      operationId: deleteEpilogueRelabelRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/stack:
    get:
      tags:
        - stack-controller
      operationId: getStackDetail
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackDetailDto"
    put:
      tags:
        - stack-controller
      operationId: updateStack
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StackDto"
        required: true
      responses:
        "200":
          description: OK
    post:
      tags:
        - stack-controller
      operationId: createStack
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StackDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/search/definition/{id}:
    get:
      tags:
        - search-definition-controller
      operationId: getSearchDefinition
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchDefinitionDto"
    put:
      tags:
        - search-definition-controller
      operationId: updateSearchDefinition
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDefinitionDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchDefinitionDto"
    delete:
      tags:
        - search-definition-controller
      operationId: deleteSearchDefinition
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/prom-rules:
    get:
      tags:
        - prom-rules-config-controller
      operationId: listPromRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleNamesDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/RuleNamesDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/RuleNamesDto"
    put:
      tags:
        - prom-rules-config-controller
      operationId: putPromRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusRulesDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/PrometheusRulesDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/PrometheusRulesDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/model-rules:
    get:
      tags:
        - custom-model-rules-controller
      operationId: listModelRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelRuleNamesDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ModelRuleNamesDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ModelRuleNamesDto"
    put:
      tags:
        - custom-model-rules-controller
      operationId: putModelRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelRulesDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/ModelRulesDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/ModelRulesDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/model-rules/{name}:
    get:
      tags:
        - custom-model-rules-controller
      operationId: getModelRules
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelRulesDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ModelRulesDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ModelRulesDto"
    put:
      tags:
        - custom-model-rules-controller
      operationId: putModelRules_1
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelRulesDto"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
        - custom-model-rules-controller
      operationId: deleteModelRules
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/model-mapping/{name}:
    get:
      tags:
        - model-mapping-controller
      operationId: get
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelMappingDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ModelMappingDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ModelMappingDto"
    put:
      tags:
        - model-mapping-controller
      operationId: put
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            pattern: "([a-zA-Z_0-9]|-)+"
        - name: tagging
          in: query
          required: false
          schema:
            type: boolean
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelMappingDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/ModelMappingDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/ModelMappingDto"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
        - model-mapping-controller
      operationId: delete
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v2/stack/enable:
    post:
      tags:
        - stack-controller
      operationId: enableV2Stack
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetsSanityChecksDto"
  /v2/stack/datasets/auto-setup:
    post:
      tags:
        - stack-controller
      operationId: detectAndAutoConfigureDatasets
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum:
                    - kubernetes
                    - prometheus
                    - otel
                    - aws
                    - custom
                uniqueItems: true
  /v2/latency-thresholds:
    post:
      tags:
        - latency-threshold-controller
      operationId: getLatencyThresholds
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/EntityKeyDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LatencyThresholdsDto"
  /v1/validate/prometheus-query:
    post:
      tags:
        - prom-ql-validation-controller
      operationId: validatePromQL
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /v1/stack/status/{status}:
    post:
      tags:
        - stack-controller
      operationId: updateStatus
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackStatusDto"
  /v1/stack/enable:
    get:
      tags:
        - stack-controller
      operationId: getStackEnable
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackEnableDto"
    post:
      tags:
        - stack-controller
      operationId: enableStack
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StackEnableDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackStatusDto"
  /v1/stack/disable:
    post:
      tags:
        - stack-controller
      operationId: disableStack
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/stack-info:
    get:
      tags:
        - stack-info-controller
      operationId: getStackInfos
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackInfosDto"
      deprecated: true
    post:
      tags:
        - stack-info-controller
      operationId: upsertStackInfo
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StackInfoDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackInfoDto"
      deprecated: true
  /v1/stack-info/{id}/enable:
    post:
      tags:
        - stack-info-controller
      operationId: enableStackInfo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
      deprecated: true
  /v1/stack-info/{id}/disable:
    post:
      tags:
        - stack-info-controller
      operationId: disableStackInfo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
      deprecated: true
  /v1/slo:
    post:
      tags:
        - service-level-controller
      operationId: getSlos
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SloListRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SloListDto"
  /v1/slo/top:
    post:
      tags:
        - service-level-controller
      operationId: getTopSloTargets
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SloListRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SloListDto"
  /v1/slo/incidents:
    post:
      tags:
        - incident-controller
      operationId: getSloIncidents
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SloIncidentRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SloIncidentListDto"
  /v1/slo/chart:
    post:
      tags:
        - service-level-controller
      operationId: getSloChart
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SloChartRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SloChartResponseDto"
  /v1/search:
    post:
      tags:
        - search-controller
      operationId: search
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponseDto"
  /v1/search/definition:
    get:
      tags:
        - search-definition-controller
      operationId: searchDefinitions
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: onlyCustomSearch
          in: query
          required: false
          schema:
            type: boolean
            default: false
        - name: max
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchDefinitionResponseDto"
    post:
      tags:
        - search-definition-controller
      operationId: createSearchDefinition
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDefinitionDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchDefinitionDto"
  /v1/search/assertions:
    post:
      tags:
        - entity-assertions-controller
      operationId: searchAssertions
      parameters:
        - name: withFilters
          in: query
          required: false
          schema:
            type: boolean
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssertionSearchRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /v1/search/assertions/summary:
    post:
      tags:
        - entity-assertions-controller
      operationId: searchAssertionsSummary
      parameters:
        - name: withRCA
          in: query
          required: false
          schema:
            type: boolean
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssertionSearchRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAssertionSummariesDto"
  /v1/search/assertions/llm-summary:
    post:
      tags:
        - llm-rca-controller
      operationId: getLlmRcaSummary
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LlmRcaSummarySearchReqDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LlmRcaSummariesDto"
  /v1/patterns/search:
    post:
      tags:
        - rca-pattern-controller
      operationId: search_1
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RcaPatternSearchRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RcaPatternSearchResponseDto"
  /v1/patterns/list:
    post:
      tags:
        - rca-pattern-controller
      operationId: list
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RcaPatternListRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /v1/monitoring-status/for-entities:
    post:
      tags:
        - monitoring-status-controller
      operationId: getEntityMonitoringStatus
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MonitoringStatusRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MonitoringStatusResponseDto"
  /v1/logging/external:
    post:
      tags:
        - external-logging-controller
      operationId: buildExternalLoggingUrl
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExternalLoggingRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalLoggingResponseDto"
  /v1/latency-thresholds:
    post:
      tags:
        - latency-threshold-controller
      operationId: getLatencyThresholds_1
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityKeyDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LatencyThresholdDto"
  /v1/kpi/summary/for-entities/{kpi_name}:
    post:
      tags:
        - entity-kpi-controller
      operationId: getKpiSummary
      parameters:
        - name: kpi_name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KpiSummaryRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/GraphEntityKpiValue"
  /v1/integration/trace:
    post:
      tags:
        - trace-controller
      operationId: buildTraceUrl
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceIntegrationRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceIntegrationResponseDto"
  /v1/incidents:
    post:
      tags:
        - incident-controller
      operationId: getIncidents
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncidentRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentGroupListDto"
  /v1/incidents/top:
    post:
      tags:
        - incident-controller
      operationId: getTopIncidents
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncidentRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentSummaryListDto"
  /v1/entity_type/count:
    post:
      tags:
        - entity-type-controller
      operationId: getCountByEntityType
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityCountRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int64
  /v1/entity_scope:
    get:
      tags:
        - entity-scope-controller
      operationId: getAllEntityScopes
      parameters:
        - name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityScopesResponseDto"
    post:
      tags:
        - entity-scope-controller
      operationId: getEntityScopes
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityScopesRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityScopesResponseDto"
  /v1/customer/metric:
    get:
      tags:
        - customer-metric-controller
      operationId: getAllMetrics
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerMetricResponseDto"
    post:
      tags:
        - customer-metric-controller
      operationId: getAllMetrics_1
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerMetricRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerMetricResponseDto"
  /v1/config/trace:
    get:
      tags:
        - trace-config-controller
      operationId: getTenantTraceEnvConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceEnvConfigResponseDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/TraceEnvConfigResponseDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/TraceEnvConfigResponseDto"
    post:
      tags:
        - trace-config-controller
      operationId: upsertTraceEnvConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceEnvConfigDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/TraceEnvConfigDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/TraceEnvConfigDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/threshold-rules:
    get:
      tags:
        - threshold-rules-config-controller
      operationId: getCustomThresholdRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrometheusRulesDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/PrometheusRulesDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/PrometheusRulesDto"
    post:
      tags:
        - threshold-rules-config-controller
      operationId: updateCustomThresholdRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusRulesDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/PrometheusRulesDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/PrometheusRulesDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/threshold-rule:
    post:
      tags:
        - threshold-rules-config-controller
      operationId: updateCustomThresholdRule
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusRuleDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/threshold-rule/delete:
    post:
      tags:
        - threshold-rules-config-controller
      operationId: deleteCustomThresholdRule
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusRuleDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/slo:
    get:
      tags:
        - slo-config-controller
      operationId: getSloConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SloConfigResponseDto"
            application/x-yml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SloConfigResponseDto"
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SloConfigResponseDto"
    post:
      tags:
        - slo-config-controller
      operationId: postSloConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SloConfigRequestDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/SloConfigRequestDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/SloConfigRequestDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/slo-validate:
    post:
      tags:
        - slo-config-controller
      operationId: validate
      parameters:
        - name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SloConfigRequestDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/SloConfigRequestDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/SloConfigRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
  /v1/config/slo-generate-rules:
    post:
      tags:
        - slo-config-controller
      operationId: regenerateSloRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/prom-rules/{name}:
    get:
      tags:
        - prom-rules-config-controller
      operationId: getPromRules
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrometheusRulesDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/PrometheusRulesDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/PrometheusRulesDto"
    post:
      tags:
        - prom-rules-config-controller
      operationId: updateRule
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusRuleDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/PrometheusRuleDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/PrometheusRuleDto"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
        - prom-rules-config-controller
      operationId: deletePromRules
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/prom-rules/{name}/delete:
    post:
      tags:
        - prom-rules-config-controller
      operationId: deleteRule
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusRuleDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/PrometheusRuleDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/PrometheusRuleDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/prom-rules/generate:
    post:
      tags:
        - recording-rule-controller
      operationId: generateRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/x-yml:
            schema:
              $ref: "#/components/schemas/RuleGenerationRequestDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/RuleGenerationRequestDto"
          application/json:
            schema:
              $ref: "#/components/schemas/RuleGenerationRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/RuleGenerationResponseDto"
  /v1/config/prom-rules-validate:
    post:
      tags:
        - prom-rules-config-controller
      operationId: submitValidation
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusRulesDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/PrometheusRulesDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/PrometheusRulesDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
  /v1/config/prom-rules-enable/{name}:
    post:
      tags:
        - prom-rules-config-controller
      operationId: enableRule
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/prom-rules-disable/{name}:
    post:
      tags:
        - prom-rules-config-controller
      operationId: disableRule
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/otel-collector:
    get:
      tags:
        - otel-config-controller
      operationId: getOtelCollectorConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OtelCollectorConfigDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/OtelCollectorConfigDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/OtelCollectorConfigDto"
    post:
      tags:
        - otel-config-controller
      operationId: updateOtelCollectorConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OtelCollectorConfigDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/OtelCollectorConfigDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/OtelCollectorConfigDto"
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
        - otel-config-controller
      operationId: deleteOtelCollectorConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/import:
    post:
      tags:
        - config-export-import-controller
      operationId: importConfigurations
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/x-yml:
            schema:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  type: string
          application/x-yaml:
            schema:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConfigImportResultDto"
  /v1/config/environment:
    get:
      tags:
        - log-config-controller
      operationId: getTenantEnvConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantEnvConfigResponseDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/TenantEnvConfigResponseDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/TenantEnvConfigResponseDto"
    post:
      tags:
        - log-config-controller
      operationId: upsertEnvironmentConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnvironmentDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/EnvironmentDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/EnvironmentDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/display/kpi:
    get:
      tags:
        - kpi-display-config-controller
      operationId: getKpiViewConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KpiDisplayConfigDto"
    post:
      tags:
        - kpi-display-config-controller
      operationId: putKpiViewConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KpiDisplayConfigDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/display/graph:
    get:
      tags:
        - graph-display-config-controller
      operationId: getGraphDisplayConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GraphDisplayConfigDto"
    post:
      tags:
        - graph-display-config-controller
      operationId: putGraphDisplayConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GraphDisplayConfigDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/disabled-alerts:
    get:
      tags:
        - disabled-alert-config-controller
      operationId: getAllDisabledAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledAlertConfigsDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/DisabledAlertConfigsDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/DisabledAlertConfigsDto"
    post:
      tags:
        - disabled-alert-config-controller
      operationId: putDisabledAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisabledAlertConfigsDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/DisabledAlertConfigsDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/DisabledAlertConfigsDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/disabled-alert:
    post:
      tags:
        - disabled-alert-config-controller
      operationId: putDisabledAlertConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisabledAlertConfigDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/DisabledAlertConfigDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/DisabledAlertConfigDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/dashboard/{entity_type}:
    get:
      tags:
        - custom-dash-config-controller
      operationId: getCustomDashConfig
      parameters:
        - name: entity_type
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomDashConfigsDto"
    post:
      tags:
        - custom-dash-config-controller
      operationId: updateCustomDashConfig
      parameters:
        - name: entity_type
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomDashConfigDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/dashboard/delete/{entity_type}:
    post:
      tags:
        - custom-dash-config-controller
      operationId: deleteCustomDashConfig
      parameters:
        - name: entity_type
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomDashConfigDto"
        required: true
      responses:
        "200":
          description: OK
  /v1/config/alerts:
    get:
      tags:
        - Alert Configuration
      summary: Get all alert configurations
      description: Retrieves a list of all alert configurations for the tenant.
      operationId: getAllAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: Successfully retrieved alert configurations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertConfigsDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
    post:
      tags:
        - Alert Configuration
      summary: Create or update multiple alert configurations
      description: Creates or updates a batch of alert configurations.
      operationId: putAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertConfigsDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/AlertConfigsDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/AlertConfigsDto"
        required: true
      responses:
        "200":
          description: Alert configurations saved successfully
        "400":
          description: Invalid alert configuration file provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
  /v1/config/alertmanager:
    get:
      tags:
        - alert-manager-config-controller
      operationId: getAlertManagerConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertManagerConfig"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/AlertManagerConfig"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/AlertManagerConfig"
    post:
      tags:
        - alert-manager-config-controller
      operationId: updateAlertManagerConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertManagerConfig"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/AlertManagerConfig"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/AlertManagerConfig"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertManagerConfig"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/AlertManagerConfig"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/AlertManagerConfig"
    delete:
      tags:
        - alert-manager-config-controller
      operationId: deleteAlertManagerConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/alert:
    post:
      tags:
        - Alert Configuration
      summary: Create or update a single alert configuration
      description: Creates a new alert configuration or updates an existing one based on the provided data.
      operationId: putAlertConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertConfigDto"
          application/x-yml:
            schema:
              $ref: "#/components/schemas/AlertConfigDto"
          application/x-yaml:
            schema:
              $ref: "#/components/schemas/AlertConfigDto"
        required: true
      responses:
        "200":
          description: Alert configuration saved successfully
        "400":
          description: Invalid alert configuration provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
  /v1/assertions:
    post:
      tags:
        - entity-assertions-controller
      operationId: getAssertions
      parameters:
        - name: withFilters
          in: query
          required: false
          schema:
            type: boolean
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssertionsRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /v1/assertions/summary:
    post:
      tags:
        - entity-assertions-controller
      operationId: getAssertionsSummary
      parameters:
        - name: withRCA
          in: query
          required: false
          schema:
            type: boolean
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssertionsRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAssertionSummariesDto"
  /v1/assertions/search:
    post:
      tags:
        - assertion-search-controller
      operationId: search_2
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssertionSearchRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityKeyDto"
  /v1/assertions/llm-summary:
    post:
      tags:
        - llm-rca-controller
      operationId: getLlmRcaSummary_1
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LlmRcaSummaryReqDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LlmRcaSummariesDto"
  /v1/assertions/graph:
    post:
      tags:
        - entity-assertions-controller
      operationId: getEntityAssertionsGraph
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssertionsRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAssertionsGraphDto"
  /v1/assertions/entity-metric:
    post:
      tags:
        - entity-assertions-controller
      operationId: entityAssertionsDetails
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityAssertionMetricRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAssertionDetailsDto"
  /v1/assertion_scores:
    post:
      tags:
        - assertion-score-controller
      operationId: getAssertionScores
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssertionScoreRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssertionScoresDto"
  /v1/assertion_scores/top_entities:
    post:
      tags:
        - assertion-score-controller
      operationId: getTopNAssertingEntities
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssertionScoreRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityKeyDto"
  /v1/assertion_scores/search:
    post:
      tags:
        - assertion-score-controller
      operationId: getAssertionScoresFromSearch
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssertionSearchRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssertionScoresDto"
  /v1/assertion/{name}/info:
    get:
      tags:
        - assertion-info-controller
      operationId: getAssertionInfo
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssertionInfoDto"
      deprecated: true
    post:
      tags:
        - assertion-info-controller
      operationId: getAssertionInfo_1
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssertionInfoRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssertionInfoDto"
  /v1/assertion/affected-entity-names:
    post:
      tags:
        - entity-assertions-controller
      operationId: getAssertionEntityNames
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityAssertionMetricRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AffectedEntityNamesDto"
  /v1/assertion/affected-entities:
    post:
      tags:
        - entity-assertions-controller
      operationId: getAssertionAffectedEntities
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityAssertionMetricRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AffectedEntityDetailsDto"
  /v5/prometheus/rules:
    get:
      tags:
        - rules-controller
      operationId: getAllRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllRulesDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/AllRulesDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/AllRulesDto"
  /v2/stack/datasets:
    get:
      tags:
        - stack-controller
      operationId: getDatasets
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetsDto"
  /v2/stack/dataset/{dataset}:
    get:
      tags:
        - stack-controller
      operationId: fetchDataset
      parameters:
        - name: dataset
          in: path
          required: true
          schema:
            type: string
            enum:
              - kubernetes
              - prometheus
              - otel
              - aws
              - custom
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackDatasetDto"
  /v2/stack/dataset/{dataset}/vendors:
    get:
      tags:
        - stack-controller
      operationId: getDatasetVendors
      parameters:
        - name: dataset
          in: path
          required: true
          schema:
            type: string
            enum:
              - kubernetes
              - prometheus
              - otel
              - aws
              - custom
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetVendorsDto"
  /v2/stack/dataset/{dataset}/sanity:
    get:
      tags:
        - stack-controller
      operationId: runDatasetSanityChecks
      parameters:
        - name: dataset
          in: path
          required: true
          schema:
            type: string
            enum:
              - kubernetes
              - prometheus
              - otel
              - aws
              - custom
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetSanityChecksDto"
  /v2/config/relabel-rules/generated:
    get:
      tags:
        - mimir-relabel-rules-config-controller
      operationId: getGeneratedRelabelRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/MimirRelabelRuleGroupDto"
  /v1/version/ui:
    get:
      tags:
        - version-controller
      operationId: jarvisVersion
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionDto"
      deprecated: true
  /v1/vendor-names:
    get:
      tags:
        - prom-rules-config-controller
      operationId: getVendorNames
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VendorNamesDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/VendorNamesDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/VendorNamesDto"
  /v1/stack/vendor-integration:
    get:
      tags:
        - stack-controller
      operationId: discoverVendorsForCurrentTenant
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VendorIntegrationsDto"
  /v1/stack/update-bucket:
    get:
      tags:
        - stack-controller
      operationId: getStackUpdateBucket
      parameters:
        - name: timestamp
          in: query
          required: false
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackUpdateBucketDto"
  /v1/stack/status:
    get:
      tags:
        - stack-controller
      operationId: getStatus
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackStatusDto"
  /v1/stack/sanity:
    get:
      tags:
        - stack-controller
      operationId: runMetricSanityChecks
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricSanityCheckDto"
  /v1/stack-info/{id}:
    get:
      tags:
        - stack-info-controller
      operationId: getStackInfo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackInfoDto"
      deprecated: true
    delete:
      tags:
        - stack-info-controller
      operationId: deleteStackInfo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
      deprecated: true
  /v1/search/autocomplete/{index}:
    get:
      tags:
        - auto-complete-controller
      operationId: autoComplete
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: fuzzy
          in: query
          required: false
          schema:
            type: boolean
        - name: max
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutoCompleteResponseDto"
  /v1/prometheus/alertmanager:
    get:
      tags:
        - alert-manager-versioned-config-controller
      operationId: getVersionAlertManagerConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionedAlertManagerPayload"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/VersionedAlertManagerPayload"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/VersionedAlertManagerPayload"
  /v1/kpi/list:
    get:
      tags:
        - entity-kpi-controller
      operationId: getKpisByEntityType
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/KpiListDto"
  /v1/entity_type:
    get:
      tags:
        - entity-type-controller
      operationId: getAll
      parameters:
        - name: instant
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityTypesDto"
  /v1/entity_type/{type}:
    get:
      tags:
        - entity-type-controller
      operationId: getEntityType
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityTypeDto"
  /v1/entity:
    get:
      tags:
        - entity-controller
      operationId: lookupEntityFromAlertLabels
      parameters:
        - name: env
          in: query
          required: false
          schema:
            type: string
        - name: site
          in: query
          required: false
          schema:
            type: string
        - name: namespace
          in: query
          required: false
          schema:
            type: string
        - name: requestParams
          in: query
          required: true
          schema:
            type: object
            additionalProperties:
              type: string
        - name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GraphEntity"
  /v1/entity/info:
    get:
      tags:
        - entity-controller
      operationId: getEntity
      parameters:
        - name: entity_type
          in: query
          required: true
          schema:
            type: string
        - name: entity_name
          in: query
          required: true
          schema:
            type: string
        - name: env
          in: query
          required: false
          schema:
            type: string
        - name: site
          in: query
          required: false
          schema:
            type: string
        - name: namespace
          in: query
          required: false
          schema:
            type: string
        - name: start
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GraphEntity"
  /v1/customer/metric/hosted:
    get:
      tags:
        - customer-metric-controller
      operationId: getRuleMetrics
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricSetsDto"
  /v1/customer/metric/client:
    get:
      tags:
        - customer-metric-controller
      operationId: getClientMetrics
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricSetsDto"
  /v1/config/types:
    get:
      tags:
        - config-export-import-controller
      operationId: getSupportedConfigTypes
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                uniqueItems: true
  /v1/config/threshold-rules/resource:
    get:
      tags:
        - threshold-rules-config-controller
      operationId: getResourceThresholdRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThresholdRulesDto"
  /v1/config/threshold-rules/request:
    get:
      tags:
        - threshold-rules-config-controller
      operationId: getRequestThresholdRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThresholdRulesDto"
  /v1/config/slo/{name}:
    get:
      tags:
        - slo-config-controller
      operationId: getSloConfig
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SloConfigResponseDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/SloConfigResponseDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/SloConfigResponseDto"
    delete:
      tags:
        - slo-config-controller
      operationId: deleteSloConfig
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/prom-rules-validate/{id}:
    get:
      tags:
        - prom-rules-config-controller
      operationId: getValidation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
    delete:
      tags:
        - prom-rules-config-controller
      operationId: abortValidation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ConfigValidationResponseDto"
  /v1/config/prom-rules-disable:
    get:
      tags:
        - prom-rules-config-controller
      operationId: getDisabledRules
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledRulesDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/DisabledRulesDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/DisabledRulesDto"
  /v1/config/failure-rules:
    get:
      tags:
        - Alert Configuration
      summary: Get Prometheus failure rule groups
      description: Retrieves Prometheus rule groups related to failures. Can be filtered for custom or all rules.
      operationId: getFailureRuleGroups
      parameters:
        - name: customFailureRules
          in: query
          description: Set to true to fetch only custom failure rules
          required: false
          schema:
            type: boolean
        - name: allFailureRuleGroups
          in: query
          description: Set to true to fetch all failure rule groups (custom and default)
          required: false
          schema:
            type: boolean
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: Successfully retrieved rule groups
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrometheusRuleGroupDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
  /v1/config/export:
    get:
      tags:
        - config-export-import-controller
      operationId: exportConfigurations
      parameters:
        - name: config_type
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/x-yml:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties: {}
  /v1/config/disabled-alerts/resource:
    get:
      tags:
        - disabled-alert-config-controller
      operationId: getDisabledResourceAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledAlertConfigsDto"
  /v1/config/disabled-alerts/request:
    get:
      tags:
        - disabled-alert-config-controller
      operationId: getDisabledRequestAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledAlertConfigsDto"
  /v1/config/disabled-alerts/health:
    get:
      tags:
        - disabled-alert-config-controller
      operationId: getDisabledHealthAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledAlertConfigsDto"
  /v1/config/datasource/prometheus:
    get:
      tags:
        - data-sources-config-controller
      operationId: getPromDatasourceDetail
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSourcePromDto"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/DataSourcePromDto"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/DataSourcePromDto"
  /v1/config/dashboard:
    get:
      tags:
        - custom-dash-config-controller
      operationId: getAllCustomDashConfig
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomKpiDashConfigDto"
  /v1/config/alerts/slo:
    get:
      tags:
        - Alert Configuration
      summary: Get SLO-based alert configurations
      description: Retrieves alert configurations related to Service Level Objectives.
      operationId: getSloAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: Successfully retrieved SLO alert configurations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertConfigsDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
  /v1/config/alerts/resource:
    get:
      tags:
        - Alert Configuration
      summary: Get resource-based alert configurations
      description: Retrieves alert configurations specifically for resources.
      operationId: getResourceAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: Successfully retrieved resource alert configurations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertConfigsDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
  /v1/config/alerts/request:
    get:
      tags:
        - Alert Configuration
      summary: Get request-based alert configurations
      description: Retrieves alert configurations specifically for requests.
      operationId: getRequestAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: Successfully retrieved request alert configurations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertConfigsDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
  /v1/config/alerts/health:
    get:
      tags:
        - Alert Configuration
      summary: Get health-based alert configurations
      description: Retrieves alert configurations related to system health.
      operationId: getHealthAlertConfigs
      parameters:
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: Successfully retrieved health alert configurations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertConfigsDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
  /v1/assertion/alert-affected-entity:
    get:
      tags:
        - alert-entity-controller
      operationId: getAffectedEntity
      parameters:
        - name: alertLabels
          in: query
          required: true
          schema:
            type: object
            additionalProperties:
              type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GraphEntity"
  /v1/config/trace/{name}:
    delete:
      tags:
        - trace-config-controller
      operationId: deleteTraceConfig
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/environment/{name}:
    delete:
      tags:
        - log-config-controller
      operationId: deleteConfig
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/display/graph/entity_type/{name}:
    delete:
      tags:
        - graph-display-config-controller
      operationId: deleteGraphEntityDisplayConfig
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/display/graph/edge_type/{name}:
    delete:
      tags:
        - graph-display-config-controller
      operationId: deleteGraphEdgeDisplayConfig
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/disabled-alert/{name}:
    delete:
      tags:
        - disabled-alert-config-controller
      operationId: deleteDisabledAlertConfig
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: OK
  /v1/config/alert/{name}:
    delete:
      tags:
        - Alert Configuration
      summary: Delete an alert configuration by name
      description: Deletes a specific alert configuration identified by its name.
      operationId: deleteAlertConfig
      parameters:
        - name: name
          in: path
          description: The name of the alert configuration to delete
          required: true
          schema:
            type: string
        - in: header
          $ref: "#/components/parameters/TenantId"
      responses:
        "200":
          description: Alert configuration deleted successfully
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
            application/x-yaml:
              schema:
                $ref: "#/components/schemas/ApiErrorException"
components:
  schemas:
    StackDto:
      type: object
      properties:
        gcomToken:
          type: string
        mimirToken:
          type: string
        assertionDetectorToken:
          type: string
    StackDatasetDto:
      type: object
      properties:
        datasetType:
          type: string
          enum:
            - kubernetes
            - prometheus
            - otel
            - aws
            - custom
        disabledVendors:
          type: array
          items:
            type: string
          uniqueItems: true
        filterGroups:
          type: array
          items:
            $ref: "#/components/schemas/StackFilterGroupDto"
      required:
        - datasetType
    StackFilterDto:
      type: object
      properties:
        name:
          type: string
        operator:
          type: string
        values:
          type: array
          items:
            type: string
    StackFilterGroupDto:
      type: object
      properties:
        envLabel:
          type: string
        envName:
          type: string
        siteLabel:
          type: string
        filters:
          type: array
          items:
            $ref: "#/components/schemas/StackFilterDto"
        envLabelValues:
          type: array
          items:
            type: string
        siteLabelValues:
          type: array
          items:
            type: string
    DatasetSanityCheckResultDto:
      type: object
      properties:
        checkName:
          type: string
        stepResults:
          type: array
          items:
            $ref: "#/components/schemas/DatasetSanityCheckStepResultDto"
    DatasetSanityCheckStepResultDto:
      type: object
      properties:
        name:
          type: string
        troubleshoot:
          type: string
        blockers:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
    DatasetSanityChecksDto:
      type: object
      properties:
        stepResults:
          type: array
          items:
            $ref: "#/components/schemas/DatasetSanityCheckResultDto"
    MimirRelabelRuleDto:
      type: object
      properties:
        selector:
          type: string
        replacement:
          type: string
        drop:
          type: boolean
        join_labels:
          type: array
          items:
            type: string
        join_separator:
          type: string
        ranked_choice:
          type: array
          items:
            type: string
        transform_label:
          type: string
        transform_operation:
          type: string
        transform_arg:
          type: string
        target_label:
          type: string
    MimirRelabelRuleGroupDto:
      type: object
      properties:
        name:
          type: string
        order:
          type: integer
          format: int32
        selector:
          type: string
        rules:
          type: array
          items:
            $ref: "#/components/schemas/MimirRelabelRuleDto"
    EntityMatcherDto:
      type: object
      properties:
        entityType:
          type: string
          minLength: 1
        propertyMatchers:
          type: array
          items:
            $ref: "#/components/schemas/PropertyMatcherDto"
        connectToEntityTypes:
          type: array
          items:
            type: string
          uniqueItems: true
        havingAssertion:
          type: boolean
      required:
        - entityType
    PropertyMatcherDto:
      type: object
      properties:
        name:
          type: string
        value: {}
        op:
          type: string
        uom:
          type: string
          enum:
            - MB
            - GB
            - '%'
      required:
        - name
        - op
    SearchDefinitionBindingDto:
      type: object
      properties:
        query:
          type: string
        type:
          type: string
        subType:
          type: string
    SearchDefinitionDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        indexed:
          type: boolean
        describedQuery:
          type: string
        description:
          type: string
        rawQuery:
          type: string
        bindings:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/SearchDefinitionBindingDto"
        typeDetails:
          $ref: "#/components/schemas/SearchDefinitionTypeDetailsDto"
        filterCriteria:
          type: array
          items:
            $ref: "#/components/schemas/EntityMatcherDto"
    SearchDefinitionTypeDetailsDto:
      type: object
      properties:
        type:
          type: string
    PrometheusRuleDto:
      type: object
      properties:
        active:
          type: boolean
        record:
          type: string
        alert:
          type: string
        expr:
          type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        labels:
          type: object
          additionalProperties:
            type: string
        disableInGroups:
          type: array
          items:
            type: string
        for:
          type: string
    PrometheusRuleGroupDto:
      type: object
      properties:
        name:
          type: string
        interval:
          type: string
        rules:
          type: array
          items:
            $ref: "#/components/schemas/PrometheusRuleDto"
    PrometheusRulesDto:
      type: object
      properties:
        active:
          type: boolean
        name:
          type: string
        groups:
          type: array
          items:
            $ref: "#/components/schemas/PrometheusRuleGroupDto"
    DefinedByDto:
      type: object
      discriminator:
        propertyName: source
      properties:
        staticProperties:
          type: object
          additionalProperties: {}
        source:
          type: string
      required:
        - source
    DefinedByMetricsDto:
      allOf:
        - $ref: "#/components/schemas/DefinedByDto"
        - type: object
          properties:
            pattern:
              type: string
            startEntityMatchers:
              type: object
              additionalProperties:
                type: string
            endEntityMatchers:
              type: object
              additionalProperties:
                type: string
    DefinedByPropertyMatchDto:
      allOf:
        - $ref: "#/components/schemas/DefinedByDto"
        - type: object
          properties:
            startEntityProperties:
              type: array
              items:
                type: string
            endEntityProperties:
              type: array
              items:
                type: string
    EntityRuleDto:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        scope:
          type: object
          additionalProperties:
            type: string
        lookup:
          type: object
          additionalProperties:
            type: string
        definedBy:
          type: array
          items:
            $ref: "#/components/schemas/PropertyRuleDto"
        enrichedBy:
          type: array
          items:
            $ref: "#/components/schemas/PropertyRuleDto"
        disabled:
          type: boolean
    ModelRulesDto:
      type: object
      properties:
        name:
          type: string
        entities:
          type: array
          items:
            $ref: "#/components/schemas/EntityRuleDto"
        relations:
          type: array
          items:
            $ref: "#/components/schemas/RelationRuleDto"
    PropertyRuleDto:
      type: object
      properties:
        query:
          type: string
        labelValues:
          type: object
          additionalProperties:
            type: string
        literals:
          type: object
          additionalProperties:
            type: string
        metricValue:
          type: string
        disabled:
          type: boolean
    RelationRuleDto:
      type: object
      properties:
        type:
          type: string
        startEntityType:
          type: string
        endEntityType:
          type: string
        definedBy:
          oneOf:
            - $ref: "#/components/schemas/DefinedByMetricsDto"
            - $ref: "#/components/schemas/DefinedByPropertyMatchDto"
    ModelMappingDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: "#/components/schemas/ModelMappingEntityDto"
          minItems: 1
      required:
        - entities
    ModelMappingEntityDto:
      type: object
      properties:
        id:
          type: string
        entityType:
          type: string
          minLength: 1
          pattern: Service|DataSource|Topic
        signals:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/ModelMappingHistogramDto"
              - $ref: "#/components/schemas/ModelMappingLatencyAverageDto"
              - $ref: "#/components/schemas/ModelMappingLatencyQuantileDto"
              - $ref: "#/components/schemas/ModelMappingRequestErrorDto"
              - $ref: "#/components/schemas/ModelMappingRequestRateDto"
          minItems: 1
      required:
        - entityType
        - signals
    ModelMappingHistogramDto:
      allOf:
        - $ref: "#/components/schemas/ModelMappingSignalDto"
        - type: object
          properties:
            metricName:
              type: string
              minLength: 1
            metricUnit:
              type: string
              pattern: ((milli|micro|)seconds)|((m|μ|)s)
            quantiles:
              type: array
              items:
                type: number
                format: double
            errors:
              type: array
              items:
                $ref: "#/components/schemas/ModelMappingRequestErrorConditionDto"
      required:
        - entityNameLabel
        - metricName
        - metricSource
        - requestType
    ModelMappingLatencyAverageDto:
      allOf:
        - $ref: "#/components/schemas/ModelMappingSignalDto"
        - type: object
          properties:
            latencyAverageType:
              type: string
              minLength: 1
              pattern: counter|gauge
            sumMetricName:
              type: string
            sumMetricUnit:
              type: string
              pattern: ((milli|micro|)seconds)|((m|μ|)s)
            countMetricName:
              type: string
            gaugeMetricName:
              type: string
            gaugeMetricUnit:
              type: string
              pattern: ((milli|micro|)seconds)|((m|μ|)s)
      required:
        - entityNameLabel
        - latencyAverageType
        - metricSource
        - requestType
    ModelMappingLatencyQuantileDto:
      allOf:
        - $ref: "#/components/schemas/ModelMappingSignalDto"
        - type: object
          properties:
            histogramMetricName:
              type: string
              minLength: 1
            histogramMetricUnit:
              type: string
              minLength: 1
              pattern: ((milli|micro|)seconds)|((m|μ|)s)
            quantiles:
              type: array
              items:
                type: number
                format: double
              minItems: 1
      required:
        - entityNameLabel
        - histogramMetricName
        - histogramMetricUnit
        - metricSource
        - quantiles
        - requestType
    ModelMappingRequestErrorConditionDto:
      type: object
      properties:
        errorType:
          type: string
          minLength: 1
        label:
          type: string
        comparator:
          type: string
          pattern: =|!=|=~|!~
        value:
          type: string
      required:
        - errorType
    ModelMappingRequestErrorDto:
      allOf:
        - $ref: "#/components/schemas/ModelMappingSignalDto"
        - type: object
          properties:
            metricName:
              type: string
              minLength: 1
            metricType:
              type: string
              minLength: 1
              pattern: counter|gauge
            errors:
              type: array
              items:
                $ref: "#/components/schemas/ModelMappingRequestErrorConditionDto"
              minItems: 1
      required:
        - entityNameLabel
        - errors
        - metricName
        - metricSource
        - metricType
        - requestType
    ModelMappingRequestRateDto:
      allOf:
        - $ref: "#/components/schemas/ModelMappingSignalDto"
        - type: object
          properties:
            metricName:
              type: string
              minLength: 1
            metricType:
              type: string
              minLength: 1
              pattern: counter|gauge
      required:
        - entityNameLabel
        - metricName
        - metricSource
        - metricType
        - requestType
    ModelMappingSignalDto:
      type: object
      discriminator:
        propertyName: kind
      properties:
        id:
          type: string
        entityNameLabel:
          type: string
          minLength: 1
        metricSource:
          type: string
          minLength: 1
        requestType:
          type: string
          minLength: 1
        requestContext:
          type: array
          items:
            type: string
        requestContextJoin:
          type: string
        filters:
          type: array
          items:
            $ref: "#/components/schemas/ModelMappingSignalFilterDto"
        kind:
          type: string
      required:
        - entityNameLabel
        - kind
        - metricSource
        - requestType
    ModelMappingSignalFilterDto:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          pattern: ^((?!(__name__|asserts_.*)).)*$
        operator:
          type: string
          pattern: =|!=|=~|!~
        values:
          type: array
          items:
            type: string
      required:
        - name
    DatasetsSanityChecksDto:
      type: object
      properties:
        sanityChecks:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/DatasetSanityChecksDto"
    EntityKeyDto:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        scope:
          type: object
          additionalProperties: {}
    LatencyThresholdDto:
      type: object
      properties:
        requestType:
          type: string
        requestContext:
          type: string
        upperThreshold:
          type: number
          format: double
    LatencyThresholdsDto:
      type: object
      properties:
        entityKey:
          $ref: "#/components/schemas/EntityKeyDto"
        latencyThresholds:
          type: array
          items:
            $ref: "#/components/schemas/LatencyThresholdDto"
    MetricSanityCheckResult:
      type: object
      properties:
        checkName:
          type: string
        dataPresent:
          type: boolean
        stepResults:
          type: array
          items:
            $ref: "#/components/schemas/MetricSanityCheckStepResult"
    MetricSanityCheckStepResult:
      type: object
      properties:
        name:
          type: string
        troubleshoot:
          type: string
        blockers:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
    StackStatusDto:
      type: object
      properties:
        status:
          type: string
        disabledTime:
          type: string
          format: date-time
        enabled:
          type: boolean
        alertManagerConfigured:
          type: boolean
        graphInstanceCreated:
          type: boolean
        sanityCheckResults:
          type: array
          items:
            $ref: "#/components/schemas/MetricSanityCheckResult"
        version:
          type: integer
          format: int32
    StackEnableDto:
      type: object
      properties:
        vendors:
          type: array
          items:
            type: string
          uniqueItems: true
        groups:
          type: array
          items:
            $ref: "#/components/schemas/StackFilterGroupDto"
    StackInfoDto:
      type: object
      properties:
        stackId:
          type: integer
          format: int32
        slug:
          type: string
        orgId:
          type: integer
          format: int32
        orgSlug:
          type: string
        gcomToken:
          type: string
        mimirToken:
          type: string
        assertionDetectorToken:
          type: string
        enabled:
          type: boolean
        dormant:
          type: boolean
        alertManagerConfigured:
          type: boolean
        graphInstanceCreated:
          type: boolean
        useGrafanaManagedAlerts:
          type: boolean
    ScopeCriteriaDto:
      type: object
      properties:
        nameAndValues:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        scopeCriteriaMap:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
            uniqueItems: true
    SloListRequestDto:
      type: object
      properties:
        scopeCriteria:
          $ref: "#/components/schemas/ScopeCriteriaDto"
        endTime:
          type: integer
          format: int64
        sloSource:
          type: string
    ComplianceWindowDto:
      type: object
      properties:
        type:
          type: string
        numDays:
          type: integer
          format: int32
    SloDto:
      type: object
      properties:
        name:
          type: string
        scope:
          type: object
          additionalProperties: {}
        type:
          type: string
        action:
          type: string
        badEventQuery:
          type: string
        totalEventQuery:
          type: string
        measurementQuery:
          type: string
        sloTargetDtos:
          type: array
          items:
            $ref: "#/components/schemas/SloTargetDto"
        noData:
          type: boolean
    SloListDto:
      type: object
      properties:
        slos:
          type: array
          items:
            $ref: "#/components/schemas/SloDto"
        chartNames:
          type: array
          items:
            type: string
          uniqueItems: true
    SloTargetDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        targetSli:
          type: number
          format: double
        actualSli:
          type: number
          format: double
        threshold:
          type: number
          format: double
        complianceWindowDto:
          $ref: "#/components/schemas/ComplianceWindowDto"
        status:
          type: string
        fastBurnViolatingSince:
          type: integer
          format: int64
        slowBurnViolatingSince:
          type: integer
          format: int64
        fastBurnThreshold:
          type: number
          format: double
        slowBurnThreshold:
          type: number
          format: double
        incidentCount:
          type: integer
          format: int32
        errorBudget:
          type: number
          format: double
        oneHourErrorBudget:
          type: number
          format: double
        badCount:
          type: number
          format: double
        errorBudgetBalance:
          type: number
          format: double
        totalCount:
          type: number
          format: double
        recentBurnRate:
          type: number
          format: double
        oneHourBurnRate:
          type: number
          format: double
        sixHourBurnRate:
          type: number
          format: double
        incidentTriggerDescription:
          type: string
    SloIncidentRequestDto:
      type: object
      properties:
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        sloName:
          type: string
        targetName:
          type: string
        scopeCriteria:
          $ref: "#/components/schemas/ScopeCriteriaDto"
        sloSource:
          type: string
    IncidentDto:
      type: object
      properties:
        startTime:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
        severity:
          type: string
    SloIncidentListDto:
      type: object
      properties:
        incidents:
          type: array
          items:
            $ref: "#/components/schemas/IncidentDto"
    SloChartRequestDto:
      type: object
      properties:
        chartName:
          type: string
        sloName:
          type: string
        targetName:
          type: string
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        scopeCriteria:
          $ref: "#/components/schemas/ScopeCriteriaDto"
        sloSource:
          type: string
    MetricDto:
      type: object
      properties:
        query:
          type: string
        name:
          type: string
        fillZeros:
          type: boolean
        metric:
          type: object
          additionalProperties:
            type: string
        values:
          type: array
          items:
            $ref: "#/components/schemas/MetricValueDto"
    MetricValueDto:
      type: object
      properties:
        time:
          type: integer
          format: int64
        value:
          type: number
          format: double
    SloChartResponseDto:
      type: object
      properties:
        title:
          type: string
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/MetricDto"
        thresholds:
          type: array
          items:
            $ref: "#/components/schemas/ThresholdSingleDto"
        startTimeMs:
          type: integer
          format: int64
        endTimeMs:
          type: integer
          format: int64
        stepMs:
          type: integer
          format: int64
        badEventQuery:
          type: string
        totalEventQuery:
          type: string
        measurementQuery:
          type: string
    ThresholdSingleDto:
      allOf:
        - $ref: "#/components/schemas/ThresholdDto"
        - type: object
          properties:
            query:
              type: string
            values:
              type: array
              items:
                $ref: "#/components/schemas/ThresholdValueSingleDto"
            fillZeros:
              type: boolean
    ThresholdValueSingleDto:
      type: object
      properties:
        time:
          type: integer
          format: int64
        value:
          type: number
          format: double
    SearchRequestDto:
      type: object
      properties:
        definitionId:
          type: integer
          format: int32
        timeCriteria:
          $ref: "#/components/schemas/TimeCriteriaDto"
        scopeCriteria:
          $ref: "#/components/schemas/ScopeCriteriaDto"
        pageNum:
          type: integer
          format: int32
          minimum: 0
        bindings:
          type: object
          additionalProperties:
            type: string
        filterCriteria:
          type: array
          items:
            $ref: "#/components/schemas/EntityMatcherDto"
    TimeCriteriaDto:
      type: object
      properties:
        instant:
          type: integer
          format: int64
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
    SearchResponseDto:
      type: object
      properties:
        type:
          type: string
          enum:
            - timeseries
            - graph
        timeCriteria:
          $ref: "#/components/schemas/TimeCriteriaDto"
        stepDuration:
          type: string
        data: {}
        adjustedTimeCriteria:
          type: boolean
    AssertionSearchRequestDto:
      type: object
      properties:
        definitionId:
          type: integer
          format: int32
        timeCriteria:
          $ref: "#/components/schemas/TimeCriteriaDto"
        scopeCriteria:
          $ref: "#/components/schemas/ScopeCriteriaDto"
        pageNum:
          type: integer
          format: int32
          minimum: 0
        bindings:
          type: object
          additionalProperties:
            type: string
        filterCriteria:
          type: array
          items:
            $ref: "#/components/schemas/EntityMatcherDto"
        hideAssertionsOlderThanNHours:
          type: integer
          format: int32
        alertCategories:
          type: array
          items:
            type: string
          uniqueItems: true
        query:
          type: string
        currentWBEntityCount:
          type: integer
          format: int32
        hideAssertionsPresentMoreThanPercentageOfTime:
          type: integer
          format: int32
    AssertionClusterDto:
      type: object
      properties:
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        assertionSummaries:
          type: array
          items:
            $ref: "#/components/schemas/AssertionSummaryDto"
    AssertionStateDto:
      type: object
      properties:
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        severity:
          type: string
        assertionSummaries:
          type: array
          items:
            $ref: "#/components/schemas/AssertionSummaryDto"
    AssertionSummaryDto:
      type: object
      properties:
        category:
          type: string
        summary:
          type: string
    EntityAssertionScoresDto:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        typeLabels:
          type: object
          additionalProperties:
            type: string
        scope:
          type: object
          additionalProperties: {}
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/MetricDto"
        totalScore:
          type: number
          format: double
        severityWiseTotalScores:
          type: object
          additionalProperties:
            type: number
            format: double
        percentage:
          type: string
        assertionClusters:
          type: array
          items:
            $ref: "#/components/schemas/AssertionClusterDto"
        inboundClientErrorBreached:
          type: boolean
    EntityAssertionSummariesDto:
      type: object
      properties:
        summaries:
          type: array
          items:
            $ref: "#/components/schemas/EntityAssertionSummaryDto"
        timeWindow:
          $ref: "#/components/schemas/TimeWindowDto"
        timeStepIntervalMs:
          type: integer
          format: int64
        aggregateAssertionScores:
          $ref: "#/components/schemas/EntityAssertionScoresDto"
        assertionScores:
          type: array
          items:
            $ref: "#/components/schemas/EntityAssertionScoresDto"
        graphData: {}
    EntityAssertionSummaryDto:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        scope:
          type: object
          additionalProperties: {}
        timeLines:
          type: array
          items:
            $ref: "#/components/schemas/EntityAssertionSummaryTimeLineDto"
    EntityAssertionSummaryTimeLineDto:
      type: object
      properties:
        assertionName:
          type: string
        category:
          type: string
        alertName:
          type: string
        healthStates:
          type: array
          items:
            $ref: "#/components/schemas/AssertionStateDto"
        labels:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
    TimeWindowDto:
      type: object
      properties:
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
    LlmRcaSummarySearchReqDto:
      type: object
      properties:
        definitionId:
          type: integer
          format: int32
        timeCriteria:
          $ref: "#/components/schemas/TimeCriteriaDto"
        scopeCriteria:
          $ref: "#/components/schemas/ScopeCriteriaDto"
        pageNum:
          type: integer
          format: int32
          minimum: 0
        bindings:
          type: object
          additionalProperties:
            type: string
        filterCriteria:
          type: array
          items:
            $ref: "#/components/schemas/EntityMatcherDto"
        hideAssertionsOlderThanNHours:
          type: integer
          format: int32
        alertCategories:
          type: array
          items:
            type: string
          uniqueItems: true
        query:
          type: string
        currentWBEntityCount:
          type: integer
          format: int32
        hideAssertionsPresentMoreThanPercentageOfTime:
          type: integer
          format: int32
        includeSuggestions:
          type: boolean
    LlmRcaAssertionStateDto:
      type: object
      properties:
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        severity:
          type: string
    LlmRcaAssertionSummaryDto:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        scope:
          type: object
          additionalProperties: {}
        timeLines:
          type: array
          items:
            $ref: "#/components/schemas/LlmRcaAssertionTimelineItemDto"
    LlmRcaAssertionTimelineItemDto:
      type: object
      properties:
        assertionName:
          type: string
        category:
          type: string
        alertName:
          type: string
        healthStates:
          type: array
          items:
            $ref: "#/components/schemas/LlmRcaAssertionStateDto"
        labels:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
    LlmRcaGraphEntityDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        name:
          type: string
        scope:
          type: object
          additionalProperties: {}
        properties:
          type: object
          additionalProperties: {}
        relations:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/EntityKeyDto"
    LlmRcaSuggestionDto:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        scope:
          type: object
          additionalProperties: {}
        reason:
          type: string
    LlmRcaSummariesDto:
      type: object
      properties:
        summaries:
          type: array
          items:
            $ref: "#/components/schemas/LlmRcaAssertionSummaryDto"
        graphData:
          type: array
          items:
            $ref: "#/components/schemas/LlmRcaGraphEntityDto"
        suggestions:
          type: array
          items:
            $ref: "#/components/schemas/LlmRcaSuggestionDto"
    RcaPatternSearchRequestDto:
      type: object
      properties:
        entityType:
          type: string
        entityName:
          type: string
        env:
          type: string
        site:
          type: string
        namespace:
          type: string
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        patterns:
          type: array
          items:
            type: string
    RcaPatternSearchResponseDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: "#/components/schemas/EntityKeyDto"
    RcaPatternListRequestDto:
      type: object
      properties:
        entityType:
          type: string
        entityName:
          type: string
        env:
          type: string
        site:
          type: string
        namespace:
          type: string
    MonitoringStatusRequestDto:
      type: object
      properties:
        entityKeys:
          type: array
          items:
            $ref: "#/components/schemas/EntityKeyDto"
          uniqueItems: true
        instantMs:
          type: integer
          format: int64
        reportOnlyMissing:
          type: boolean
        scopeCriteriaDto:
          $ref: "#/components/schemas/ScopeCriteriaDto"
    EntityMonitoringStatusDto:
      type: object
      properties:
        entityKey:
          $ref: "#/components/schemas/EntityKeyDto"
        resource:
          type: boolean
        traffic:
          type: boolean
        latency:
          type: boolean
    MonitoringStatusResponseDto:
      type: object
      properties:
        entityStatus:
          type: array
          items:
            $ref: "#/components/schemas/EntityMonitoringStatusDto"
    ExternalLoggingRequestDto:
      type: object
      properties:
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        properties:
          type: object
          additionalProperties:
            type: string
      required:
        - end
        - start
    ExternalLoggingResponseDto:
      type: object
      properties:
        url:
          type: string
    KpiSummaryRequestDto:
      type: object
      properties:
        entityKeys:
          type: array
          items:
            $ref: "#/components/schemas/EntityKeyDto"
          uniqueItems: true
        startMs:
          type: integer
          format: int64
        endMs:
          type: integer
          format: int64
    GraphAssertion:
      type: object
      properties:
        assertionName:
          type: string
        severity:
          type: string
        category:
          type: string
        entityType:
          type: string
    GraphAssertionSummary:
      type: object
      properties:
        severity:
          type: string
        amend:
          type: boolean
        assertions:
          type: array
          items:
            $ref: "#/components/schemas/GraphAssertion"
    GraphEntityKpiValue:
      type: object
      properties:
        kpiValue:
          type: number
          format: double
        assertionSummary:
          $ref: "#/components/schemas/GraphAssertionSummary"
    ThresholdValueMinMaxDto:
      type: object
      properties:
        time:
          type: integer
          format: int64
        values:
          type: array
          items:
            type: number
            format: double
    TraceIntegrationRequestDto:
      type: object
      properties:
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        properties:
          type: object
          additionalProperties:
            type: string
        values:
          type: array
          items:
            $ref: "#/components/schemas/MetricValueDto"
        thresholdBands:
          type: array
          items:
            $ref: "#/components/schemas/ThresholdValueMinMaxDto"
        singleThreshold:
          type: number
          format: double
      required:
        - end
        - start
    TraceIntegrationResponseDto:
      type: object
      properties:
        url:
          type: string
    IncidentRequestDto:
      type: object
      properties:
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        search:
          type: string
        scopeCriteria:
          $ref: "#/components/schemas/ScopeCriteriaDto"
        sloSource:
          type: string
    IncidentGroupDetailDto:
      type: object
      properties:
        scope:
          type: object
          additionalProperties: {}
    IncidentGroupDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - assertion_alert
            - slo_alert
        detail:
          $ref: "#/components/schemas/IncidentGroupDetailDto"
        incidents:
          type: array
          items:
            $ref: "#/components/schemas/IncidentDto"
    IncidentGroupListDto:
      type: object
      properties:
        incidentGroups:
          type: array
          items:
            $ref: "#/components/schemas/IncidentGroupDto"
        chartName:
          type: string
    IncidentSummaryDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - assertion_alert
            - slo_alert
        scope:
          type: object
          additionalProperties: {}
        incidents:
          type: integer
          format: int32
        status:
          type: boolean
    IncidentSummaryListDto:
      type: object
      properties:
        incidentSummaries:
          type: array
          items:
            $ref: "#/components/schemas/IncidentSummaryDto"
    EntityCountRequestDto:
      type: object
      properties:
        timeCriteria:
          $ref: "#/components/schemas/TimeCriteriaDto"
        scopeCriteria:
          $ref: "#/components/schemas/ScopeCriteriaDto"
        propertyMatchers:
          type: array
          items:
            $ref: "#/components/schemas/PropertyMatcherDto"
    EntityScopesRequestDto:
      type: object
      properties:
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        conditions:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    EntityScopesResponseDto:
      type: object
      properties:
        scopeValues:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    CustomerMetricRequestDto:
      type: object
      properties:
        metrics:
          type: array
          items:
            type: string
          uniqueItems: true
    CustomerMetricResponseDto:
      type: object
      properties:
        hosted:
          $ref: "#/components/schemas/MetricSetsDto"
        client:
          $ref: "#/components/schemas/MetricSetsDto"
    MetricSetsDto:
      type: object
      properties:
        total:
          type: integer
          format: int32
        metricNames:
          type: array
          items:
            type: string
          uniqueItems: true
        regexPatterns:
          type: array
          items:
            type: string
          uniqueItems: true
    TraceConfigDto:
      type: object
      properties:
        tool:
          type: string
        url:
          type: string
        labelToTagMapping:
          type: object
          additionalProperties:
            type: string
        serviceLabel:
          type: string
        operationLabel:
          type: string
        assertsCollector:
          type: boolean
        addOutboundContext:
          type: boolean
          deprecated: true
        suffixServiceWithNamespace:
          type: boolean
        isElasticBackend:
          type: boolean
        projectName:
          type: string
        ingestedByAgent:
          type: boolean
        awsRegion:
          type: string
        dataSource:
          type: string
        orgId:
          type: string
    TraceEnvConfigDto:
      type: object
      properties:
        name:
          type: string
        envsForTrace:
          type: array
          items:
            type: string
          uniqueItems: true
        sitesForTrace:
          type: array
          items:
            type: string
          uniqueItems: true
        traceConfig:
          $ref: "#/components/schemas/TraceConfigDto"
        defaultConfig:
          type: boolean
    OccurrenceSliConfigDto:
      allOf:
        - $ref: "#/components/schemas/SliConfigDto"
        - type: object
          properties:
            measurement:
              type: string
            thresholdComparator:
              type: string
    RequestSliConfigDto:
      allOf:
        - $ref: "#/components/schemas/SliConfigDto"
        - type: object
          properties:
            badEventCount:
              type: string
            totalEventCount:
              type: string
            gauge:
              type: boolean
    SliConfigDto:
      type: object
      discriminator:
        propertyName: kind
      properties:
        name:
          type: string
        kind:
          type: string
      required:
        - kind
    SloCalendarWindowConfigDto:
      allOf:
        - $ref: "#/components/schemas/SloWindowConfigDto"
    SloConfigDto:
      type: object
      properties:
        name:
          type: string
        ratio:
          type: number
          format: double
        value:
          type: number
          format: double
        window:
          oneOf:
            - $ref: "#/components/schemas/SloCalendarWindowConfigDto"
            - $ref: "#/components/schemas/SloRollingWindowConfigDto"
    SloConfigRequestDto:
      type: object
      properties:
        apiVersion:
          type: string
        name:
          type: string
        entitySearch:
          type: string
        indicator:
          oneOf:
            - $ref: "#/components/schemas/OccurrenceSliConfigDto"
            - $ref: "#/components/schemas/RequestSliConfigDto"
        objectives:
          type: array
          items:
            $ref: "#/components/schemas/SloConfigDto"
    SloRollingWindowConfigDto:
      allOf:
        - $ref: "#/components/schemas/SloWindowConfigDto"
    SloWindowConfigDto:
      type: object
      discriminator:
        propertyName: kind
      properties:
        days:
          type: integer
          format: int32
        kind:
          type: string
      required:
        - kind
    ConfigValidationResponseDto:
      type: object
      properties:
        state:
          type: string
          enum:
            - success
            - failure
            - processing
            - aborted
            - timeout
        jobId:
          type: string
        errors:
          type: array
          items:
            type: string
    RuleCreationSpecDto:
      type: object
      properties:
        metricRegExp:
          type: string
        rules:
          type: array
          items:
            $ref: "#/components/schemas/RuleDto"
    RuleDto:
      type: object
      properties:
        ruleGroup:
          type: string
        generateDefaultRules:
          type: boolean
        assertsRuleName:
          type: string
        ruleExpr:
          type: string
        labelsTemplate:
          type: object
          additionalProperties:
            type: string
    RuleGenerationRequestDto:
      type: object
      properties:
        metricMatchConditions:
          type: object
          additionalProperties:
            type: string
        sourceMappings:
          type: object
          additionalProperties:
            type: string
        ruleCreationSpecs:
          type: array
          items:
            $ref: "#/components/schemas/RuleCreationSpecDto"
    PrometheusRule:
      type: object
      properties:
        record:
          type: string
        alert:
          type: string
        expr:
          type: string
        annotations:
          type: object
          additionalProperties:
            type: string
          properties:
            empty:
              type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
          properties:
            empty:
              type: boolean
        disableInGroups:
          type: array
          items:
            type: string
        for:
          type: string
    PrometheusRuleGroup:
      type: object
      properties:
        name:
          type: string
        interval:
          type: string
        rules:
          type: array
          items:
            $ref: "#/components/schemas/PrometheusRule"
          properties:
            empty:
              type: boolean
            first:
              $ref: "#/components/schemas/PrometheusRule"
            last:
              $ref: "#/components/schemas/PrometheusRule"
    PrometheusRules:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: "#/components/schemas/PrometheusRuleGroup"
          properties:
            empty:
              type: boolean
            first:
              $ref: "#/components/schemas/PrometheusRuleGroup"
            last:
              $ref: "#/components/schemas/PrometheusRuleGroup"
    RuleGenerationResponseDto:
      type: object
      properties:
        prometheusRules:
          $ref: "#/components/schemas/PrometheusRules"
        unmappedCpuMetrics:
          type: array
          items:
            type: string
          uniqueItems: true
        unmappedMemoryMetrics:
          type: array
          items:
            type: string
          uniqueItems: true
        unmappedBytesMetric:
          type: array
          items:
            type: string
          uniqueItems: true
        unmappedHistograms:
          type: array
          items:
            type: string
          uniqueItems: true
        unmappedSummaries:
          type: array
          items:
            type: string
          uniqueItems: true
        unmappedMetrics:
          type: array
          items:
            type: string
          uniqueItems: true
    CustomAttributeConfigDto:
      type: object
      properties:
        span_kinds:
          type: array
          items:
            type: string
        source_attributes:
          type: array
          items:
            type: string
        regex:
          type: string
        value_expr:
          type: string
    OtelCollectorConfigDto:
      type: object
      properties:
        capture_metrics:
          type: boolean
        custom_attributes:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: array
              items:
                $ref: "#/components/schemas/CustomAttributeConfigDto"
        span_attributes:
          type: array
          items:
            $ref: "#/components/schemas/SpanAttributeDto"
        attributes_as_metric_labels:
          type: array
          items:
            type: string
        sampling_latency_threshold_seconds:
          type: number
          format: double
        latency_histogram_buckets:
          type: array
          items:
            type: number
            format: double
        ignore_client_errors:
          type: boolean
    SpanAttributeConfigDto:
      type: object
      properties:
        namespace:
          type: string
        service:
          type: string
        rules:
          type: array
          items:
            $ref: "#/components/schemas/CustomAttributeConfigDto"
    SpanAttributeDto:
      type: object
      properties:
        attr_name:
          type: string
        attr_configs:
          type: array
          items:
            $ref: "#/components/schemas/SpanAttributeConfigDto"
    ConfigImportResultDto:
      type: object
      properties:
        failedConfigs:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    EnvironmentDto:
      type: object
      properties:
        name:
          type: string
        envsForLog:
          type: array
          items:
            type: string
          uniqueItems: true
        sitesForLog:
          type: array
          items:
            type: string
          uniqueItems: true
        logConfig:
          $ref: "#/components/schemas/LogConfigDto"
        defaultConfig:
          type: boolean
    IndexMappingDto:
      type: object
      properties:
        index:
          type: string
        labelMatchValues:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
            uniqueItems: true
    LogConfigDto:
      type: object
      properties:
        tool:
          type: string
        url:
          type: string
        dateFormat:
          type: string
        correlationLabels:
          type: string
        labelToLogFieldMapping:
          type: object
          additionalProperties:
            type: string
        defaultSearchText:
          type: string
        errorFilter:
          type: string
        columns:
          type: array
          items:
            type: string
        filters:
          type: array
          items:
            type: object
            additionalProperties: {}
        index:
          type: string
        indexMappings:
          type: array
          items:
            $ref: "#/components/schemas/IndexMappingDto"
        interval:
          type: string
        query:
          type: object
          additionalProperties:
            type: string
        sort:
          type: array
          items:
            type: string
        httpResponseCodeField:
          type: string
        orgId:
          type: string
        dataSource:
          type: string
    KpiDisplayConfigDto:
      type: object
      properties:
        defaultDashboard:
          type: boolean
        additionalDashboard:
          type: boolean
        frameworkDashboard:
          type: boolean
        runtimeDashboard:
          type: boolean
        k8sAppView:
          type: boolean
        appO11yAppView:
          type: boolean
        frontendO11yAppView:
          type: boolean
        awsAppView:
          type: boolean
        logsView:
          type: boolean
        tracesView:
          type: boolean
        propertiesView:
          type: boolean
        metricsView:
          type: boolean
    EdgeDisplayConfigDto:
      type: object
      properties:
        color:
          type: string
    EntityDisplayConfigDto:
      type: object
      properties:
        color:
          type: string
        shape:
          type: string
        icon:
          type: string
    GraphDisplayConfigDto:
      type: object
      properties:
        entities:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/EntityDisplayConfigDto"
        edges:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/EdgeDisplayConfigDto"
    DisabledAlertConfigDto:
      type: object
      properties:
        name:
          type: string
        matchLabels:
          type: object
          additionalProperties:
            type: string
    DisabledAlertConfigsDto:
      type: object
      properties:
        disabledAlertConfigs:
          type: array
          items:
            $ref: "#/components/schemas/DisabledAlertConfigDto"
    CustomDashConfigDto:
      type: object
      properties:
        dashboardUri:
          type: string
        uid:
          type: string
        query:
          type: string
        dashParams:
          type: object
          additionalProperties:
            type: string
        dataSourceParam:
          type: string
        alertCategory:
          type: array
          items:
            type: string
        overrideEntityUri:
          type: boolean
        propertyMatchers:
          type: array
          items:
            $ref: "#/components/schemas/PropertyMatcherDto"
    ApiError:
      type: object
      properties:
        status:
          oneOf:
            - $ref: "#/components/schemas/DefaultHttpStatusCode"
            - $ref: "#/components/schemas/HttpStatus"
        requestId:
          type: string
        timestamp:
          type: integer
          format: int64
        message:
          type: string
        debugMessage:
          type: string
        subErrors:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/ApiSubError"
              - $ref: "#/components/schemas/ApiValidationError"
        trace_id:
          type: string
        span_id:
          type: string
    ApiErrorException:
      type: object
      properties:
        cause:
          type: object
          properties:
            stackTrace:
              type: array
              items:
                type: object
                properties:
                  classLoaderName:
                    type: string
                  moduleName:
                    type: string
                  moduleVersion:
                    type: string
                  methodName:
                    type: string
                  fileName:
                    type: string
                  lineNumber:
                    type: integer
                    format: int32
                  className:
                    type: string
                  nativeMethod:
                    type: boolean
            message:
              type: string
            localizedMessage:
              type: string
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        apiError:
          $ref: "#/components/schemas/ApiError"
        message:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    ApiSubError:
      type: object
      properties:
        message:
          type: string
    ApiValidationError:
      allOf:
        - $ref: "#/components/schemas/ApiSubError"
        - type: object
          properties:
            field:
              type: string
            rejectedValue: {}
    DefaultHttpStatusCode:
      allOf:
        - $ref: "#/components/schemas/HttpStatusCode"
    HttpStatus:
      allOf:
        - $ref: "#/components/schemas/HttpStatusCode"
      enum:
        - 100 CONTINUE
        - 101 SWITCHING_PROTOCOLS
        - 102 PROCESSING
        - 103 EARLY_HINTS
        - 103 CHECKPOINT
        - 200 OK
        - 201 CREATED
        - 202 ACCEPTED
        - 203 NON_AUTHORITATIVE_INFORMATION
        - 204 NO_CONTENT
        - 205 RESET_CONTENT
        - 206 PARTIAL_CONTENT
        - 207 MULTI_STATUS
        - 208 ALREADY_REPORTED
        - 226 IM_USED
        - 300 MULTIPLE_CHOICES
        - 301 MOVED_PERMANENTLY
        - 302 FOUND
        - 302 MOVED_TEMPORARILY
        - 303 SEE_OTHER
        - 304 NOT_MODIFIED
        - 305 USE_PROXY
        - 307 TEMPORARY_REDIRECT
        - 308 PERMANENT_REDIRECT
        - 400 BAD_REQUEST
        - 401 UNAUTHORIZED
        - 402 PAYMENT_REQUIRED
        - 403 FORBIDDEN
        - 404 NOT_FOUND
        - 405 METHOD_NOT_ALLOWED
        - 406 NOT_ACCEPTABLE
        - 407 PROXY_AUTHENTICATION_REQUIRED
        - 408 REQUEST_TIMEOUT
        - 409 CONFLICT
        - 410 GONE
        - 411 LENGTH_REQUIRED
        - 412 PRECONDITION_FAILED
        - 413 PAYLOAD_TOO_LARGE
        - 413 REQUEST_ENTITY_TOO_LARGE
        - 414 URI_TOO_LONG
        - 414 REQUEST_URI_TOO_LONG
        - 415 UNSUPPORTED_MEDIA_TYPE
        - 416 REQUESTED_RANGE_NOT_SATISFIABLE
        - 417 EXPECTATION_FAILED
        - 418 I_AM_A_TEAPOT
        - 419 INSUFFICIENT_SPACE_ON_RESOURCE
        - 420 METHOD_FAILURE
        - 421 DESTINATION_LOCKED
        - 422 UNPROCESSABLE_ENTITY
        - 423 LOCKED
        - 424 FAILED_DEPENDENCY
        - 425 TOO_EARLY
        - 426 UPGRADE_REQUIRED
        - 428 PRECONDITION_REQUIRED
        - 429 TOO_MANY_REQUESTS
        - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
        - 451 UNAVAILABLE_FOR_LEGAL_REASONS
        - 500 INTERNAL_SERVER_ERROR
        - 501 NOT_IMPLEMENTED
        - 502 BAD_GATEWAY
        - 503 SERVICE_UNAVAILABLE
        - 504 GATEWAY_TIMEOUT
        - 505 HTTP_VERSION_NOT_SUPPORTED
        - 506 VARIANT_ALSO_NEGOTIATES
        - 507 INSUFFICIENT_STORAGE
        - 508 LOOP_DETECTED
        - 509 BANDWIDTH_LIMIT_EXCEEDED
        - 510 NOT_EXTENDED
        - 511 NETWORK_AUTHENTICATION_REQUIRED
    HttpStatusCode:
      type: object
      properties:
        error:
          type: boolean
        is4xxClientError:
          type: boolean
        is5xxServerError:
          type: boolean
        is2xxSuccessful:
          type: boolean
        is1xxInformational:
          type: boolean
        is3xxRedirection:
          type: boolean
    AlertConfigDto:
      type: object
      properties:
        name:
          type: string
        matchLabels:
          type: object
          additionalProperties:
            type: string
        alertLabels:
          type: object
          additionalProperties:
            type: string
        silenced:
          type: boolean
        for:
          type: string
    AlertConfigsDto:
      type: object
      properties:
        alertConfigs:
          type: array
          items:
            $ref: "#/components/schemas/AlertConfigDto"
    AMReceiverEmail:
      type: object
      properties:
        to:
          type: string
        from:
          type: string
        smarthost:
          type: string
        hello:
          type: string
        html:
          type: string
        text:
          type: string
        headers:
          type: object
          additionalProperties:
            type: string
        send_resolved:
          type: boolean
        auth_username:
          type: string
        auth_password:
          type: string
        auth_password_file:
          type: string
        auth_secret:
          type: string
        auth_identity:
          type: string
        require_tls:
          type: boolean
        tls_config:
          $ref: "#/components/schemas/AlertManagerTls"
    AMReceiverImage:
      type: object
      properties:
        href:
          type: string
        source:
          type: string
        alt:
          type: string
    AMReceiverLink:
      type: object
      properties:
        href:
          type: string
        text:
          type: string
    AMReceiverOpsGenie:
      type: object
      properties:
        message:
          type: string
        description:
          type: string
        source:
          type: string
        details:
          type: object
          additionalProperties:
            type: string
        responders:
          type: array
          items:
            $ref: "#/components/schemas/AlertManagerResponder"
        tags:
          type: string
        note:
          type: string
        priority:
          type: string
        entity:
          type: string
        actions:
          type: string
        send_resolved:
          type: boolean
        api_key:
          type: string
        api_key_file:
          type: string
        api_url:
          type: string
        update_alerts:
          type: boolean
        http_config:
          $ref: "#/components/schemas/AlertManagerHttp"
    AMReceiverPagerDuty:
      type: object
      properties:
        url:
          type: string
        client:
          type: string
        description:
          type: string
        severity:
          type: string
        source:
          type: string
        details:
          type: object
          additionalProperties:
            type: string
        images:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverImage"
        links:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverLink"
        component:
          type: string
        group:
          type: string
        send_resolved:
          type: boolean
        routing_key:
          type: string
        routing_key_file:
          type: string
        service_key:
          type: string
        service_key_file:
          type: string
        client_url:
          type: string
        class:
          type: string
        http_config:
          $ref: "#/components/schemas/AlertManagerHttp"
    AMReceiverPushOver:
      type: object
      properties:
        token:
          type: string
        title:
          type: string
        message:
          type: string
        url:
          type: string
        priority:
          type: string
        retry:
          type: string
        expire:
          type: string
        send_resolved:
          type: boolean
        user_key:
          type: string
        http_config:
          $ref: "#/components/schemas/AlertManagerHttp"
    AMReceiverSNS:
      type: object
      properties:
        sigv4:
          $ref: "#/components/schemas/AMReceiverSNSSigV4"
        subject:
          type: string
        message:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string
        send_resolved:
          type: boolean
        api_url:
          type: string
        topic_arn:
          type: string
        phone_number:
          type: string
        target_arn:
          type: string
        http_config:
          $ref: "#/components/schemas/AlertManagerHttp"
    AMReceiverSNSSigV4:
      type: object
      properties:
        region:
          type: string
        profile:
          type: string
        access_key:
          type: string
        secret_key:
          type: string
        role_arn:
          type: string
    AMReceiverSlack:
      type: object
      properties:
        channel:
          type: string
        username:
          type: string
        actions:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverSlackAction"
        color:
          type: string
        fallback:
          type: string
        fields:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverSlackField"
        footer:
          type: string
        pretext:
          type: string
        text:
          type: string
        title:
          type: string
        httpConfig:
          $ref: "#/components/schemas/AlertManagerHttp"
        send_resolved:
          type: boolean
        api_url:
          type: string
        api_url_file:
          type: string
        icon_emoji:
          type: string
        icon_url:
          type: string
        link_names:
          type: boolean
        callback_id:
          type: string
        mrkdwn_in:
          type: string
        short_fields:
          type: string
        title_link:
          type: string
        image_url:
          type: string
        thumb_url:
          type: string
    AMReceiverSlackAction:
      type: object
      properties:
        text:
          type: string
        type:
          type: string
        url:
          type: string
        name:
          type: string
        value:
          type: string
        confirm:
          $ref: "#/components/schemas/AMReceiverSlackActionConfirmField"
        style:
          type: string
    AMReceiverSlackActionConfirmField:
      type: object
      properties:
        text:
          type: string
        title:
          type: string
        dismiss_text:
          type: string
        ok_text:
          type: string
    AMReceiverSlackField:
      type: object
      properties:
        title:
          type: string
        value:
          type: string
        short:
          type: boolean
    AMReceiverVictorOps:
      type: object
      properties:
        send_resolved:
          type: boolean
        api_key:
          type: string
        api_key_file:
          type: string
        api_url:
          type: string
        routing_key:
          type: string
        message_type:
          type: string
        entity_display_name:
          type: string
        state_message:
          type: string
        monitoring_tool:
          type: string
        http_config:
          $ref: "#/components/schemas/AlertManagerHttp"
    AMReceiverWebhook:
      type: object
      properties:
        url:
          type: string
        send_resolved:
          type: boolean
        max_alerts:
          type: integer
          format: int32
        http_config:
          $ref: "#/components/schemas/AlertManagerHttp"
    AlertManagerAuthorization:
      type: object
      properties:
        type:
          type: string
        credentials:
          type: string
        credentials_file:
          type: string
    AlertManagerBasicAuth:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        password_file:
          type: string
    AlertManagerConfig:
      type: object
      properties:
        global:
          $ref: "#/components/schemas/AlertManagerGlobal"
        templates:
          type: array
          items:
            type: string
        route:
          $ref: "#/components/schemas/AlertManagerRoute"
        receivers:
          type: array
          items:
            $ref: "#/components/schemas/AlertManagerReceiver"
        inhibit_rules:
          type: array
          items:
            $ref: "#/components/schemas/AlertManagerInhibitRule"
        mute_time_intervals:
          type: array
          deprecated: true
          items:
            $ref: "#/components/schemas/AlertManagerNamedTimeInterval"
        time_intervals:
          type: array
          items:
            $ref: "#/components/schemas/AlertManagerNamedTimeInterval"
    AlertManagerGlobal:
      type: object
      properties:
        smtp_smarthost:
          type: string
        smtp_from:
          type: string
        smtp_hello:
          type: string
        smtp_auth_username:
          type: string
        smtp_auth_password:
          type: string
        smtp_auth_password_file:
          type: string
        smtp_auth_identity:
          type: string
        smtp_auth_secret:
          type: string
        smtp_require_tls:
          type: boolean
        slack_api_url:
          type: string
        slack_api_url_file:
          type: string
        victorops_api_key:
          type: string
        victorops_api_key_file:
          type: string
        victorops_api_url:
          type: string
        pagerduty_url:
          type: string
        opsgenie_api_key:
          type: string
        opsgenie_api_key_file:
          type: string
        opsgenie_api_url:
          type: string
        wechat_api_url:
          type: string
        wechat_api_secret:
          type: string
        wechat_api_corp_id:
          type: string
        telegram_api_url:
          type: string
        webex_api_url:
          type: string
        http_config:
          $ref: "#/components/schemas/AlertManagerHttp"
        resolve_timeout:
          type: string
    AlertManagerHttp:
      type: object
      properties:
        authorization:
          $ref: "#/components/schemas/AlertManagerAuthorization"
        oauth2:
          $ref: "#/components/schemas/AlertManagerOAuth2"
        basic_auth:
          $ref: "#/components/schemas/AlertManagerBasicAuth"
        enable_http2:
          type: boolean
        proxy_url:
          type: string
        follow_redirects:
          type: boolean
        tls_config:
          $ref: "#/components/schemas/AlertManagerTls"
    AlertManagerInhibitRule:
      type: object
      properties:
        equal:
          type: array
          items:
            type: string
        target_match:
          type: object
          additionalProperties:
            type: string
            deprecated: true
          deprecated: true
        target_match_re:
          type: object
          additionalProperties:
            type: string
            deprecated: true
          deprecated: true
        target_matchers:
          type: array
          items:
            type: string
        source_match:
          type: object
          additionalProperties:
            type: string
            deprecated: true
          deprecated: true
        source_match_re:
          type: object
          additionalProperties:
            type: string
            deprecated: true
          deprecated: true
        source_matchers:
          type: array
          items:
            type: string
    AlertManagerNamedTimeInterval:
      type: object
      properties:
        name:
          type: string
        time_intervals:
          type: array
          items:
            $ref: "#/components/schemas/AlertManagerTimeInterval"
    AlertManagerOAuth2:
      type: object
      properties:
        scopes:
          type: array
          items:
            type: string
        client_id:
          type: string
        client_secret:
          type: string
        client_secret_file:
          type: string
        token_url:
          type: string
        endpoint_params:
          type: object
          additionalProperties:
            type: string
        tls_config:
          $ref: "#/components/schemas/AlertManagerTls"
        proxy_url:
          type: string
    AlertManagerReceiver:
      type: object
      properties:
        name:
          type: string
        email_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverEmail"
        opsgenie_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverOpsGenie"
        pagerduty_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverPagerDuty"
        pushover_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverPushOver"
        slack_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverSlack"
        sns_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverSNS"
        victorops_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverVictorOps"
        webhook_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverWebhook"
        wechat_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverWebhook"
        telegram_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverWebhook"
        webex_configs:
          type: array
          items:
            $ref: "#/components/schemas/AMReceiverWebhook"
    AlertManagerResponder:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        username:
          type: string
        type:
          type: string
    AlertManagerRoute:
      type: object
      properties:
        receiver:
          type: string
        match:
          type: object
          additionalProperties:
            type: string
            deprecated: true
          deprecated: true
        matchers:
          type: array
          items:
            type: string
        routes:
          type: array
          items: {}
        group_by:
          type: array
          items:
            type: string
        continue:
          type: boolean
        match_re:
          type: object
          additionalProperties:
            type: string
        group_wait:
          type: string
        group_interval:
          type: string
        repeat_interval:
          type: string
        mute_time_intervals:
          type: array
          items:
            type: string
        active_time_intervals:
          type: array
          items:
            type: string
    AlertManagerTimeInterval:
      type: object
      properties:
        times:
          type: array
          items:
            type: string
        weekdays:
          type: array
          items:
            type: string
        months:
          type: array
          items:
            type: string
        years:
          type: array
          items:
            type: string
        location:
          type: string
        days_of_month:
          type: array
          items:
            type: string
    AlertManagerTls:
      type: object
      properties:
        ca_file:
          type: string
        cert_file:
          type: string
        key_file:
          type: string
        server_name:
          type: string
        insecure_skip_verify:
          type: boolean
        min_version:
          type: string
        max_version:
          type: string
    AssertionsRequestDto:
      type: object
      properties:
        startTime:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
        entityKeys:
          type: array
          items:
            $ref: "#/components/schemas/EntityKeyDto"
          uniqueItems: true
        includeConnectedAssertions:
          type: boolean
        alertCategories:
          type: array
          items:
            type: string
          uniqueItems: true
        severities:
          type: array
          items:
            type: string
          uniqueItems: true
        hideAssertionsOlderThanNHours:
          type: integer
          format: int32
        hideAssertionsPresentMoreThanPercentageOfTime:
          type: integer
          format: int32
    LlmRcaSummaryReqDto:
      type: object
      properties:
        startTime:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
        entityKeys:
          type: array
          items:
            $ref: "#/components/schemas/EntityKeyDto"
          minItems: 1
          uniqueItems: true
        suggestionSrcEntities:
          type: array
          items:
            $ref: "#/components/schemas/EntityKeyDto"
          uniqueItems: true
        alertCategories:
          type: array
          items:
            type: string
          uniqueItems: true
        hideAssertionsOlderThanNHours:
          type: integer
          format: int32
        hideAssertionsPresentMoreThanPercentageOfTime:
          type: integer
          format: int32
        includeSuggestions:
          type: boolean
      required:
        - entityKeys
    EntityAssertionsGraphDto:
      type: object
      properties:
        type:
          type: string
        timeCriteria:
          $ref: "#/components/schemas/TimeWindowDto"
        data: {}
    EntityAssertionMetricRequestDto:
      type: object
      properties:
        startTime:
          type: integer
          format: int64
        endTime:
          type: integer
          format: int64
        labels:
          type: object
          additionalProperties:
            type: string
        referenceForThreshold:
          type: boolean
    EntityAssertionDetailsDto:
      type: object
      properties:
        timeWindow:
          $ref: "#/components/schemas/TimeWindowDto"
        timeStepIntervalMs:
          type: integer
          format: int64
        thresholds:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/ThresholdMinMaxDto"
              - $ref: "#/components/schemas/ThresholdSingleDto"
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/MetricDto"
        notificationRuleName:
          type: string
    ThresholdDto:
      type: object
      discriminator:
        propertyName: type
      properties:
        name:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        type:
          type: string
      required:
        - type
    ThresholdMinMaxDto:
      allOf:
        - $ref: "#/components/schemas/ThresholdDto"
        - type: object
          properties:
            lowerBoundQuery:
              type: string
            upperBoundQuery:
              type: string
            values:
              type: array
              items:
                $ref: "#/components/schemas/ThresholdValueMinMaxDto"
            fillZeros:
              type: boolean
    AssertionScoreRequestDto:
      type: object
      properties:
        startMs:
          type: integer
          format: int64
        endMs:
          type: integer
          format: int64
        hideAssertionsOlderThanNHours:
          type: integer
          format: int32
        alertCategories:
          type: array
          items:
            type: string
          uniqueItems: true
        scopeCriteria:
          $ref: "#/components/schemas/ScopeCriteriaDto"
        hideAssertionsPresentMoreThanPercentageOfTime:
          type: integer
          format: int32
    AssertionRollupDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        scope:
          type: object
          additionalProperties: {}
        labels:
          type: object
          additionalProperties:
            type: string
        assertionCount:
          type: integer
          format: int32
        warningCount:
          type: integer
          format: int32
        criticalCount:
          type: integer
          format: int32
        infoCount:
          type: integer
          format: int32
        timelineIds:
          type: array
          items:
            type: integer
            format: int64
          uniqueItems: true
        timelineHashes:
          type: array
          items:
            type: string
          uniqueItems: true
        pathsToLinkedGroups:
          type: array
          items:
            type: array
            items:
              type: integer
              format: int64
          uniqueItems: true
        pathHashesToLinkedGroups:
          type: array
          items:
            type: array
            items:
              type: string
          uniqueItems: true
    AssertionScoresDto:
      type: object
      properties:
        timeWindow:
          $ref: "#/components/schemas/TimeWindowDto"
        timeStepIntervalMs:
          type: integer
          format: int64
        assertionScoresForRootEntity:
          $ref: "#/components/schemas/EntityAssertionScoresDto"
        assertionScoresForTopNEntities:
          type: array
          items:
            $ref: "#/components/schemas/EntityAssertionScoresDto"
        assertionRollupDto:
          type: array
          items:
            $ref: "#/components/schemas/AssertionRollupDto"
        graphData: {}
    AssertionInfoRequestDto:
      type: object
      properties:
        assertionName:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
    AssertionInfoDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        group:
          type: string
        expression:
          type: string
        interval:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/AssertionMetricDetailDto"
    AssertionMetricDetailDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        help:
          type: string
        unit:
          type: string
    AffectedEntityNamesDto:
      type: object
      properties:
        entityNames:
          type: array
          items:
            type: string
        totalCount:
          type: integer
          format: int32
    AffectedEntityDetailDto:
      type: object
      properties:
        name:
          type: string
        extraLabels:
          type: object
          additionalProperties:
            type: string
    AffectedEntityDetailsDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: "#/components/schemas/AffectedEntityDetailDto"
        totalCount:
          type: integer
          format: int32
    AllRulesDto:
      type: object
      properties:
        all:
          $ref: "#/components/schemas/VersionedRulesPayload"
        relabel:
          $ref: "#/components/schemas/VersionedMimirRelabelRulesPayload"
    MimirRelabelRule:
      type: object
      properties:
        selector:
          type: string
        replacement:
          type: string
        drop:
          type: boolean
        join_labels:
          type: array
          items:
            type: string
        join_separator:
          type: string
        ranked_choice:
          type: array
          items:
            type: string
        transform_label:
          type: string
        transform_operation:
          type: string
        transform_arg:
          type: string
        target_label:
          type: string
    MimirRelabelRuleGroup:
      type: object
      properties:
        name:
          type: string
        order:
          type: integer
          format: int32
        selector:
          type: string
        dataset:
          type: string
        rules:
          type: array
          items:
            $ref: "#/components/schemas/MimirRelabelRule"
          properties:
            empty:
              type: boolean
            first:
              $ref: "#/components/schemas/MimirRelabelRule"
            last:
              $ref: "#/components/schemas/MimirRelabelRule"
        vendor_lookup_query:
          type: string
        metric_regex:
          type: array
          items:
            type: string
          properties:
            empty:
              type: boolean
            first:
              type: string
            last:
              type: string
        sanity_metric_regex:
          type: array
          items:
            type: string
          properties:
            empty:
              type: boolean
            first:
              type: string
            last:
              type: string
    VersionedMimirRelabelRuleGroup:
      type: object
      properties:
        version:
          type: string
        ruleGroup:
          $ref: "#/components/schemas/MimirRelabelRuleGroup"
    VersionedMimirRelabelRulesPayload:
      type: object
      properties:
        generated:
          $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
        prologue:
          $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
        vendor:
          type: array
          items:
            $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
          properties:
            empty:
              type: boolean
            first:
              $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
            last:
              $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
        base:
          type: array
          items:
            $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
          properties:
            empty:
              type: boolean
            first:
              $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
            last:
              $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
        epilogue:
          $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
        modelMapped:
          type: array
          items:
            $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
          properties:
            empty:
              type: boolean
            first:
              $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
            last:
              $ref: "#/components/schemas/VersionedMimirRelabelRuleGroup"
        baseGroups:
          type: array
          items:
            type: string
          properties:
            empty:
              type: boolean
          uniqueItems: true
    VersionedRulesPayload:
      type: object
      properties:
        version:
          type: string
        rules:
          type: array
          items:
            $ref: "#/components/schemas/PrometheusRules"
          properties:
            empty:
              type: boolean
            first:
              $ref: "#/components/schemas/PrometheusRules"
            last:
              $ref: "#/components/schemas/PrometheusRules"
    DatasetSummaryDto:
      type: object
      properties:
        name:
          type: string
        detected:
          type: boolean
        enabled:
          type: boolean
        configured:
          type: boolean
    DatasetsDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/DatasetSummaryDto"
    DatasetVendorDto:
      type: object
      properties:
        detected:
          type: boolean
        enabled:
          type: boolean
        name:
          type: string
    DatasetVendorsDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/DatasetVendorDto"
    VersionDto:
      type: object
      properties:
        version:
          type: string
    VendorNamesDto:
      type: object
      properties:
        vendorNames:
          type: array
          items:
            type: string
    StackDetailDto:
      type: object
      properties:
        stackId:
          type: integer
          format: int32
        slug:
          type: string
        orgId:
          type: integer
          format: int32
        orgSlug:
          type: string
        gcomToken:
          type: string
        mimirToken:
          type: string
        assertionDetectorToken:
          type: string
        enabled:
          type: boolean
        alertManagerConfigured:
          type: boolean
        graphInstanceCreated:
          type: boolean
        status:
          type: string
        disabledTime:
          type: string
          format: date-time
    VendorIntegrationDto:
      type: object
      properties:
        name:
          type: string
        enabled:
          type: boolean
        assertified:
          type: boolean
    VendorIntegrationsDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/VendorIntegrationDto"
    StackUpdateBucketDto:
      type: object
      properties:
        bucket:
          type: integer
          format: int32
        startDay:
          type: string
        durationFromStart:
          type: string
        startTime:
          type: string
        zoneOffset:
          type: string
        timestamp:
          type: string
    MetricSanityCheckDto:
      type: object
      properties:
        failedSanityCheckSteps:
          type: array
          items:
            $ref: "#/components/schemas/MetricSanityCheckResult"
    StackInfosDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/StackInfoDto"
    SearchDefinitionItemDto:
      type: object
      properties:
        id:
          type: string
        score:
          type: number
          format: double
        definitionId:
          type: integer
          format: int32
        boundDescription:
          type: string
        description:
          type: string
        bindings:
          type: object
          additionalProperties: {}
        filterCriteria:
          type: array
          items:
            $ref: "#/components/schemas/EntityMatcherDto"
    SearchDefinitionResponseDto:
      type: object
      properties:
        totalResults:
          type: integer
          format: int64
        pageResults:
          type: integer
          format: int64
        maxResults:
          type: integer
          format: int64
        offset:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/SearchDefinitionItemDto"
    AutoCompleteItemDto:
      type: object
      properties:
        string:
          type: string
        payload:
          type: string
    AutoCompleteResponseDto:
      type: object
      properties:
        index:
          type: string
        maxResults:
          type: integer
          format: int32
        fuzzy:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/AutoCompleteItemDto"
    VersionedAlertManagerPayload:
      type: object
      properties:
        version:
          type: string
        config:
          $ref: "#/components/schemas/AlertManagerConfig"
    EntityKpiScopeDto:
      type: object
      properties:
        type:
          type: string
        kpis:
          type: array
          items:
            type: string
    KpiGroupDto:
      type: object
      properties:
        name:
          type: string
        kpis:
          type: array
          items:
            $ref: "#/components/schemas/KpiNameDto"
    KpiListDto:
      type: object
      properties:
        kpiGroups:
          type: array
          items:
            $ref: "#/components/schemas/KpiGroupDto"
        kpisByEntityType:
          type: array
          items:
            $ref: "#/components/schemas/EntityKpiScopeDto"
    KpiNameDto:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        unit:
          type: string
    EntityPropertyDto:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        uom:
          type: string
          enum:
            - MB
            - GB
            - '%'
    EntityTypeDto:
      type: object
      properties:
        entityType:
          type: string
        name:
          type: string
        lookup:
          type: object
          additionalProperties:
            type: string
        properties:
          type: array
          items:
            $ref: "#/components/schemas/EntityPropertyDto"
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
        active:
          type: boolean
        connectedEntityTypes:
          type: array
          items:
            type: string
    EntityTypesDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: "#/components/schemas/EntityTypeDto"
    GraphEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        name:
          type: string
        active:
          type: boolean
        connectedEntityTypes:
          type: object
          additionalProperties:
            type: integer
            format: int32
        properties:
          type: object
          additionalProperties: {}
        propertyMatcher:
          type: object
          additionalProperties: {}
        scopeNames:
          type: object
          additionalProperties: {}
        scope:
          type: object
          additionalProperties: {}
          properties:
            empty:
              type: boolean
        assertion:
          $ref: "#/components/schemas/GraphAssertionSummary"
        connectedAssertion:
          $ref: "#/components/schemas/GraphAssertionSummary"
        assertionCount:
          type: integer
          format: int32
        key:
          $ref: "#/components/schemas/KGEntityKey"
    KGEntityKey:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        kgScope:
          $ref: "#/components/schemas/KGScope"
    KGScope:
      type: object
      properties:
        propertyMatcher:
          type: object
          additionalProperties: {}
        scopeNames:
          type: object
          additionalProperties: {}
        scope:
          type: object
          additionalProperties: {}
          properties:
            empty:
              type: boolean
    TraceEnvConfigResponseDto:
      type: object
      properties:
        traceEnvConfigDtos:
          type: array
          items:
            $ref: "#/components/schemas/TraceEnvConfigDto"
        supportedTraceTools:
          type: array
          items:
            type: string
    ThresholdRulesDto:
      type: object
      properties:
        globalThresholds:
          type: array
          items:
            $ref: "#/components/schemas/PrometheusRuleDto"
        customThresholds:
          type: array
          items:
            $ref: "#/components/schemas/PrometheusRuleDto"
    SloConfigResponseDto:
      type: object
      properties:
        active:
          type: boolean
        name:
          type: string
        status:
          type: string
        indicator:
          oneOf:
            - $ref: "#/components/schemas/OccurrenceSliConfigDto"
            - $ref: "#/components/schemas/RequestSliConfigDto"
        objectives:
          type: array
          items:
            $ref: "#/components/schemas/SloConfigDto"
        entitySearch:
          type: string
    RuleNamesDto:
      type: object
      properties:
        ruleNames:
          type: array
          items:
            type: string
    DisabledRulesDto:
      type: object
      properties:
        disabled:
          type: array
          items:
            type: string
          uniqueItems: true
    ModelRuleNamesDto:
      type: object
      properties:
        ruleNames:
          type: array
          items:
            type: string
    TenantEnvConfigResponseDto:
      type: object
      properties:
        environments:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentDto"
        supportedLogTools:
          type: array
          items:
            type: string
    DataSourcePromDto:
      type: object
      properties:
        promDatasourceName:
          type: string
    CustomDashConfigsDto:
      type: object
      properties:
        entityType:
          type: string
        dashConfigDto:
          type: array
          items:
            $ref: "#/components/schemas/CustomDashConfigDto"
    CustomKpiDashConfigDto:
      type: object
      properties:
        kpiDashConfigs:
          type: array
          items:
            $ref: "#/components/schemas/CustomDashConfigsDto"
  parameters:
    TenantId:
      name: X-Scope-OrgID
      in: header
      description: Grafana Tenant/Stack ID
      schema:
        type: string
      example: "2944"
